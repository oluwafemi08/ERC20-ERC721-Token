{
	"id": "b31e8ced356d53b1c848dd72cfa2e93b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"RabaToken_flat.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = _allowances[owner][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n// File: contracts/RabaToken.sol\n\n\npragma solidity ^0.8.4;\n\n\n\ncontract RabaToken is ERC20, Ownable {\n\n    uint public rate;  //= 1000 * 10 ** decimals();\n    uint FixedSupply ;\n\n    \n    constructor() ERC20(\"RabaToken\", \"RTK\") {\n        rate = 10000;\n        FixedSupply = 1000000 * 10 ** decimals();\n        _mint(msg.sender, 1000000 * 10 ** decimals());\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n\nfunction buyToken(address to) public payable {\n\n    require(msg.value >= 0, \"You can not mint with zero Eth\");\n\n    uint256 amountToBuy = msg.value * rate;\n    require(FixedSupply >= (totalSupply() + amountToBuy), \"Cannot exceed fixed supply\");\n    _mint(to, amountToBuy);\n    \n\n}\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"RabaToken_flat.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RabaToken_flat.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RabaToken_flat.sol\":{\"keccak256\":\"0x7f0b35534ba6ff633d95c63accb259df4ad4fdcbbe5a4c253eef84f4c7bc59d9\",\"urls\":[\"bzz-raw://ade4e58e9493e5dcbaf5449f76416fa5a17858ce1461043c9db66b193eb71abd\",\"dweb:/ipfs/QmUKPSvhS9HcfkJJb2AQn7qrufkPdijiBNii1Phm3tKeFC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RabaToken_flat.sol\":8149:19372  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"RabaToken_flat.sol\":8724:8837  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"RabaToken_flat.sol\":8790:8803  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"RabaToken_flat.sol\":8790:8795  _name */\n  0x03\n  swap1\n    /* \"RabaToken_flat.sol\":8790:8803  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"RabaToken_flat.sol\":8813:8830  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"RabaToken_flat.sol\":8813:8820  _symbol */\n  0x04\n  swap1\n    /* \"RabaToken_flat.sol\":8813:8830  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"RabaToken_flat.sol\":8724:8837  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"RabaToken_flat.sol\":8149:19372  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:923   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:90   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":143:148   */\n  dup1\n    /* \"#utility.yul\":136:141   */\n  dup2\n    /* \"#utility.yul\":129:149   */\n  revert\n    /* \"#utility.yul\":88:90   */\ntag_24:\n    /* \"#utility.yul\":170:183   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":232:242   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":229:231   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":245:263   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":320:322   */\n  0x40\n    /* \"#utility.yul\":314:323   */\n  mload\n    /* \"#utility.yul\":288:290   */\n  0x1f\n    /* \"#utility.yul\":374:387   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":370:392   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":394:396   */\n  0x3f\n    /* \"#utility.yul\":366:397   */\n  add\n    /* \"#utility.yul\":362:402   */\n  and\n    /* \"#utility.yul\":350:403   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":418:436   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":438:460   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":415:461   */\n  or\n    /* \"#utility.yul\":412:414   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":464:482   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":504:514   */\n  dup2\n    /* \"#utility.yul\":500:502   */\n  0x40\n    /* \"#utility.yul\":493:515   */\n  mstore\n    /* \"#utility.yul\":539:541   */\n  dup4\n    /* \"#utility.yul\":531:537   */\n  dup2\n    /* \"#utility.yul\":524:542   */\n  mstore\n    /* \"#utility.yul\":561:565   */\n  0x20\n    /* \"#utility.yul\":551:565   */\n  swap3\n  pop\n    /* \"#utility.yul\":606:609   */\n  dup7\n    /* \"#utility.yul\":601:603   */\n  dup4\n    /* \"#utility.yul\":596:598   */\n  dup6\n    /* \"#utility.yul\":588:594   */\n  dup9\n    /* \"#utility.yul\":584:599   */\n  add\n    /* \"#utility.yul\":580:604   */\n  add\n    /* \"#utility.yul\":577:610   */\n  gt\n    /* \"#utility.yul\":574:576   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":627:632   */\n  dup5\n    /* \"#utility.yul\":620:625   */\n  dup6\n    /* \"#utility.yul\":613:633   */\n  revert\n    /* \"#utility.yul\":574:576   */\ntag_30:\n    /* \"#utility.yul\":653:658   */\n  dup5\n    /* \"#utility.yul\":644:658   */\n  swap2\n  pop\n    /* \"#utility.yul\":667:800   */\ntag_31:\n    /* \"#utility.yul\":681:683   */\n  dup4\n    /* \"#utility.yul\":678:679   */\n  dup3\n    /* \"#utility.yul\":675:684   */\n  lt\n    /* \"#utility.yul\":667:800   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":769:783   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":765:788   */\n  dup4\n  add\n    /* \"#utility.yul\":759:789   */\n  mload\n    /* \"#utility.yul\":738:752   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":734:757   */\n  dup5\n  add\n    /* \"#utility.yul\":727:790   */\n  mstore\n    /* \"#utility.yul\":692:702   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":667:800   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":818:820   */\n  dup4\n    /* \"#utility.yul\":815:816   */\n  dup3\n    /* \"#utility.yul\":812:821   */\n  gt\n    /* \"#utility.yul\":809:811   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":877:882   */\n  dup5\n    /* \"#utility.yul\":872:874   */\n  dup4\n    /* \"#utility.yul\":867:869   */\n  dup6\n    /* \"#utility.yul\":859:865   */\n  dup4\n    /* \"#utility.yul\":855:870   */\n  add\n    /* \"#utility.yul\":851:875   */\n  add\n    /* \"#utility.yul\":844:883   */\n  mstore\n    /* \"#utility.yul\":809:811   */\ntag_34:\n    /* \"#utility.yul\":911:917   */\n  swap7\n    /* \"#utility.yul\":78:923   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1520   */\ntag_3:\n    /* \"#utility.yul\":1027:1033   */\n  0x00\n    /* \"#utility.yul\":1035:1041   */\n  dup1\n    /* \"#utility.yul\":1088:1090   */\n  0x40\n    /* \"#utility.yul\":1076:1085   */\n  dup4\n    /* \"#utility.yul\":1067:1074   */\n  dup6\n    /* \"#utility.yul\":1063:1086   */\n  sub\n    /* \"#utility.yul\":1059:1091   */\n  slt\n    /* \"#utility.yul\":1056:1058   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1109:1115   */\n  dup2\n    /* \"#utility.yul\":1101:1107   */\n  dup3\n    /* \"#utility.yul\":1094:1116   */\n  revert\n    /* \"#utility.yul\":1056:1058   */\ntag_36:\n    /* \"#utility.yul\":1141:1157   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1206:1220   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1203:1205   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1238:1244   */\n  dup4\n    /* \"#utility.yul\":1230:1236   */\n  dup5\n    /* \"#utility.yul\":1223:1245   */\n  revert\n    /* \"#utility.yul\":1203:1205   */\ntag_37:\n    /* \"#utility.yul\":1266:1327   */\n  tag_38\n    /* \"#utility.yul\":1319:1326   */\n  dup7\n    /* \"#utility.yul\":1310:1316   */\n  dup4\n    /* \"#utility.yul\":1299:1308   */\n  dup8\n    /* \"#utility.yul\":1295:1317   */\n  add\n    /* \"#utility.yul\":1266:1327   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1256:1327   */\n  swap4\n  pop\n    /* \"#utility.yul\":1373:1375   */\n  0x20\n    /* \"#utility.yul\":1362:1371   */\n  dup6\n    /* \"#utility.yul\":1358:1376   */\n  add\n    /* \"#utility.yul\":1352:1377   */\n  mload\n    /* \"#utility.yul\":1336:1377   */\n  swap2\n  pop\n    /* \"#utility.yul\":1402:1404   */\n  dup1\n    /* \"#utility.yul\":1392:1400   */\n  dup3\n    /* \"#utility.yul\":1389:1405   */\n  gt\n    /* \"#utility.yul\":1386:1388   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1423:1429   */\n  dup3\n    /* \"#utility.yul\":1415:1421   */\n  dup4\n    /* \"#utility.yul\":1408:1430   */\n  revert\n    /* \"#utility.yul\":1386:1388   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1451:1514   */\n  tag_40\n    /* \"#utility.yul\":1506:1513   */\n  dup6\n    /* \"#utility.yul\":1495:1503   */\n  dup3\n    /* \"#utility.yul\":1484:1493   */\n  dup7\n    /* \"#utility.yul\":1480:1504   */\n  add\n    /* \"#utility.yul\":1451:1514   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1441:1514   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1046:1520   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1525:1905   */\ntag_11:\n    /* \"#utility.yul\":1604:1605   */\n  0x01\n    /* \"#utility.yul\":1600:1612   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1647:1659   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1668:1670   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1722:1726   */\n  0x7f\n    /* \"#utility.yul\":1714:1720   */\n  dup3\n    /* \"#utility.yul\":1710:1727   */\n  and\n    /* \"#utility.yul\":1700:1727   */\n  swap2\n  pop\n    /* \"#utility.yul\":1668:1670   */\ntag_42:\n    /* \"#utility.yul\":1775:1777   */\n  0x20\n    /* \"#utility.yul\":1767:1773   */\n  dup3\n    /* \"#utility.yul\":1764:1778   */\n  lt\n    /* \"#utility.yul\":1744:1762   */\n  dup2\n    /* \"#utility.yul\":1741:1779   */\n  eq\n    /* \"#utility.yul\":1738:1740   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1821:1831   */\n  0x4e487b71\n    /* \"#utility.yul\":1816:1819   */\n  0xe0\n    /* \"#utility.yul\":1812:1832   */\n  shl\n    /* \"#utility.yul\":1809:1810   */\n  0x00\n    /* \"#utility.yul\":1802:1833   */\n  mstore\n    /* \"#utility.yul\":1856:1860   */\n  0x22\n    /* \"#utility.yul\":1853:1854   */\n  0x04\n    /* \"#utility.yul\":1846:1861   */\n  mstore\n    /* \"#utility.yul\":1884:1888   */\n  0x24\n    /* \"#utility.yul\":1881:1882   */\n  0x00\n    /* \"#utility.yul\":1874:1889   */\n  revert\n    /* \"#utility.yul\":1738:1740   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1580:1905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1910:2037   */\ntag_27:\n    /* \"#utility.yul\":1971:1981   */\n  0x4e487b71\n    /* \"#utility.yul\":1966:1969   */\n  0xe0\n    /* \"#utility.yul\":1962:1982   */\n  shl\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1983   */\n  mstore\n    /* \"#utility.yul\":2002:2006   */\n  0x41\n    /* \"#utility.yul\":1999:2000   */\n  0x04\n    /* \"#utility.yul\":1992:2007   */\n  mstore\n    /* \"#utility.yul\":2026:2030   */\n  0x24\n    /* \"#utility.yul\":2023:2024   */\n  0x00\n    /* \"#utility.yul\":2016:2031   */\n  revert\n    /* \"#utility.yul\":1942:2037   */\ntag_21:\n    /* \"RabaToken_flat.sol\":8149:19372  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"RabaToken_flat.sol\":8149:19372  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"RabaToken_flat.sol\":8902:9000  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RabaToken_flat.sol\":11179:11376  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1445:1459   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1438:1460   */\n      iszero\n        /* \"#utility.yul\":1420:1461   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1408:1410   */\n      0x20\n        /* \"#utility.yul\":1393:1411   */\n      add\n        /* \"RabaToken_flat.sol\":11179:11376  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1375:1467   */\n      jump\n        /* \"RabaToken_flat.sol\":9990:10096  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"RabaToken_flat.sol\":10077:10089  _totalSupply */\n      sload(0x02)\n        /* \"RabaToken_flat.sol\":9990:10096  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5015:5040   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5003:5005   */\n      0x20\n        /* \"#utility.yul\":4988:5006   */\n      add\n        /* \"RabaToken_flat.sol\":9990:10096  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4970:5046   */\n      jump\n        /* \"RabaToken_flat.sol\":11938:12224  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"RabaToken_flat.sol\":9839:9930  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"RabaToken_flat.sol\":9921:9923  18 */\n      0x12\n        /* \"#utility.yul\":5193:5229   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5181:5183   */\n      0x20\n        /* \"#utility.yul\":5166:5184   */\n      add\n        /* \"RabaToken_flat.sol\":9839:9930  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5148:5235   */\n      jump\n        /* \"RabaToken_flat.sol\":12619:12855  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"RabaToken_flat.sol\":10154:10279  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":10254:10272  _balances[account] */\n      and\n        /* \"RabaToken_flat.sol\":10228:10235  uint256 */\n      0x00\n        /* \"RabaToken_flat.sol\":10254:10272  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"RabaToken_flat.sol\":10154:10279  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"RabaToken_flat.sol\":9113:9215  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"RabaToken_flat.sol\":13342:13771  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"RabaToken_flat.sol\":10475:10664  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"RabaToken_flat.sol\":10722:10871  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":10837:10855  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"RabaToken_flat.sol\":10811:10818  uint256 */\n      0x00\n        /* \"RabaToken_flat.sol\":10837:10855  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"RabaToken_flat.sol\":10837:10848  _allowances */\n      0x01\n        /* \"RabaToken_flat.sol\":10837:10855  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RabaToken_flat.sol\":10837:10864  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"RabaToken_flat.sol\":10722:10871  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"RabaToken_flat.sol\":8902:9000  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"RabaToken_flat.sol\":8956:8969  string memory */\n      0x60\n        /* \"RabaToken_flat.sol\":8988:8993  _name */\n      0x03\n        /* \"RabaToken_flat.sol\":8981:8993  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"RabaToken_flat.sol\":8902:9000  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"RabaToken_flat.sol\":11179:11376  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"RabaToken_flat.sol\":11262:11266  bool */\n      0x00\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":11316:11348  _approve(owner, spender, amount) */\n      tag_73\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      dup2\n        /* \"RabaToken_flat.sol\":11332:11339  spender */\n      dup6\n        /* \"RabaToken_flat.sol\":11341:11347  amount */\n      dup6\n        /* \"RabaToken_flat.sol\":11316:11324  _approve */\n      tag_74\n        /* \"RabaToken_flat.sol\":11316:11348  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"RabaToken_flat.sol\":11365:11369  true */\n      0x01\n      swap4\n        /* \"RabaToken_flat.sol\":11179:11376  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RabaToken_flat.sol\":11938:12224  function transferFrom(... */\n    tag_32:\n        /* \"RabaToken_flat.sol\":12065:12069  bool */\n      0x00\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":12121:12159  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"RabaToken_flat.sol\":12137:12141  from */\n      dup6\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      dup3\n        /* \"RabaToken_flat.sol\":12152:12158  amount */\n      dup6\n        /* \"RabaToken_flat.sol\":12121:12136  _spendAllowance */\n      tag_79\n        /* \"RabaToken_flat.sol\":12121:12159  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"RabaToken_flat.sol\":12169:12196  _transfer(from, to, amount) */\n      tag_80\n        /* \"RabaToken_flat.sol\":12179:12183  from */\n      dup6\n        /* \"RabaToken_flat.sol\":12185:12187  to */\n      dup6\n        /* \"RabaToken_flat.sol\":12189:12195  amount */\n      dup6\n        /* \"RabaToken_flat.sol\":12169:12178  _transfer */\n      tag_81\n        /* \"RabaToken_flat.sol\":12169:12196  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"RabaToken_flat.sol\":12213:12217  true */\n      0x01\n      swap5\n        /* \"RabaToken_flat.sol\":11938:12224  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RabaToken_flat.sol\":12619:12855  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":12707:12711  bool */\n      0x00\n        /* \"RabaToken_flat.sol\":12786:12804  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"RabaToken_flat.sol\":12786:12797  _allowances */\n      0x01\n        /* \"RabaToken_flat.sol\":12786:12804  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":12786:12813  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"RabaToken_flat.sol\":12707:12711  bool */\n      swap1\n      swap2\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      swap1\n        /* \"RabaToken_flat.sol\":12761:12827  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      tag_73\n      swap1\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      dup3\n      swap1\n        /* \"RabaToken_flat.sol\":12786:12813  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"RabaToken_flat.sol\":12786:12826  _allowances[owner][spender] + addedValue */\n      tag_86\n      swap1\n        /* \"RabaToken_flat.sol\":12816:12826  addedValue */\n      dup8\n      swap1\n        /* \"RabaToken_flat.sol\":12786:12826  _allowances[owner][spender] + addedValue */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"RabaToken_flat.sol\":12761:12769  _approve */\n      tag_74\n        /* \"RabaToken_flat.sol\":12761:12827  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"RabaToken_flat.sol\":9113:9215  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"RabaToken_flat.sol\":9169:9182  string memory */\n      0x60\n        /* \"RabaToken_flat.sol\":9201:9208  _symbol */\n      0x04\n        /* \"RabaToken_flat.sol\":9194:9208  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"RabaToken_flat.sol\":13342:13771  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":13435:13439  bool */\n      0x00\n        /* \"RabaToken_flat.sol\":13516:13534  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"RabaToken_flat.sol\":13516:13527  _allowances */\n      0x01\n        /* \"RabaToken_flat.sol\":13516:13534  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":13516:13543  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"RabaToken_flat.sol\":13435:13439  bool */\n      swap1\n      swap2\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      swap1\n        /* \"RabaToken_flat.sol\":13561:13596  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"RabaToken_flat.sol\":13553:13638  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4665:4667   */\n      0x20\n        /* \"RabaToken_flat.sol\":13553:13638  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4647:4668   */\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x25\n        /* \"#utility.yul\":4684:4702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4677:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4777   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4723:4741   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4716:4778   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4794:4812   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4787:4822   */\n      mstore\n        /* \"#utility.yul\":4839:4858   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":13553:13638  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"RabaToken_flat.sol\":13672:13732  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"RabaToken_flat.sol\":13681:13686  owner */\n      dup3\n        /* \"RabaToken_flat.sol\":13688:13695  spender */\n      dup7\n        /* \"RabaToken_flat.sol\":13716:13731  subtractedValue */\n      dup7\n        /* \"RabaToken_flat.sol\":13697:13713  currentAllowance */\n      dup5\n        /* \"RabaToken_flat.sol\":13697:13731  currentAllowance - subtractedValue */\n      sub\n        /* \"RabaToken_flat.sol\":13672:13680  _approve */\n      tag_74\n        /* \"RabaToken_flat.sol\":13672:13732  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"RabaToken_flat.sol\":10475:10664  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"RabaToken_flat.sol\":10554:10558  bool */\n      0x00\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":10608:10636  _transfer(owner, to, amount) */\n      tag_73\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      dup2\n        /* \"RabaToken_flat.sol\":10625:10627  to */\n      dup6\n        /* \"RabaToken_flat.sol\":10629:10635  amount */\n      dup6\n        /* \"RabaToken_flat.sol\":10608:10617  _transfer */\n      tag_81\n        /* \"RabaToken_flat.sol\":10608:10636  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"RabaToken_flat.sol\":16869:17239  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":17000:17019  owner != address(0) */\n      dup4\n      and\n        /* \"RabaToken_flat.sol\":16992:17060  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4260:4262   */\n      0x20\n        /* \"RabaToken_flat.sol\":16992:17060  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4242:4263   */\n      mstore\n        /* \"#utility.yul\":4299:4301   */\n      0x24\n        /* \"#utility.yul\":4279:4297   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4272:4302   */\n      mstore\n        /* \"#utility.yul\":4338:4372   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4318:4336   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4311:4373   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4389:4407   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4382:4416   */\n      mstore\n        /* \"#utility.yul\":4433:4452   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":16992:17060  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_98\n        /* \"#utility.yul\":4232:4458   */\n      jump\n        /* \"RabaToken_flat.sol\":16992:17060  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":17078:17099  spender != address(0) */\n      dup3\n      and\n        /* \"RabaToken_flat.sol\":17070:17138  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2686:2688   */\n      0x20\n        /* \"RabaToken_flat.sol\":17070:17138  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2668:2689   */\n      mstore\n        /* \"#utility.yul\":2725:2727   */\n      0x22\n        /* \"#utility.yul\":2705:2723   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2698:2728   */\n      mstore\n        /* \"#utility.yul\":2764:2798   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2744:2762   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2737:2799   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2815:2833   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2808:2840   */\n      mstore\n        /* \"#utility.yul\":2857:2876   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":17070:17138  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":2658:2882   */\n      jump\n        /* \"RabaToken_flat.sol\":17070:17138  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":17149:17167  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"RabaToken_flat.sol\":17149:17160  _allowances */\n      0x01\n        /* \"RabaToken_flat.sol\":17149:17167  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RabaToken_flat.sol\":17149:17176  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"RabaToken_flat.sol\":17149:17185  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"RabaToken_flat.sol\":17200:17232  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5015:5040   */\n      dup5\n      dup2\n      mstore\n        /* \"RabaToken_flat.sol\":17200:17232  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4988:5006   */\n      add\n        /* \"RabaToken_flat.sol\":17200:17232  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"RabaToken_flat.sol\":16869:17239  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RabaToken_flat.sol\":17516:17957  function _spendAllowance(... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":10837:10855  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"RabaToken_flat.sol\":17646:17670  uint256 currentAllowance */\n      0x00\n        /* \"RabaToken_flat.sol\":10837:10855  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"RabaToken_flat.sol\":10837:10848  _allowances */\n      0x01\n        /* \"RabaToken_flat.sol\":10837:10855  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RabaToken_flat.sol\":10837:10864  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"RabaToken_flat.sol\":17712:17749  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"RabaToken_flat.sol\":17708:17951  if (currentAllowance != type(uint256).max) {... */\n      tag_120\n      jumpi\n        /* \"RabaToken_flat.sol\":17793:17799  amount */\n      dup2\n        /* \"RabaToken_flat.sol\":17773:17789  currentAllowance */\n      dup2\n        /* \"RabaToken_flat.sol\":17773:17799  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"RabaToken_flat.sol\":17765:17833  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3089:3091   */\n      0x20\n        /* \"RabaToken_flat.sol\":17765:17833  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3071:3092   */\n      mstore\n        /* \"#utility.yul\":3128:3130   */\n      0x1d\n        /* \"#utility.yul\":3108:3126   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3101:3131   */\n      mstore\n        /* \"#utility.yul\":3167:3198   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3147:3165   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3140:3199   */\n      mstore\n        /* \"#utility.yul\":3216:3234   */\n      0x64\n      add\n        /* \"RabaToken_flat.sol\":17765:17833  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_98\n        /* \"#utility.yul\":3061:3240   */\n      jump\n        /* \"RabaToken_flat.sol\":17765:17833  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_117:\n        /* \"RabaToken_flat.sol\":17875:17926  _approve(owner, spender, currentAllowance - amount) */\n      tag_120\n        /* \"RabaToken_flat.sol\":17884:17889  owner */\n      dup5\n        /* \"RabaToken_flat.sol\":17891:17898  spender */\n      dup5\n        /* \"RabaToken_flat.sol\":17919:17925  amount */\n      dup5\n        /* \"RabaToken_flat.sol\":17900:17916  currentAllowance */\n      dup5\n        /* \"RabaToken_flat.sol\":17900:17925  currentAllowance - amount */\n      sub\n        /* \"RabaToken_flat.sol\":17875:17883  _approve */\n      tag_74\n        /* \"RabaToken_flat.sol\":17875:17926  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_120:\n        /* \"RabaToken_flat.sol\":17516:17957  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RabaToken_flat.sol\":14234:14885  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":14360:14378  from != address(0) */\n      dup4\n      and\n        /* \"RabaToken_flat.sol\":14352:14420  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3854:3856   */\n      0x20\n        /* \"RabaToken_flat.sol\":14352:14420  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3836:3857   */\n      mstore\n        /* \"#utility.yul\":3893:3895   */\n      0x25\n        /* \"#utility.yul\":3873:3891   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3866:3896   */\n      mstore\n        /* \"#utility.yul\":3932:3966   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3912:3930   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3905:3967   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3983:4001   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3976:4011   */\n      mstore\n        /* \"#utility.yul\":4028:4047   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":14352:14420  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_98\n        /* \"#utility.yul\":3826:4053   */\n      jump\n        /* \"RabaToken_flat.sol\":14352:14420  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":14438:14454  to != address(0) */\n      dup3\n      and\n        /* \"RabaToken_flat.sol\":14430:14494  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2282:2284   */\n      0x20\n        /* \"RabaToken_flat.sol\":14430:14494  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2264:2285   */\n      mstore\n        /* \"#utility.yul\":2321:2323   */\n      0x23\n        /* \"#utility.yul\":2301:2319   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2294:2324   */\n      mstore\n        /* \"#utility.yul\":2360:2394   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2340:2358   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2333:2395   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2411:2429   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2404:2437   */\n      mstore\n        /* \"#utility.yul\":2454:2473   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":14430:14494  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":2254:2479   */\n      jump\n        /* \"RabaToken_flat.sol\":14430:14494  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":14576:14591  _balances[from] */\n      dup4\n      and\n        /* \"RabaToken_flat.sol\":14554:14573  uint256 fromBalance */\n      0x00\n        /* \"RabaToken_flat.sol\":14576:14591  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RabaToken_flat.sol\":14609:14630  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"RabaToken_flat.sol\":14601:14673  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"RabaToken_flat.sol\":14601:14673  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3429:3450   */\n      mstore\n        /* \"#utility.yul\":3486:3488   */\n      0x26\n        /* \"#utility.yul\":3466:3484   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3459:3489   */\n      mstore\n        /* \"#utility.yul\":3525:3559   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3505:3523   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3498:3560   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3576:3594   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3569:3605   */\n      mstore\n        /* \"#utility.yul\":3622:3641   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":14601:14673  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_98\n        /* \"#utility.yul\":3419:3647   */\n      jump\n        /* \"RabaToken_flat.sol\":14601:14673  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":14707:14722  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"RabaToken_flat.sol\":14707:14716  _balances */\n      0x00\n        /* \"RabaToken_flat.sol\":14707:14722  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"RabaToken_flat.sol\":14725:14745  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"RabaToken_flat.sol\":14707:14745  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"RabaToken_flat.sol\":14765:14778  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"RabaToken_flat.sol\":14765:14788  _balances[to] += amount */\n      dup1\n      sload\n        /* \"RabaToken_flat.sol\":14739:14745  amount */\n      dup5\n      swap3\n        /* \"RabaToken_flat.sol\":14707:14716  _balances */\n      swap1\n        /* \"RabaToken_flat.sol\":14765:14788  _balances[to] += amount */\n      tag_133\n      swap1\n        /* \"RabaToken_flat.sol\":14739:14745  amount */\n      dup5\n      swap1\n        /* \"RabaToken_flat.sol\":14765:14788  _balances[to] += amount */\n      tag_87\n      jump\t// in\n    tag_133:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RabaToken_flat.sol\":14819:14821  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":14804:14830  Transfer(from, to, amount) */\n      and\n        /* \"RabaToken_flat.sol\":14813:14817  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":14804:14830  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"RabaToken_flat.sol\":14823:14829  amount */\n      dup5\n        /* \"RabaToken_flat.sol\":14804:14830  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_134\n      swap2\n        /* \"#utility.yul\":5015:5040   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5003:5005   */\n      0x20\n        /* \"#utility.yul\":4988:5006   */\n      add\n      swap1\n        /* \"#utility.yul\":4970:5046   */\n      jump\n        /* \"RabaToken_flat.sol\":14804:14830  Transfer(from, to, amount) */\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"RabaToken_flat.sol\":14841:14878  _afterTokenTransfer(from, to, amount) */\n      tag_120\n        /* \"RabaToken_flat.sol\":18541:18662  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_140:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_142:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:388   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_144:\n        /* \"#utility.yul\":353:382   */\n      tag_145\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_140\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":343:382   */\n      swap4\n        /* \"#utility.yul\":262:388   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":393:663   */\n    tag_60:\n        /* \"#utility.yul\":461:467   */\n      0x00\n        /* \"#utility.yul\":469:475   */\n      dup1\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":510:519   */\n      dup4\n        /* \"#utility.yul\":501:508   */\n      dup6\n        /* \"#utility.yul\":497:520   */\n      sub\n        /* \"#utility.yul\":493:525   */\n      slt\n        /* \"#utility.yul\":490:492   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":543:549   */\n      dup1\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":528:550   */\n      revert\n        /* \"#utility.yul\":490:492   */\n    tag_147:\n        /* \"#utility.yul\":571:600   */\n      tag_148\n        /* \"#utility.yul\":590:599   */\n      dup4\n        /* \"#utility.yul\":571:600   */\n      tag_140\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":561:600   */\n      swap2\n      pop\n        /* \"#utility.yul\":619:657   */\n      tag_149\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":642:651   */\n      dup5\n        /* \"#utility.yul\":638:656   */\n      add\n        /* \"#utility.yul\":619:657   */\n      tag_140\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":609:657   */\n      swap1\n      pop\n        /* \"#utility.yul\":480:663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:1006   */\n    tag_31:\n        /* \"#utility.yul\":745:751   */\n      0x00\n        /* \"#utility.yul\":753:759   */\n      dup1\n        /* \"#utility.yul\":761:767   */\n      0x00\n        /* \"#utility.yul\":814:816   */\n      0x60\n        /* \"#utility.yul\":802:811   */\n      dup5\n        /* \"#utility.yul\":793:800   */\n      dup7\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:784   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":835:841   */\n      dup1\n        /* \"#utility.yul\":827:833   */\n      dup2\n        /* \"#utility.yul\":820:842   */\n      revert\n        /* \"#utility.yul\":782:784   */\n    tag_151:\n        /* \"#utility.yul\":863:892   */\n      tag_152\n        /* \"#utility.yul\":882:891   */\n      dup5\n        /* \"#utility.yul\":863:892   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":853:892   */\n      swap3\n      pop\n        /* \"#utility.yul\":911:949   */\n      tag_153\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup6\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":911:949   */\n      tag_140\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":901:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":996:998   */\n      0x40\n        /* \"#utility.yul\":985:994   */\n      dup5\n        /* \"#utility.yul\":981:999   */\n      add\n        /* \"#utility.yul\":968:1000   */\n      calldataload\n        /* \"#utility.yul\":958:1000   */\n      swap1\n      pop\n        /* \"#utility.yul\":772:1006   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1011:1275   */\n    tag_21:\n        /* \"#utility.yul\":1079:1085   */\n      0x00\n        /* \"#utility.yul\":1087:1093   */\n      dup1\n        /* \"#utility.yul\":1140:1142   */\n      0x40\n        /* \"#utility.yul\":1128:1137   */\n      dup4\n        /* \"#utility.yul\":1119:1126   */\n      dup6\n        /* \"#utility.yul\":1115:1138   */\n      sub\n        /* \"#utility.yul\":1111:1143   */\n      slt\n        /* \"#utility.yul\":1108:1110   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1161:1167   */\n      dup2\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1146:1168   */\n      revert\n        /* \"#utility.yul\":1108:1110   */\n    tag_155:\n        /* \"#utility.yul\":1189:1218   */\n      tag_156\n        /* \"#utility.yul\":1208:1217   */\n      dup4\n        /* \"#utility.yul\":1189:1218   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1179:1218   */\n      swap5\n        /* \"#utility.yul\":1265:1267   */\n      0x20\n        /* \"#utility.yul\":1250:1268   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1237:1269   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1275   */\n      jump\t// out\n        /* \"#utility.yul\":1472:2075   */\n    tag_18:\n        /* \"#utility.yul\":1584:1588   */\n      0x00\n        /* \"#utility.yul\":1613:1615   */\n      0x20\n        /* \"#utility.yul\":1642:1644   */\n      dup1\n        /* \"#utility.yul\":1631:1640   */\n      dup4\n        /* \"#utility.yul\":1624:1645   */\n      mstore\n        /* \"#utility.yul\":1674:1680   */\n      dup4\n        /* \"#utility.yul\":1668:1681   */\n      mload\n        /* \"#utility.yul\":1717:1723   */\n      dup1\n        /* \"#utility.yul\":1712:1714   */\n      dup3\n        /* \"#utility.yul\":1701:1710   */\n      dup6\n        /* \"#utility.yul\":1697:1715   */\n      add\n        /* \"#utility.yul\":1690:1724   */\n      mstore\n        /* \"#utility.yul\":1742:1746   */\n      dup3\n        /* \"#utility.yul\":1755:1895   */\n    tag_159:\n        /* \"#utility.yul\":1769:1775   */\n      dup2\n        /* \"#utility.yul\":1766:1767   */\n      dup2\n        /* \"#utility.yul\":1763:1776   */\n      lt\n        /* \"#utility.yul\":1755:1895   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":1864:1878   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1860:1883   */\n      dup4\n      add\n        /* \"#utility.yul\":1854:1884   */\n      mload\n        /* \"#utility.yul\":1830:1847   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1849:1851   */\n      0x40\n        /* \"#utility.yul\":1826:1852   */\n      add\n        /* \"#utility.yul\":1819:1885   */\n      mstore\n        /* \"#utility.yul\":1784:1794   */\n      dup3\n      add\n        /* \"#utility.yul\":1755:1895   */\n      jump(tag_159)\n    tag_161:\n        /* \"#utility.yul\":1913:1919   */\n      dup2\n        /* \"#utility.yul\":1910:1911   */\n      dup2\n        /* \"#utility.yul\":1907:1920   */\n      gt\n        /* \"#utility.yul\":1904:1906   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1983:1987   */\n      dup4\n        /* \"#utility.yul\":1978:1980   */\n      0x40\n        /* \"#utility.yul\":1969:1975   */\n      dup4\n        /* \"#utility.yul\":1958:1967   */\n      dup8\n        /* \"#utility.yul\":1954:1976   */\n      add\n        /* \"#utility.yul\":1950:1981   */\n      add\n        /* \"#utility.yul\":1943:1988   */\n      mstore\n        /* \"#utility.yul\":1904:1906   */\n    tag_162:\n      pop\n        /* \"#utility.yul\":2059:2061   */\n      0x1f\n        /* \"#utility.yul\":2038:2053   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2034:2063   */\n      and\n        /* \"#utility.yul\":2019:2064   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2066:2068   */\n      0x40\n        /* \"#utility.yul\":2015:2069   */\n      add\n      swap4\n        /* \"#utility.yul\":1593:2075   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5240:5469   */\n    tag_87:\n        /* \"#utility.yul\":5280:5283   */\n      0x00\n        /* \"#utility.yul\":5311:5312   */\n      dup3\n        /* \"#utility.yul\":5307:5313   */\n      not\n        /* \"#utility.yul\":5304:5305   */\n      dup3\n        /* \"#utility.yul\":5301:5314   */\n      gt\n        /* \"#utility.yul\":5298:5300   */\n      iszero\n      tag_173\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5337:5370   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5393:5397   */\n      0x11\n        /* \"#utility.yul\":5390:5391   */\n      0x04\n        /* \"#utility.yul\":5383:5398   */\n      mstore\n        /* \"#utility.yul\":5423:5427   */\n      0x24\n        /* \"#utility.yul\":5344:5347   */\n      dup2\n        /* \"#utility.yul\":5411:5428   */\n      revert\n        /* \"#utility.yul\":5298:5300   */\n    tag_173:\n      pop\n        /* \"#utility.yul\":5454:5463   */\n      add\n      swap1\n        /* \"#utility.yul\":5288:5469   */\n      jump\t// out\n        /* \"#utility.yul\":5474:5854   */\n    tag_65:\n        /* \"#utility.yul\":5553:5554   */\n      0x01\n        /* \"#utility.yul\":5549:5561   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5596:5608   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5617:5619   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5671:5675   */\n      0x7f\n        /* \"#utility.yul\":5663:5669   */\n      dup3\n        /* \"#utility.yul\":5659:5676   */\n      and\n        /* \"#utility.yul\":5649:5676   */\n      swap2\n      pop\n        /* \"#utility.yul\":5617:5619   */\n    tag_175:\n        /* \"#utility.yul\":5724:5726   */\n      0x20\n        /* \"#utility.yul\":5716:5722   */\n      dup3\n        /* \"#utility.yul\":5713:5727   */\n      lt\n        /* \"#utility.yul\":5693:5711   */\n      dup2\n        /* \"#utility.yul\":5690:5728   */\n      eq\n        /* \"#utility.yul\":5687:5689   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5770:5780   */\n      0x4e487b71\n        /* \"#utility.yul\":5765:5768   */\n      0xe0\n        /* \"#utility.yul\":5761:5781   */\n      shl\n        /* \"#utility.yul\":5758:5759   */\n      0x00\n        /* \"#utility.yul\":5751:5782   */\n      mstore\n        /* \"#utility.yul\":5805:5809   */\n      0x22\n        /* \"#utility.yul\":5802:5803   */\n      0x04\n        /* \"#utility.yul\":5795:5810   */\n      mstore\n        /* \"#utility.yul\":5833:5837   */\n      0x24\n        /* \"#utility.yul\":5830:5831   */\n      0x00\n        /* \"#utility.yul\":5823:5838   */\n      revert\n        /* \"#utility.yul\":5687:5689   */\n    tag_176:\n      pop\n        /* \"#utility.yul\":5529:5854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a7b636ae1b1ce7b22c97bf2028d76d3f6942c379358acaf6c8b73048d176064764736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2039:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:845:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "136:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "143:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:1"
															},
															"nodeType": "YulIf",
															"src": "88:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "160:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "176:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "170:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "170:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "164:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "192:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "210:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "214:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "206:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "218:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "202:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "196:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "243:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "245:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "245:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "245:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "235:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "239:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "232:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:10:1"
															},
															"nodeType": "YulIf",
															"src": "229:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "274:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "284:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "284:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "278:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "300:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "314:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "314:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "304:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "332:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "354:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "378:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "382:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "374:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "374:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "389:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "370:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "370:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "394:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "366:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "366:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "399:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "362:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "350:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "336:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "464:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "421:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "433:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "441:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "453:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "438:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "438:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "415:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "415:46:1"
															},
															"nodeType": "YulIf",
															"src": "412:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "504:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "531:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "539:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "524:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "524:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "524:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "551:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "561:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "555:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "611:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "620:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "627:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "613:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "613:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "613:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "588:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "596:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "584:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "584:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "601:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "580:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "580:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "606:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "577:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:33:1"
															},
															"nodeType": "YulIf",
															"src": "574:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "644:14:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "653:5:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "648:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "713:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "742:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "750:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "738:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "738:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "754:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "734:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "734:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "773:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "781:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "769:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "769:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "785:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "765:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "765:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "759:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "759:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "727:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "727:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "727:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "678:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "681:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "675:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "685:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "687:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "696:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "699:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "692:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "687:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "671:3:1",
																"statements": []
															},
															"src": "667:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "830:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "859:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "867:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "855:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "855:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "872:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "851:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "851:24:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "877:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "844:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "844:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "844:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "815:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "818:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "812:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "812:9:1"
															},
															"nodeType": "YulIf",
															"src": "809:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "902:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "911:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "902:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:1",
														"type": ""
													}
												],
												"src": "14:909:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:474:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1092:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1101:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1109:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1094:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1094:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1067:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1076:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1063:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1088:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:32:1"
															},
															"nodeType": "YulIf",
															"src": "1056:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1127:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1147:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1141:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1131:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1166:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1184:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1188:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1180:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1192:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1176:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1170:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1221:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1230:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1238:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1223:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1209:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1217:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1206:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:14:1"
															},
															"nodeType": "YulIf",
															"src": "1203:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1299:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1310:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1295:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1319:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1266:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1336:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1362:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1373:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1352:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1340:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1406:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1415:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1423:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1408:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1408:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1408:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1392:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1402:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1389:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:16:1"
															},
															"nodeType": "YulIf",
															"src": "1386:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1441:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1484:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1495:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1480:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1480:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1506:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1451:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1004:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1015:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1027:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1035:6:1",
														"type": ""
													}
												],
												"src": "928:592:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1607:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1621:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1651:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1625:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1698:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1700:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1714:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1722:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1710:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1710:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1700:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1678:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:26:1"
															},
															"nodeType": "YulIf",
															"src": "1668:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1788:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1809:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1816:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1821:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1802:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1802:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1802:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1853:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1856:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1846:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1846:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1846:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1881:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1744:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1767:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1775:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1764:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1741:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1741:38:1"
															},
															"nodeType": "YulIf",
															"src": "1738:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1560:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1569:6:1",
														"type": ""
													}
												],
												"src": "1525:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1942:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1966:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1971:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1962:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1952:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1992:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1992:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2023:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2016:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1910:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b5138038062000b518339810160408190526200003491620001c1565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108c6806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107de565b60405180910390f35b6100df6100da3660046107b5565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461077a565b610270565b604051601281526020016100c3565b6100df6101313660046107b5565b610294565b6100f3610144366004610727565b6001600160a01b031660009081526020819052604090205490565b6100b66102d3565b6100df6101753660046107b5565b6102e2565b6100df6101883660046107b5565b610379565b6100f361019b366004610748565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610855565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610855565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610387565b5060019392505050565b60003361027e8582856104ab565b61028985858561053d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102ce908790610831565b610387565b6060600480546101d590610855565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102898286868403610387565b60003361026681858561053d565b6001600160a01b0383166103e95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610363565b6001600160a01b03821661044a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610363565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610537578181101561052a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610363565b6105378484848403610387565b50505050565b6001600160a01b0383166105a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610363565b6001600160a01b0382166106035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610363565b6001600160a01b0383166000908152602081905260409020548181101561067b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610363565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b2908490610831565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fe91815260200190565b60405180910390a3610537565b80356001600160a01b038116811461072257600080fd5b919050565b600060208284031215610738578081fd5b6107418261070b565b9392505050565b6000806040838503121561075a578081fd5b6107638361070b565b91506107716020840161070b565b90509250929050565b60008060006060848603121561078e578081fd5b6107978461070b565b92506107a56020850161070b565b9150604084013590509250925092565b600080604083850312156107c7578182fd5b6107d08361070b565b946020939093013593505050565b6000602080835283518082850152825b8181101561080a578581018301518582016040015282016107ee565b8181111561081b5783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561085057634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061086957607f821691505b6020821081141561088a57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220a7b636ae1b1ce7b22c97bf2028d76d3f6942c379358acaf6c8b73048d176064764736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB51 CODESIZE SUB DUP1 PUSH3 0xB51 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C1 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x27B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x228 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x11F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH3 0x13C PUSH3 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x167 JUMPI PUSH3 0x167 PUSH3 0x265 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x183 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A6 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x187 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1B7 JUMPI DUP5 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1EB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x1F9 DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x20F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x21E DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x23D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x25F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8C6 DUP1 PUSH3 0x28B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x748 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x855 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x855 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x387 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27E DUP6 DUP3 DUP6 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x289 DUP6 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x266 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2CE SWAP1 DUP8 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x855 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x289 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x537 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x363 JUMP JUMPDEST PUSH2 0x537 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B2 SWAP1 DUP5 SWAP1 PUSH2 0x831 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x537 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x738 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x741 DUP3 PUSH2 0x70B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x763 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP2 POP PUSH2 0x771 PUSH1 0x20 DUP5 ADD PUSH2 0x70B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x78E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x797 DUP5 PUSH2 0x70B JUMP JUMPDEST SWAP3 POP PUSH2 0x7A5 PUSH1 0x20 DUP6 ADD PUSH2 0x70B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x7D0 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7EE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x81B JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x850 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x869 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x88A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xB6 CALLDATASIZE 0xAE SHL SHR 0xE7 0xB2 0x2C SWAP8 0xBF KECCAK256 0x28 0xD7 PUSH14 0x3F6942C379358ACAF6C8B73048D1 PUSH23 0x64764736F6C6343000804003300000000000000000000 ",
							"sourceMap": "8149:11223:0:-:0;;;8724:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8790:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;8813:17:0;;;;:7;;:17;;;;;:::i;:::-;;8724:113;;8149:11223;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8149:11223:0;;;-1:-1:-1;8149:11223:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:1;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:1;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:1;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:1:o;928:592::-;1027:6;1035;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1109:6;1101;1094:22;1056:2;1141:16;;-1:-1:-1;;;;;1206:14:1;;;1203:2;;;1238:6;1230;1223:22;1203:2;1266:61;1319:7;1310:6;1299:9;1295:22;1266:61;:::i;:::-;1256:71;;1373:2;1362:9;1358:18;1352:25;1336:41;;1402:2;1392:8;1389:16;1386:2;;;1423:6;1415;1408:22;1386:2;;1451:63;1506:7;1495:8;1484:9;1480:24;1451:63;:::i;:::-;1441:73;;;1046:474;;;;;:::o;1525:380::-;1604:1;1600:12;;;;1647;;;1668:2;;1722:4;1714:6;1710:17;1700:27;;1668:2;1775;1767:6;1764:14;1744:18;1741:38;1738:2;;;1821:10;1816:3;1812:20;1809:1;1802:31;1856:4;1853:1;1846:15;1884:4;1881:1;1874:15;1738:2;;1580:325;;;:::o;1910:127::-;1971:10;1966:3;1962:20;1959:1;1952:31;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;1942:95;8149:11223:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5856:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:2:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:183:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "535:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "543:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "528:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "528:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "528:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "501:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:32:1"
															},
															"nodeType": "YulIf",
															"src": "490:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "571:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "609:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "619:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "438:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "449:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "461:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "469:6:1",
														"type": ""
													}
												],
												"src": "393:270:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:234:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "827:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:1"
															},
															"nodeType": "YulIf",
															"src": "782:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "853:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "863:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "901:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "945:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "911:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "958:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "996:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "722:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "733:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "745:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "753:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "761:6:1",
														"type": ""
													}
												],
												"src": "668:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1144:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1153:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1161:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1119:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1115:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1111:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:32:1"
															},
															"nodeType": "YulIf",
															"src": "1108:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1179:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1208:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1189:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1254:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1265:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1237:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1056:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1067:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1087:6:1",
														"type": ""
													}
												],
												"src": "1011:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1375:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1385:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1397:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1408:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1393:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1385:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1427:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1452:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1445:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1445:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1438:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1438:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1420:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1344:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1355:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1366:4:1",
														"type": ""
													}
												],
												"src": "1280:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1593:482:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1603:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1613:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1607:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1642:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1624:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1624:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1658:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1701:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1712:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1717:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1690:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1733:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1742:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1737:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1805:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1834:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1845:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1830:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1830:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1826:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1826:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1868:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1876:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1864:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1864:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1880:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1860:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1860:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1854:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1854:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1819:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1819:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1819:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1766:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1769:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1777:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1779:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1788:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1791:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1784:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1784:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1779:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1759:3:1",
																"statements": []
															},
															"src": "1755:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1929:69:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1958:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1969:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1954:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1954:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1978:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1950:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1950:31:1"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "1983:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1943:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1943:45:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1943:45:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1910:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1907:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:13:1"
															},
															"nodeType": "YulIf",
															"src": "1904:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2007:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2042:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2050:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2038:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2038:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2059:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2055:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2055:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2007:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1562:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1573:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1584:4:1",
														"type": ""
													}
												],
												"src": "1472:603:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2271:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2264:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2305:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2316:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2301:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2321:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2344:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2355:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2340:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2360:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2333:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2426:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2431:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2446:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2458:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2469:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2454:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2446:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2231:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2245:4:1",
														"type": ""
													}
												],
												"src": "2080:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2658:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2675:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2668:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2720:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2725:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2698:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2698:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2748:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2759:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2744:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2764:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2737:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2737:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2830:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2835:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2808:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2849:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2861:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2872:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2857:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2849:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2635:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2649:4:1",
														"type": ""
													}
												],
												"src": "2484:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3078:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3089:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3071:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3071:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3101:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3101:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3151:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3162:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3167:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3208:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3220:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3231:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3208:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3038:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3052:4:1",
														"type": ""
													}
												],
												"src": "2887:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3419:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3436:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3429:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3429:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3470:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3481:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3466:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3486:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3459:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3459:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3509:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3520:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3505:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3505:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3525:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3498:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3498:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3498:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3580:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3591:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3576:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3576:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3596:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3614:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3626:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3637:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3622:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3614:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3396:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3410:4:1",
														"type": ""
													}
												],
												"src": "3245:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3826:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3843:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3854:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3836:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3836:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3877:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3888:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3873:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3873:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3893:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3866:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3866:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3916:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3927:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3932:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3905:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3998:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4003:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3976:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3976:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4020:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4032:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4043:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4028:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4028:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4020:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3803:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3817:4:1",
														"type": ""
													}
												],
												"src": "3652:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4232:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4249:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4242:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4242:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4283:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4294:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4279:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4272:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4272:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4322:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4333:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4318:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4318:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4338:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4311:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4311:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4311:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4393:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4404:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4389:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4389:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4409:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4382:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4382:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4382:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4425:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4437:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4433:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4425:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4209:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4223:4:1",
														"type": ""
													}
												],
												"src": "4058:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4637:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4654:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4665:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4647:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4688:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4699:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4684:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4684:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4677:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4743:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4716:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4798:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4809:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4794:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4814:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4787:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4787:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4831:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4843:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4854:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4839:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4839:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4831:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4614:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4628:4:1",
														"type": ""
													}
												],
												"src": "4463:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4970:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4980:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4992:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5003:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4988:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4988:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4980:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5022:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5033:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5015:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5015:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5015:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4939:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4950:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4961:4:1",
														"type": ""
													}
												],
												"src": "4869:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5148:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5215:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5223:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5193:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5139:4:1",
														"type": ""
													}
												],
												"src": "5051:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5288:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:115:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5344:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5353:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5358:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5349:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5349:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5337:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5337:33:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5337:33:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5390:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5383:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5383:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5383:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5418:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5423:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5411:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5411:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5411:17:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5304:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5311:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5307:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5301:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5301:13:1"
															},
															"nodeType": "YulIf",
															"src": "5298:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5447:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5458:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5461:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5454:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5454:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5447:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5271:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5274:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5280:3:1",
														"type": ""
													}
												],
												"src": "5240:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5529:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5539:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5553:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5556:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5539:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5570:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5596:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5574:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5647:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5649:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5663:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5671:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5659:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5659:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5649:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5627:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5620:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5620:26:1"
															},
															"nodeType": "YulIf",
															"src": "5617:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5737:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5758:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5765:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5770:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5761:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5761:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5751:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5751:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5751:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5802:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5805:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5795:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5795:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5795:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5830:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5833:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5823:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5823:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5823:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5693:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5716:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5724:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5713:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5713:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5690:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:38:1"
															},
															"nodeType": "YulIf",
															"src": "5687:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5509:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5518:6:1",
														"type": ""
													}
												],
												"src": "5474:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107de565b60405180910390f35b6100df6100da3660046107b5565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461077a565b610270565b604051601281526020016100c3565b6100df6101313660046107b5565b610294565b6100f3610144366004610727565b6001600160a01b031660009081526020819052604090205490565b6100b66102d3565b6100df6101753660046107b5565b6102e2565b6100df6101883660046107b5565b610379565b6100f361019b366004610748565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610855565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610855565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610387565b5060019392505050565b60003361027e8582856104ab565b61028985858561053d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102ce908790610831565b610387565b6060600480546101d590610855565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102898286868403610387565b60003361026681858561053d565b6001600160a01b0383166103e95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610363565b6001600160a01b03821661044a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610363565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610537578181101561052a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610363565b6105378484848403610387565b50505050565b6001600160a01b0383166105a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610363565b6001600160a01b0382166106035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610363565b6001600160a01b0383166000908152602081905260409020548181101561067b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610363565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b2908490610831565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fe91815260200190565b60405180910390a3610537565b80356001600160a01b038116811461072257600080fd5b919050565b600060208284031215610738578081fd5b6107418261070b565b9392505050565b6000806040838503121561075a578081fd5b6107638361070b565b91506107716020840161070b565b90509250929050565b60008060006060848603121561078e578081fd5b6107978461070b565b92506107a56020850161070b565b9150604084013590509250925092565b600080604083850312156107c7578182fd5b6107d08361070b565b946020939093013593505050565b6000602080835283518082850152825b8181101561080a578581018301518582016040015282016107ee565b8181111561081b5783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561085057634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061086957607f821691505b6020821081141561088a57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220a7b636ae1b1ce7b22c97bf2028d76d3f6942c379358acaf6c8b73048d176064764736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x748 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x855 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x855 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x387 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27E DUP6 DUP3 DUP6 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x289 DUP6 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x266 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2CE SWAP1 DUP8 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x855 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x289 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x537 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x363 JUMP JUMPDEST PUSH2 0x537 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B2 SWAP1 DUP5 SWAP1 PUSH2 0x831 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x537 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x738 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x741 DUP3 PUSH2 0x70B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x763 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP2 POP PUSH2 0x771 PUSH1 0x20 DUP5 ADD PUSH2 0x70B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x78E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x797 DUP5 PUSH2 0x70B JUMP JUMPDEST SWAP3 POP PUSH2 0x7A5 PUSH1 0x20 DUP6 ADD PUSH2 0x70B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x7D0 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7EE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x81B JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x850 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x869 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x88A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xB6 CALLDATASIZE 0xAE SHL SHR 0xE7 0xB2 0x2C SWAP8 0xBF KECCAK256 0x28 0xD7 PUSH14 0x3F6942C379358ACAF6C8B73048D1 PUSH23 0x64764736F6C6343000804003300000000000000000000 ",
							"sourceMap": "8149:11223:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8902:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11179:197;;;;;;:::i;:::-;;:::i;:::-;;;1445:14:1;;1438:22;1420:41;;1408:2;1393:18;11179:197:0;1375:92:1;9990:106:0;10077:12;;9990:106;;;5015:25:1;;;5003:2;4988:18;9990:106:0;4970:76:1;11938:286:0;;;;;;:::i;:::-;;:::i;9839:91::-;;;9921:2;5193:36:1;;5181:2;5166:18;9839:91:0;5148:87:1;12619:236:0;;;;;;:::i;:::-;;:::i;10154:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;10254:18:0;10228:7;10254:18;;;;;;;;;;;;10154:125;9113:102;;;:::i;13342:429::-;;;;;;:::i;:::-;;:::i;10475:189::-;;;;;;:::i;:::-;;:::i;10722:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;10837:18:0;;;10811:7;10837:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;10722:149;8902:98;8956:13;8988:5;8981:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8902:98;:::o;11179:197::-;11262:4;741:10;11316:32;741:10;11332:7;11341:6;11316:8;:32::i;:::-;-1:-1:-1;11365:4:0;;11179:197;-1:-1:-1;;;11179:197:0:o;11938:286::-;12065:4;741:10;12121:38;12137:4;741:10;12152:6;12121:15;:38::i;:::-;12169:27;12179:4;12185:2;12189:6;12169:9;:27::i;:::-;-1:-1:-1;12213:4:0;;11938:286;-1:-1:-1;;;;11938:286:0:o;12619:236::-;741:10;12707:4;12786:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;12786:27:0;;;;;;;;;;12707:4;;741:10;12761:66;;741:10;;12786:27;;:40;;12816:10;;12786:40;:::i;:::-;12761:8;:66::i;9113:102::-;9169:13;9201:7;9194:14;;;;;:::i;13342:429::-;741:10;13435:4;13516:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;13516:27:0;;;;;;;;;;13435:4;;741:10;13561:35;;;;13553:85;;;;-1:-1:-1;;;13553:85:0;;4665:2:1;13553:85:0;;;4647:21:1;4704:2;4684:18;;;4677:30;4743:34;4723:18;;;4716:62;-1:-1:-1;;;4794:18:1;;;4787:35;4839:19;;13553:85:0;;;;;;;;;13672:60;13681:5;13688:7;13716:15;13697:16;:34;13672:8;:60::i;10475:189::-;10554:4;741:10;10608:28;741:10;10625:2;10629:6;10608:9;:28::i;16869:370::-;-1:-1:-1;;;;;17000:19:0;;16992:68;;;;-1:-1:-1;;;16992:68:0;;4260:2:1;16992:68:0;;;4242:21:1;4299:2;4279:18;;;4272:30;4338:34;4318:18;;;4311:62;-1:-1:-1;;;4389:18:1;;;4382:34;4433:19;;16992:68:0;4232:226:1;16992:68:0;-1:-1:-1;;;;;17078:21:0;;17070:68;;;;-1:-1:-1;;;17070:68:0;;2686:2:1;17070:68:0;;;2668:21:1;2725:2;2705:18;;;2698:30;2764:34;2744:18;;;2737:62;-1:-1:-1;;;2815:18:1;;;2808:32;2857:19;;17070:68:0;2658:224:1;17070:68:0;-1:-1:-1;;;;;17149:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;17200:32;;5015:25:1;;;17200:32:0;;4988:18:1;17200:32:0;;;;;;;16869:370;;;:::o;17516:441::-;-1:-1:-1;;;;;10837:18:0;;;17646:24;10837:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;17712:37:0;;17708:243;;17793:6;17773:16;:26;;17765:68;;;;-1:-1:-1;;;17765:68:0;;3089:2:1;17765:68:0;;;3071:21:1;3128:2;3108:18;;;3101:30;3167:31;3147:18;;;3140:59;3216:18;;17765:68:0;3061:179:1;17765:68:0;17875:51;17884:5;17891:7;17919:6;17900:16;:25;17875:8;:51::i;:::-;17516:441;;;;:::o;14234:651::-;-1:-1:-1;;;;;14360:18:0;;14352:68;;;;-1:-1:-1;;;14352:68:0;;3854:2:1;14352:68:0;;;3836:21:1;3893:2;3873:18;;;3866:30;3932:34;3912:18;;;3905:62;-1:-1:-1;;;3983:18:1;;;3976:35;4028:19;;14352:68:0;3826:227:1;14352:68:0;-1:-1:-1;;;;;14438:16:0;;14430:64;;;;-1:-1:-1;;;14430:64:0;;2282:2:1;14430:64:0;;;2264:21:1;2321:2;2301:18;;;2294:30;2360:34;2340:18;;;2333:62;-1:-1:-1;;;2411:18:1;;;2404:33;2454:19;;14430:64:0;2254:225:1;14430:64:0;-1:-1:-1;;;;;14576:15:0;;14554:19;14576:15;;;;;;;;;;;14609:21;;;;14601:72;;;;-1:-1:-1;;;14601:72:0;;3447:2:1;14601:72:0;;;3429:21:1;3486:2;3466:18;;;3459:30;3525:34;3505:18;;;3498:62;-1:-1:-1;;;3576:18:1;;;3569:36;3622:19;;14601:72:0;3419:228:1;14601:72:0;-1:-1:-1;;;;;14707:15:0;;;:9;:15;;;;;;;;;;;14725:20;;;14707:38;;14765:13;;;;;;;;:23;;14739:6;;14707:9;14765:23;;14739:6;;14765:23;:::i;:::-;;;;;;;;14819:2;-1:-1:-1;;;;;14804:26:0;14813:4;-1:-1:-1;;;;;14804:26:0;;14823:6;14804:26;;;;5015:25:1;;5003:2;4988:18;;4970:76;14804:26:0;;;;;;;;14841:37;18541:121;14:173:1;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:1:o;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:1:o;1472:603::-;1584:4;1613:2;1642;1631:9;1624:21;1674:6;1668:13;1717:6;1712:2;1701:9;1697:18;1690:34;1742:4;1755:140;1769:6;1766:1;1763:13;1755:140;;;1864:14;;;1860:23;;1854:30;1830:17;;;1849:2;1826:26;1819:66;1784:10;;1755:140;;;1913:6;1910:1;1907:13;1904:2;;;1983:4;1978:2;1969:6;1958:9;1954:22;1950:31;1943:45;1904:2;-1:-1:-1;2059:2:1;2038:15;-1:-1:-1;;2034:29:1;2019:45;;;;2066:2;2015:54;;1593:482;-1:-1:-1;;;1593:482:1:o;5240:229::-;5280:3;5311:1;5307:6;5304:1;5301:13;5298:2;;;-1:-1:-1;;;5337:33:1;;5393:4;5390:1;5383:15;5423:4;5344:3;5411:17;5298:2;-1:-1:-1;5454:9:1;;5288:181::o;5474:380::-;5553:1;5549:12;;;;5596;;;5617:2;;5671:4;5663:6;5659:17;5649:27;;5617:2;5724;5716:6;5713:14;5693:18;5690:38;5687:2;;;5770:10;5765:3;5761:20;5758:1;5751:31;5805:4;5802:1;5795:15;5833:4;5830:1;5823:15;5687:2;;5529:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "449200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22524",
								"balanceOf(address)": "1262",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "23566",
								"increaseAllowance(address,uint256)": "23545",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1026",
								"transfer(address,uint256)": "44470",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8795,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 8790,
									"end": 8795,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8820,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8813,
									"end": 8820,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 923,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 923,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 90,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 143,
									"end": 148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 136,
									"end": 141,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 129,
									"end": 149,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 90,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 170,
									"end": 183,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 170,
									"end": 183,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 232,
									"end": 242,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 232,
									"end": 242,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 232,
									"end": 242,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 229,
									"end": 231,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 229,
									"end": 231,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 229,
									"end": 231,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 245,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 320,
									"end": 322,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 314,
									"end": 323,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 288,
									"end": 290,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 374,
									"end": 387,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 374,
									"end": 387,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 370,
									"end": 392,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 370,
									"end": 392,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 370,
									"end": 392,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 394,
									"end": 396,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 366,
									"end": 397,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 362,
									"end": 402,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 350,
									"end": 403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 350,
									"end": 403,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 350,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 418,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 418,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 418,
									"end": 436,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 438,
									"end": 460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 438,
									"end": 460,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 438,
									"end": 460,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 415,
									"end": 461,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 412,
									"end": 414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 464,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 504,
									"end": 514,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 500,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 493,
									"end": 515,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 539,
									"end": 541,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 531,
									"end": 537,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 524,
									"end": 542,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 561,
									"end": 565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 551,
									"end": 565,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 551,
									"end": 565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 606,
									"end": 609,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 601,
									"end": 603,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 596,
									"end": 598,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 588,
									"end": 594,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 584,
									"end": 599,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 580,
									"end": 604,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 577,
									"end": 610,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 574,
									"end": 576,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 574,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 627,
									"end": 632,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 620,
									"end": 625,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 613,
									"end": 633,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 574,
									"end": 576,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 653,
									"end": 658,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 644,
									"end": 658,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 644,
									"end": 658,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 667,
									"end": 800,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 681,
									"end": 683,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 678,
									"end": 679,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 684,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 667,
									"end": 800,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 667,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 769,
									"end": 783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 765,
									"end": 788,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 765,
									"end": 788,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 759,
									"end": 789,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 738,
									"end": 752,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 734,
									"end": 757,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 734,
									"end": 757,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 727,
									"end": 790,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 692,
									"end": 702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 692,
									"end": 702,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 692,
									"end": 702,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 692,
									"end": 702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 667,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 667,
									"end": 800,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 815,
									"end": 816,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 812,
									"end": 821,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 809,
									"end": 811,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 809,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 809,
									"end": 811,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 877,
									"end": 882,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 872,
									"end": 874,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 867,
									"end": 869,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 859,
									"end": 865,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 855,
									"end": 870,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 851,
									"end": 875,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 844,
									"end": 883,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 809,
									"end": 811,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 809,
									"end": 811,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 911,
									"end": 917,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 78,
									"end": 923,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 78,
									"end": 923,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1035,
									"end": 1041,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1088,
									"end": 1090,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1085,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1067,
									"end": 1074,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1063,
									"end": 1086,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 1091,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1109,
									"end": 1115,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 1116,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1236,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1223,
									"end": 1245,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1319,
									"end": 1326,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1295,
									"end": 1317,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1327,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1375,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1362,
									"end": 1371,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1376,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1352,
									"end": 1377,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1336,
									"end": 1377,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1336,
									"end": 1377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1402,
									"end": 1404,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1392,
									"end": 1400,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1405,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1423,
									"end": 1429,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1415,
									"end": 1421,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1408,
									"end": 1430,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1506,
									"end": 1513,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1495,
									"end": 1503,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1493,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1504,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1525,
									"end": 1905,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1525,
									"end": 1905,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1726,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1714,
									"end": 1720,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1727,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1727,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1727,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1775,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1773,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1764,
									"end": 1778,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1744,
									"end": 1762,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1741,
									"end": 1779,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1831,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1816,
									"end": 1819,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1809,
									"end": 1810,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1802,
									"end": 1833,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1860,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1853,
									"end": 1854,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1846,
									"end": 1861,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1881,
									"end": 1882,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 1889,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1910,
									"end": 2037,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1910,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1971,
									"end": 1981,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1966,
									"end": 1969,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1962,
									"end": 1982,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1992,
									"end": 2007,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2026,
									"end": 2030,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2023,
									"end": 2024,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2016,
									"end": 2031,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2037,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1942,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8149,
									"end": 19372,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a7b636ae1b1ce7b22c97bf2028d76d3f6942c379358acaf6c8b73048d176064764736f6c63430008040033",
									".code": [
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 19372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1461,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1461,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1375,
											"end": 1467,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10077,
											"end": 10089,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10077,
											"end": 10089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4970,
											"end": 5046,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9921,
											"end": 9923,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5193,
											"end": 5229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5148,
											"end": 5235,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10811,
											"end": 10818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10848,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8956,
											"end": 8969,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8988,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11262,
											"end": 11266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11316,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11332,
											"end": 11339,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11316,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11316,
											"end": 11348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11316,
											"end": 11348,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11316,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11365,
											"end": 11369,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11365,
											"end": 11369,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12065,
											"end": 12069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12137,
											"end": 12141,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12152,
											"end": 12158,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12121,
											"end": 12159,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12121,
											"end": 12159,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12121,
											"end": 12159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12179,
											"end": 12183,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12185,
											"end": 12187,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12169,
											"end": 12196,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12169,
											"end": 12196,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12169,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12213,
											"end": 12217,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12213,
											"end": 12217,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12797,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12761,
											"end": 12827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12786,
											"end": 12826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12816,
											"end": 12826,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12816,
											"end": 12826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 12786,
											"end": 12826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12786,
											"end": 12826,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12786,
											"end": 12826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12761,
											"end": 12827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9169,
											"end": 9182,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13435,
											"end": 13439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13527,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13435,
											"end": 13439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13435,
											"end": 13439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13561,
											"end": 13596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13561,
											"end": 13596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13561,
											"end": 13596,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13561,
											"end": 13596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4665,
											"end": 4667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4647,
											"end": 4668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4677,
											"end": 4707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4777,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4858,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4839,
											"end": 4858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13672,
											"end": 13732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13681,
											"end": 13686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13688,
											"end": 13695,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13716,
											"end": 13731,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13697,
											"end": 13713,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13697,
											"end": 13731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13672,
											"end": 13680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13672,
											"end": 13732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10554,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10627,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10608,
											"end": 10636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16869,
											"end": 17239,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16869,
											"end": 17239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17000,
											"end": 17019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17000,
											"end": 17019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4260,
											"end": 4262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4301,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4372,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4232,
											"end": 4458,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17078,
											"end": 17099,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17078,
											"end": 17099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2688,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2876,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2857,
											"end": 2876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2658,
											"end": 2882,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17160,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17185,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17185,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 17239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 17239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 17239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 17239,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17646,
											"end": 17670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10848,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17712,
											"end": 17749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17708,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17708,
											"end": 17951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17773,
											"end": 17789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17773,
											"end": 17799,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17773,
											"end": 17799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3061,
											"end": 3240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17884,
											"end": 17889,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17891,
											"end": 17898,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17919,
											"end": 17925,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17900,
											"end": 17916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17900,
											"end": 17925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 17875,
											"end": 17926,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17875,
											"end": 17926,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17875,
											"end": 17926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14234,
											"end": 14885,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14234,
											"end": 14885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3895,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 3896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3966,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4047,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4028,
											"end": 4047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3826,
											"end": 4053,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14438,
											"end": 14454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2454,
											"end": 2473,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2454,
											"end": 2473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2254,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14554,
											"end": 14573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14630,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3641,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3622,
											"end": 3641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3419,
											"end": 3647,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14725,
											"end": 14745,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14725,
											"end": 14745,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14725,
											"end": 14745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14745,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14739,
											"end": 14745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14739,
											"end": 14745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14739,
											"end": 14745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14739,
											"end": 14745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14817,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14823,
											"end": 14829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5046,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14841,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 18541,
											"end": 18662,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 382,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 461,
											"end": 467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 501,
											"end": 508,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 497,
											"end": 520,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 493,
											"end": 525,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 490,
											"end": 492,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 528,
											"end": 550,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 490,
											"end": 492,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 609,
											"end": 657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 609,
											"end": 657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 820,
											"end": 842,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 882,
											"end": 891,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 853,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 901,
											"end": 949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 981,
											"end": 999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1218,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1275,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1472,
											"end": 2075,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1472,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1615,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1710,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1885,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 1980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2059,
											"end": 2061,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2034,
											"end": 2063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2069,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 2075,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 2075,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5240,
											"end": 5469,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5240,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5337,
											"end": 5370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5337,
											"end": 5370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5390,
											"end": 5391,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5427,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5344,
											"end": 5347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5454,
											"end": 5463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5469,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5474,
											"end": 5854,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5474,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5554,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5675,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 5663,
											"end": 5669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5726,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5716,
											"end": 5722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5727,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5728,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5780,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5761,
											"end": 5781,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5805,
											"end": 5809,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5802,
											"end": 5803,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5795,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5833,
											"end": 5837,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5830,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5838,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RabaToken_flat.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RabaToken_flat.sol\":{\"keccak256\":\"0x7f0b35534ba6ff633d95c63accb259df4ad4fdcbbe5a4c253eef84f4c7bc59d9\",\"urls\":[\"bzz-raw://ade4e58e9493e5dcbaf5449f76416fa5a17858ce1461043c9db66b193eb71abd\",\"dweb:/ipfs/QmUKPSvhS9HcfkJJb2AQn7qrufkPdijiBNii1Phm3tKeFC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RabaToken_flat.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RabaToken_flat.sol\":{\"keccak256\":\"0x7f0b35534ba6ff633d95c63accb259df4ad4fdcbbe5a4c253eef84f4c7bc59d9\",\"urls\":[\"bzz-raw://ade4e58e9493e5dcbaf5449f76416fa5a17858ce1461043c9db66b193eb71abd\",\"dweb:/ipfs/QmUKPSvhS9HcfkJJb2AQn7qrufkPdijiBNii1Phm3tKeFC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RabaToken_flat.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RabaToken_flat.sol\":{\"keccak256\":\"0x7f0b35534ba6ff633d95c63accb259df4ad4fdcbbe5a4c253eef84f4c7bc59d9\",\"urls\":[\"bzz-raw://ade4e58e9493e5dcbaf5449f76416fa5a17858ce1461043c9db66b193eb71abd\",\"dweb:/ipfs/QmUKPSvhS9HcfkJJb2AQn7qrufkPdijiBNii1Phm3tKeFC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RabaToken_flat.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RabaToken_flat.sol\":{\"keccak256\":\"0x7f0b35534ba6ff633d95c63accb259df4ad4fdcbbe5a4c253eef84f4c7bc59d9\",\"urls\":[\"bzz-raw://ade4e58e9493e5dcbaf5449f76416fa5a17858ce1461043c9db66b193eb71abd\",\"dweb:/ipfs/QmUKPSvhS9HcfkJJb2AQn7qrufkPdijiBNii1Phm3tKeFC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"RabaToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RabaToken_flat.sol\":19436:20119  contract RabaToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"RabaToken_flat.sol\":19561:19735  constructor() ERC20(\"RabaToken\", \"RTK\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"RabaToken_flat.sol\":8724:8837  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb9, 0x2930b130aa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x52544b)\n  dup2\n  mstore\n  pop\n    /* \"RabaToken_flat.sol\":8798:8803  name_ */\n  dup2\n    /* \"RabaToken_flat.sol\":8790:8795  _name */\n  0x03\n    /* \"RabaToken_flat.sol\":8790:8803  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"RabaToken_flat.sol\":8813:8830  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"RabaToken_flat.sol\":8813:8820  _symbol */\n  0x04\n  swap1\n    /* \"RabaToken_flat.sol\":8813:8830  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"RabaToken_flat.sol\":8724:8837  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"RabaToken_flat.sol\":1779:1811  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"RabaToken_flat.sol\":1798:1810  _msgSender() */\n  tag_11\n    /* \"RabaToken_flat.sol\":1798:1808  _msgSender */\n  shl(0x20, tag_12)\n    /* \"RabaToken_flat.sol\":1798:1810  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"RabaToken_flat.sol\":1779:1797  _transferOwnership */\n  tag_13\n    /* \"RabaToken_flat.sol\":1779:1811  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_10:\n    /* \"RabaToken_flat.sol\":19618:19623  10000 */\n  0x2710\n    /* \"RabaToken_flat.sol\":19611:19615  rate */\n  0x06\n    /* \"RabaToken_flat.sol\":19611:19623  rate = 10000 */\n  sstore\n    /* \"RabaToken_flat.sol\":19657:19673  10 ** decimals() */\n  tag_17\n    /* \"RabaToken_flat.sol\":9921:9923  18 */\n  0x12\n    /* \"RabaToken_flat.sol\":19657:19659  10 */\n  0x0a\n    /* \"RabaToken_flat.sol\":19657:19673  10 ** decimals() */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"RabaToken_flat.sol\":19647:19673  1000000 * 10 ** decimals() */\n  tag_19\n  swap1\n    /* \"RabaToken_flat.sol\":19647:19654  1000000 */\n  0x0f4240\n    /* \"RabaToken_flat.sol\":19647:19673  1000000 * 10 ** decimals() */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"RabaToken_flat.sol\":19633:19644  FixedSupply */\n  0x07\n    /* \"RabaToken_flat.sol\":19633:19673  FixedSupply = 1000000 * 10 ** decimals() */\n  sstore\n    /* \"RabaToken_flat.sol\":19683:19728  _mint(msg.sender, 1000000 * 10 ** decimals()) */\n  tag_21\n    /* \"RabaToken_flat.sol\":19689:19699  msg.sender */\n  caller\n    /* \"RabaToken_flat.sol\":19711:19727  10 ** decimals() */\n  tag_23\n    /* \"RabaToken_flat.sol\":9921:9923  18 */\n  0x12\n    /* \"RabaToken_flat.sol\":19711:19713  10 */\n  0x0a\n    /* \"RabaToken_flat.sol\":19711:19727  10 ** decimals() */\n  tag_18\n  jump\t// in\ntag_23:\n    /* \"RabaToken_flat.sol\":19701:19727  1000000 * 10 ** decimals() */\n  tag_24\n  swap1\n    /* \"RabaToken_flat.sol\":19701:19708  1000000 */\n  0x0f4240\n    /* \"RabaToken_flat.sol\":19701:19727  1000000 * 10 ** decimals() */\n  tag_20\n  jump\t// in\ntag_24:\n    /* \"RabaToken_flat.sol\":19683:19688  _mint */\n  tag_25\n    /* \"RabaToken_flat.sol\":19683:19728  _mint(msg.sender, 1000000 * 10 ** decimals()) */\n  jump\t// in\ntag_21:\n    /* \"RabaToken_flat.sol\":19436:20119  contract RabaToken is ERC20, Ownable {... */\n  jump(tag_56)\n    /* \"RabaToken_flat.sol\":662:758  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"RabaToken_flat.sol\":741:751  msg.sender */\n  caller\n  swap1\n    /* \"RabaToken_flat.sol\":662:758  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"RabaToken_flat.sol\":3128:3315  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"RabaToken_flat.sol\":3220:3226  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"RabaToken_flat.sol\":3236:3253  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"RabaToken_flat.sol\":3268:3308  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"RabaToken_flat.sol\":3220:3226  _owner */\n  swap2\n  and\n  swap2\n    /* \"RabaToken_flat.sol\":3236:3253  _owner = newOwner */\n  swap1\n    /* \"RabaToken_flat.sol\":3220:3226  _owner */\n  dup3\n  swap1\n    /* \"RabaToken_flat.sol\":3268:3308  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"RabaToken_flat.sol\":3201:3217  address oldOwner */\n  0x00\n  swap1\n    /* \"RabaToken_flat.sol\":3268:3308  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"RabaToken_flat.sol\":3128:3315  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"RabaToken_flat.sol\":15161:15550  function _mint(address account, uint256 amount) internal virtual {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"RabaToken_flat.sol\":15244:15265  account != address(0) */\n  dup3\n  and\n    /* \"RabaToken_flat.sol\":15236:15301  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_31\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"RabaToken_flat.sol\":15236:15301  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x1f\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:327   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:328   */\n  mstore\n    /* \"#utility.yul\":345:363   */\n  0x64\n  add\n    /* \"RabaToken_flat.sol\":15236:15301  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_31:\n    /* \"RabaToken_flat.sol\":15388:15394  amount */\n  dup1\n    /* \"RabaToken_flat.sol\":15372:15384  _totalSupply */\n  0x02\n  0x00\n    /* \"RabaToken_flat.sol\":15372:15394  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"RabaToken_flat.sol\":15404:15422  _balances[account] */\n  dup3\n  and\n    /* \"RabaToken_flat.sol\":15404:15413  _balances */\n  0x00\n    /* \"RabaToken_flat.sol\":15404:15422  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"RabaToken_flat.sol\":15404:15432  _balances[account] += amount */\n  dup1\n  sload\n    /* \"RabaToken_flat.sol\":15426:15432  amount */\n  dup4\n  swap3\n    /* \"RabaToken_flat.sol\":15404:15413  _balances */\n  swap1\n    /* \"RabaToken_flat.sol\":15404:15432  _balances[account] += amount */\n  tag_38\n  swap1\n    /* \"RabaToken_flat.sol\":15426:15432  amount */\n  dup5\n  swap1\n    /* \"RabaToken_flat.sol\":15404:15432  _balances[account] += amount */\n  tag_37\n  jump\t// in\ntag_38:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"RabaToken_flat.sol\":15447:15484  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":520:545   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"RabaToken_flat.sol\":15447:15484  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"RabaToken_flat.sol\":15464:15465  0 */\n  0x00\n  swap1\n    /* \"RabaToken_flat.sol\":15447:15484  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":508:510   */\n  0x20\n    /* \"#utility.yul\":493:511   */\n  add\n    /* \"RabaToken_flat.sol\":15447:15484  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"RabaToken_flat.sol\":15161:15550  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"RabaToken_flat.sol\":19436:20119  contract RabaToken is ERC20, Ownable {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_45\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_48\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_51)\ntag_48:\n  dup3\n  0x1f\n  lt\n  tag_49\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_51)\ntag_49:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_51\n  jumpi\n  swap2\n  dup3\n  add\ntag_50:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_51\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_50)\ntag_51:\n  pop\n  tag_52\n  swap3\n  swap2\n  pop\n  tag_53\n  jump\t// in\ntag_52:\n  pop\n  swap1\n  jump\t// out\ntag_53:\ntag_54:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_52\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_54)\n    /* \"#utility.yul\":556:684   */\ntag_37:\n    /* \"#utility.yul\":596:599   */\n  0x00\n    /* \"#utility.yul\":627:628   */\n  dup3\n    /* \"#utility.yul\":623:629   */\n  not\n    /* \"#utility.yul\":620:621   */\n  dup3\n    /* \"#utility.yul\":617:630   */\n  gt\n    /* \"#utility.yul\":614:616   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":633:651   */\n  tag_61\n  tag_62\n  jump\t// in\ntag_61:\n  pop\n    /* \"#utility.yul\":669:678   */\n  add\n  swap1\n    /* \"#utility.yul\":604:684   */\n  jump\t// out\n    /* \"#utility.yul\":689:1111   */\ntag_63:\n    /* \"#utility.yul\":778:779   */\n  0x01\n    /* \"#utility.yul\":821:826   */\n  dup2\n    /* \"#utility.yul\":778:779   */\n  dup2\n    /* \"#utility.yul\":835:1105   */\ntag_65:\n    /* \"#utility.yul\":856:863   */\n  dup1\n    /* \"#utility.yul\":846:854   */\n  dup6\n    /* \"#utility.yul\":843:864   */\n  gt\n    /* \"#utility.yul\":835:1105   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":915:919   */\n  dup2\n    /* \"#utility.yul\":911:912   */\n  0x00\n    /* \"#utility.yul\":907:913   */\n  not\n    /* \"#utility.yul\":903:920   */\n  div\n    /* \"#utility.yul\":897:901   */\n  dup3\n    /* \"#utility.yul\":894:921   */\n  gt\n    /* \"#utility.yul\":891:893   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":924:942   */\n  tag_69\n  tag_62\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":974:981   */\n  dup1\n    /* \"#utility.yul\":964:972   */\n  dup6\n    /* \"#utility.yul\":960:982   */\n  and\n    /* \"#utility.yul\":957:959   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":994:1010   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":957:959   */\ntag_70:\n    /* \"#utility.yul\":1073:1095   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":1033:1048   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":835:1105   */\n  jump(tag_65)\ntag_67:\n    /* \"#utility.yul\":839:842   */\n  pop\n    /* \"#utility.yul\":753:1111   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1116:1256   */\ntag_18:\n    /* \"#utility.yul\":1174:1179   */\n  0x00\n    /* \"#utility.yul\":1203:1250   */\n  tag_72\n    /* \"#utility.yul\":1244:1248   */\n  0xff\n    /* \"#utility.yul\":1234:1242   */\n  dup5\n    /* \"#utility.yul\":1230:1249   */\n  and\n    /* \"#utility.yul\":1224:1228   */\n  dup4\n    /* \"#utility.yul\":1203:1250   */\n  tag_73\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1194:1250   */\n  swap4\n    /* \"#utility.yul\":1184:1256   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1261:2067   */\ntag_73:\n    /* \"#utility.yul\":1310:1315   */\n  0x00\n    /* \"#utility.yul\":1340:1348   */\n  dup3\n    /* \"#utility.yul\":1330:1332   */\n  tag_75\n  jumpi\n  pop\n    /* \"#utility.yul\":1381:1382   */\n  0x01\n    /* \"#utility.yul\":1395:1400   */\n  jump(tag_74)\n    /* \"#utility.yul\":1330:1332   */\ntag_75:\n    /* \"#utility.yul\":1429:1433   */\n  dup2\n    /* \"#utility.yul\":1419:1421   */\n  tag_76\n  jumpi\n  pop\n    /* \"#utility.yul\":1466:1467   */\n  0x00\n    /* \"#utility.yul\":1480:1485   */\n  jump(tag_74)\n    /* \"#utility.yul\":1419:1421   */\ntag_76:\n    /* \"#utility.yul\":1511:1515   */\n  dup2\n    /* \"#utility.yul\":1529:1530   */\n  0x01\n    /* \"#utility.yul\":1524:1583   */\n  dup2\n  eq\n  tag_78\n  jumpi\n    /* \"#utility.yul\":1597:1598   */\n  0x02\n    /* \"#utility.yul\":1592:1722   */\n  dup2\n  eq\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1504:1722   */\n  jump(tag_77)\n    /* \"#utility.yul\":1524:1583   */\ntag_78:\n    /* \"#utility.yul\":1554:1555   */\n  0x01\n    /* \"#utility.yul\":1545:1555   */\n  swap2\n  pop\n    /* \"#utility.yul\":1568:1573   */\n  pop\n  jump(tag_74)\n    /* \"#utility.yul\":1592:1722   */\ntag_79:\n    /* \"#utility.yul\":1629:1632   */\n  0xff\n    /* \"#utility.yul\":1619:1627   */\n  dup5\n    /* \"#utility.yul\":1616:1633   */\n  gt\n    /* \"#utility.yul\":1613:1615   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1636:1654   */\n  tag_81\n  tag_62\n  jump\t// in\ntag_81:\n  pop\n  pop\n    /* \"#utility.yul\":1692:1693   */\n  0x01\n    /* \"#utility.yul\":1678:1694   */\n  dup3\n  shl\n    /* \"#utility.yul\":1707:1712   */\n  jump(tag_74)\n    /* \"#utility.yul\":1504:1722   */\ntag_77:\n  pop\n    /* \"#utility.yul\":1806:1808   */\n  0x20\n    /* \"#utility.yul\":1796:1804   */\n  dup4\n    /* \"#utility.yul\":1793:1809   */\n  lt\n    /* \"#utility.yul\":1787:1790   */\n  0x0133\n    /* \"#utility.yul\":1781:1785   */\n  dup4\n    /* \"#utility.yul\":1778:1791   */\n  lt\n    /* \"#utility.yul\":1774:1810   */\n  and\n    /* \"#utility.yul\":1768:1770   */\n  0x4e\n    /* \"#utility.yul\":1758:1766   */\n  dup5\n    /* \"#utility.yul\":1755:1771   */\n  lt\n    /* \"#utility.yul\":1750:1752   */\n  0x0b\n    /* \"#utility.yul\":1744:1748   */\n  dup5\n    /* \"#utility.yul\":1741:1753   */\n  lt\n    /* \"#utility.yul\":1737:1772   */\n  and\n    /* \"#utility.yul\":1734:1811   */\n  or\n    /* \"#utility.yul\":1731:1733   */\n  iszero\n  tag_82\n  jumpi\n  pop\n    /* \"#utility.yul\":1843:1862   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1875:1880   */\n  jump(tag_74)\n    /* \"#utility.yul\":1731:1733   */\ntag_82:\n    /* \"#utility.yul\":1922:1956   */\n  tag_83\n    /* \"#utility.yul\":1947:1955   */\n  dup4\n    /* \"#utility.yul\":1941:1945   */\n  dup4\n    /* \"#utility.yul\":1922:1956   */\n  tag_63\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1992:1998   */\n  dup1\n    /* \"#utility.yul\":1988:1989   */\n  0x00\n    /* \"#utility.yul\":1984:1990   */\n  not\n    /* \"#utility.yul\":1980:1999   */\n  div\n    /* \"#utility.yul\":1971:1978   */\n  dup3\n    /* \"#utility.yul\":1968:2000   */\n  gt\n    /* \"#utility.yul\":1965:1967   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2003:2021   */\n  tag_85\n  tag_62\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2041:2061   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":1320:2067   */\ntag_74:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2072:2240   */\ntag_20:\n    /* \"#utility.yul\":2112:2119   */\n  0x00\n    /* \"#utility.yul\":2178:2179   */\n  dup2\n    /* \"#utility.yul\":2174:2175   */\n  0x00\n    /* \"#utility.yul\":2170:2176   */\n  not\n    /* \"#utility.yul\":2166:2180   */\n  div\n    /* \"#utility.yul\":2163:2164   */\n  dup4\n    /* \"#utility.yul\":2160:2181   */\n  gt\n    /* \"#utility.yul\":2155:2156   */\n  dup3\n    /* \"#utility.yul\":2148:2157   */\n  iszero\n    /* \"#utility.yul\":2141:2158   */\n  iszero\n    /* \"#utility.yul\":2137:2182   */\n  and\n    /* \"#utility.yul\":2134:2136   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2185:2203   */\n  tag_88\n  tag_62\n  jump\t// in\ntag_88:\n  pop\n    /* \"#utility.yul\":2225:2234   */\n  mul\n  swap1\n    /* \"#utility.yul\":2124:2240   */\n  jump\t// out\n    /* \"#utility.yul\":2245:2625   */\ntag_46:\n    /* \"#utility.yul\":2324:2325   */\n  0x01\n    /* \"#utility.yul\":2320:2332   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2367:2379   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2388:2390   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2442:2446   */\n  0x7f\n    /* \"#utility.yul\":2434:2440   */\n  dup3\n    /* \"#utility.yul\":2430:2447   */\n  and\n    /* \"#utility.yul\":2420:2447   */\n  swap2\n  pop\n    /* \"#utility.yul\":2388:2390   */\ntag_90:\n    /* \"#utility.yul\":2495:2497   */\n  0x20\n    /* \"#utility.yul\":2487:2493   */\n  dup3\n    /* \"#utility.yul\":2484:2498   */\n  lt\n    /* \"#utility.yul\":2464:2482   */\n  dup2\n    /* \"#utility.yul\":2461:2499   */\n  eq\n    /* \"#utility.yul\":2458:2460   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2541:2551   */\n  0x4e487b71\n    /* \"#utility.yul\":2536:2539   */\n  0xe0\n    /* \"#utility.yul\":2532:2552   */\n  shl\n    /* \"#utility.yul\":2529:2530   */\n  0x00\n    /* \"#utility.yul\":2522:2553   */\n  mstore\n    /* \"#utility.yul\":2576:2580   */\n  0x22\n    /* \"#utility.yul\":2573:2574   */\n  0x04\n    /* \"#utility.yul\":2566:2581   */\n  mstore\n    /* \"#utility.yul\":2604:2608   */\n  0x24\n    /* \"#utility.yul\":2601:2602   */\n  0x00\n    /* \"#utility.yul\":2594:2609   */\n  revert\n    /* \"#utility.yul\":2458:2460   */\ntag_91:\n  pop\n    /* \"#utility.yul\":2300:2625   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2630:2757   */\ntag_62:\n    /* \"#utility.yul\":2691:2701   */\n  0x4e487b71\n    /* \"#utility.yul\":2686:2689   */\n  0xe0\n    /* \"#utility.yul\":2682:2702   */\n  shl\n    /* \"#utility.yul\":2679:2680   */\n  0x00\n    /* \"#utility.yul\":2672:2703   */\n  mstore\n    /* \"#utility.yul\":2722:2726   */\n  0x11\n    /* \"#utility.yul\":2719:2720   */\n  0x04\n    /* \"#utility.yul\":2712:2727   */\n  mstore\n    /* \"#utility.yul\":2746:2750   */\n  0x24\n    /* \"#utility.yul\":2743:2744   */\n  0x00\n    /* \"#utility.yul\":2736:2751   */\n  revert\n    /* \"#utility.yul\":2662:2757   */\ntag_56:\n    /* \"RabaToken_flat.sol\":19436:20119  contract RabaToken is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"RabaToken_flat.sol\":19436:20119  contract RabaToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7e72fb52\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x2c4e722e\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"RabaToken_flat.sol\":8902:9000  function name() public view virtual override returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RabaToken_flat.sol\":11179:11376  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1653:1667   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1646:1668   */\n      iszero\n        /* \"#utility.yul\":1628:1669   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1601:1619   */\n      add\n        /* \"RabaToken_flat.sol\":11179:11376  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_25\n        /* \"#utility.yul\":1583:1675   */\n      jump\n        /* \"RabaToken_flat.sol\":9990:10096  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n        /* \"RabaToken_flat.sol\":10077:10089  _totalSupply */\n      sload(0x02)\n        /* \"RabaToken_flat.sol\":9990:10096  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":7065:7090   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7053:7055   */\n      0x20\n        /* \"#utility.yul\":7038:7056   */\n      add\n        /* \"RabaToken_flat.sol\":9990:10096  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_25\n        /* \"#utility.yul\":7020:7096   */\n      jump\n        /* \"RabaToken_flat.sol\":11938:12224  function transferFrom(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_28\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"RabaToken_flat.sol\":19480:19496  uint public rate */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_35\n      sload(0x06)\n      dup2\n      jump\n        /* \"RabaToken_flat.sol\":9839:9930  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      mload(0x40)\n        /* \"RabaToken_flat.sol\":9921:9923  18 */\n      0x12\n        /* \"#utility.yul\":7243:7279   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7231:7233   */\n      0x20\n        /* \"#utility.yul\":7216:7234   */\n      add\n        /* \"RabaToken_flat.sol\":9839:9930  function decimals() public view virtual override returns (uint8) {... */\n      tag_25\n        /* \"#utility.yul\":7198:7285   */\n      jump\n        /* \"RabaToken_flat.sol\":12619:12855  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_28\n      tag_56\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"RabaToken_flat.sol\":19741:19834  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"RabaToken_flat.sol\":10154:10279  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_35\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":10254:10272  _balances[account] */\n      and\n        /* \"RabaToken_flat.sol\":10228:10235  uint256 */\n      0x00\n        /* \"RabaToken_flat.sol\":10254:10272  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"RabaToken_flat.sol\":10154:10279  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"RabaToken_flat.sol\":2526:2627  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_60\n      tag_71\n      jump\t// in\n        /* \"RabaToken_flat.sol\":19837:20117  function buyToken(address to) public payable {... */\n    tag_12:\n      tag_60\n      tag_73\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"RabaToken_flat.sol\":1894:1979  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n        /* \"RabaToken_flat.sol\":1966:1972  _owner */\n      sload(0x05)\n        /* \"RabaToken_flat.sol\":1894:1979  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":1966:1972  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1426:1477   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1399:1417   */\n      add\n        /* \"RabaToken_flat.sol\":1894:1979  function owner() public view virtual returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":1381:1483   */\n      jump\n        /* \"RabaToken_flat.sol\":9113:9215  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_23\n      tag_82\n      jump\t// in\n        /* \"RabaToken_flat.sol\":13342:13771  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_28\n      tag_86\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"RabaToken_flat.sol\":10475:10664  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_28\n      tag_91\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"RabaToken_flat.sol\":10722:10871  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_35\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":10837:10855  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"RabaToken_flat.sol\":10811:10818  uint256 */\n      0x00\n        /* \"RabaToken_flat.sol\":10837:10855  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"RabaToken_flat.sol\":10837:10848  _allowances */\n      0x01\n        /* \"RabaToken_flat.sol\":10837:10855  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RabaToken_flat.sol\":10837:10864  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"RabaToken_flat.sol\":10722:10871  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"RabaToken_flat.sol\":2776:2974  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_60\n      tag_102\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"RabaToken_flat.sol\":8902:9000  function name() public view virtual override returns (string memory) {... */\n    tag_24:\n        /* \"RabaToken_flat.sol\":8956:8969  string memory */\n      0x60\n        /* \"RabaToken_flat.sol\":8988:8993  _name */\n      0x03\n        /* \"RabaToken_flat.sol\":8981:8993  return _name */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"RabaToken_flat.sol\":8902:9000  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"RabaToken_flat.sol\":11179:11376  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_31:\n        /* \"RabaToken_flat.sol\":11262:11266  bool */\n      0x00\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":11316:11348  _approve(owner, spender, amount) */\n      tag_114\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      dup2\n        /* \"RabaToken_flat.sol\":11332:11339  spender */\n      dup6\n        /* \"RabaToken_flat.sol\":11341:11347  amount */\n      dup6\n        /* \"RabaToken_flat.sol\":11316:11324  _approve */\n      tag_115\n        /* \"RabaToken_flat.sol\":11316:11348  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_114:\n      pop\n        /* \"RabaToken_flat.sol\":11365:11369  true */\n      0x01\n      swap4\n        /* \"RabaToken_flat.sol\":11179:11376  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RabaToken_flat.sol\":11938:12224  function transferFrom(... */\n    tag_43:\n        /* \"RabaToken_flat.sol\":12065:12069  bool */\n      0x00\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":12121:12159  _spendAllowance(from, spender, amount) */\n      tag_119\n        /* \"RabaToken_flat.sol\":12137:12141  from */\n      dup6\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      dup3\n        /* \"RabaToken_flat.sol\":12152:12158  amount */\n      dup6\n        /* \"RabaToken_flat.sol\":12121:12136  _spendAllowance */\n      tag_120\n        /* \"RabaToken_flat.sol\":12121:12159  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_119:\n        /* \"RabaToken_flat.sol\":12169:12196  _transfer(from, to, amount) */\n      tag_121\n        /* \"RabaToken_flat.sol\":12179:12183  from */\n      dup6\n        /* \"RabaToken_flat.sol\":12185:12187  to */\n      dup6\n        /* \"RabaToken_flat.sol\":12189:12195  amount */\n      dup6\n        /* \"RabaToken_flat.sol\":12169:12178  _transfer */\n      tag_122\n        /* \"RabaToken_flat.sol\":12169:12196  _transfer(from, to, amount) */\n      jump\t// in\n    tag_121:\n      pop\n        /* \"RabaToken_flat.sol\":12213:12217  true */\n      0x01\n      swap5\n        /* \"RabaToken_flat.sol\":11938:12224  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RabaToken_flat.sol\":12619:12855  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_57:\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":12707:12711  bool */\n      0x00\n        /* \"RabaToken_flat.sol\":12786:12804  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"RabaToken_flat.sol\":12786:12797  _allowances */\n      0x01\n        /* \"RabaToken_flat.sol\":12786:12804  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":12786:12813  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"RabaToken_flat.sol\":12707:12711  bool */\n      swap1\n      swap2\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      swap1\n        /* \"RabaToken_flat.sol\":12761:12827  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      tag_114\n      swap1\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      dup3\n      swap1\n        /* \"RabaToken_flat.sol\":12786:12813  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"RabaToken_flat.sol\":12786:12826  _allowances[owner][spender] + addedValue */\n      tag_127\n      swap1\n        /* \"RabaToken_flat.sol\":12816:12826  addedValue */\n      dup8\n      swap1\n        /* \"RabaToken_flat.sol\":12786:12826  _allowances[owner][spender] + addedValue */\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"RabaToken_flat.sol\":12761:12769  _approve */\n      tag_115\n        /* \"RabaToken_flat.sol\":12761:12827  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"RabaToken_flat.sol\":19741:19834  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_62:\n        /* \"RabaToken_flat.sol\":1966:1972  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":2106:2129  owner() == _msgSender() */\n      eq\n        /* \"RabaToken_flat.sol\":2098:2166  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"RabaToken_flat.sol\":19810:19827  _mint(to, amount) */\n      tag_136\n        /* \"RabaToken_flat.sol\":19816:19818  to */\n      dup3\n        /* \"RabaToken_flat.sol\":19820:19826  amount */\n      dup3\n        /* \"RabaToken_flat.sol\":19810:19815  _mint */\n      tag_137\n        /* \"RabaToken_flat.sol\":19810:19827  _mint(to, amount) */\n      jump\t// in\n    tag_136:\n        /* \"RabaToken_flat.sol\":19741:19834  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"RabaToken_flat.sol\":2526:2627  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"RabaToken_flat.sol\":1966:1972  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":2106:2129  owner() == _msgSender() */\n      eq\n        /* \"RabaToken_flat.sol\":2098:2166  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_142:\n        /* \"RabaToken_flat.sol\":2590:2620  _transferOwnership(address(0)) */\n      tag_145\n        /* \"RabaToken_flat.sol\":2617:2618  0 */\n      0x00\n        /* \"RabaToken_flat.sol\":2590:2608  _transferOwnership */\n      tag_146\n        /* \"RabaToken_flat.sol\":2590:2620  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_145:\n        /* \"RabaToken_flat.sol\":2526:2627  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"RabaToken_flat.sol\":19837:20117  function buyToken(address to) public payable {... */\n    tag_74:\n        /* \"RabaToken_flat.sol\":19953:19972  uint256 amountToBuy */\n      0x00\n        /* \"RabaToken_flat.sol\":19987:19991  rate */\n      sload(0x06)\n        /* \"RabaToken_flat.sol\":19975:19984  msg.value */\n      callvalue\n        /* \"RabaToken_flat.sol\":19975:19991  msg.value * rate */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"RabaToken_flat.sol\":19953:19991  uint256 amountToBuy = msg.value * rate */\n      swap1\n      pop\n        /* \"RabaToken_flat.sol\":20037:20048  amountToBuy */\n      dup1\n        /* \"RabaToken_flat.sol\":20021:20034  totalSupply() */\n      tag_153\n        /* \"RabaToken_flat.sol\":10077:10089  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"RabaToken_flat.sol\":9990:10096  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"RabaToken_flat.sol\":20021:20034  totalSupply() */\n    tag_153:\n        /* \"RabaToken_flat.sol\":20021:20048  totalSupply() + amountToBuy */\n      tag_154\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_154:\n        /* \"RabaToken_flat.sol\":20005:20016  FixedSupply */\n      sload(0x07)\n        /* \"RabaToken_flat.sol\":20005:20049  FixedSupply >= (totalSupply() + amountToBuy) */\n      lt\n      iszero\n        /* \"RabaToken_flat.sol\":19997:20080  require(FixedSupply >= (totalSupply() + amountToBuy), \"Cannot exceed fixed supply\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4469:4471   */\n      0x20\n        /* \"RabaToken_flat.sol\":19997:20080  require(FixedSupply >= (totalSupply() + amountToBuy), \"Cannot exceed fixed supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4451:4472   */\n      mstore\n        /* \"#utility.yul\":4508:4510   */\n      0x1a\n        /* \"#utility.yul\":4488:4506   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4481:4511   */\n      mstore\n        /* \"#utility.yul\":4547:4575   */\n      0x43616e6e6f742065786365656420666978656420737570706c79000000000000\n        /* \"#utility.yul\":4527:4545   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4520:4576   */\n      mstore\n        /* \"#utility.yul\":4593:4611   */\n      0x64\n      add\n        /* \"RabaToken_flat.sol\":19997:20080  require(FixedSupply >= (totalSupply() + amountToBuy), \"Cannot exceed fixed supply\") */\n      tag_133\n        /* \"#utility.yul\":4441:4617   */\n      jump\n        /* \"RabaToken_flat.sol\":9113:9215  function symbol() public view virtual override returns (string memory) {... */\n    tag_82:\n        /* \"RabaToken_flat.sol\":9169:9182  string memory */\n      0x60\n        /* \"RabaToken_flat.sol\":9201:9208  _symbol */\n      0x04\n        /* \"RabaToken_flat.sol\":9194:9208  return _symbol */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n        /* \"RabaToken_flat.sol\":13342:13771  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_87:\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":13435:13439  bool */\n      0x00\n        /* \"RabaToken_flat.sol\":13516:13534  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"RabaToken_flat.sol\":13516:13527  _allowances */\n      0x01\n        /* \"RabaToken_flat.sol\":13516:13534  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":13516:13543  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"RabaToken_flat.sol\":13435:13439  bool */\n      swap1\n      swap2\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      swap1\n        /* \"RabaToken_flat.sol\":13561:13596  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"RabaToken_flat.sol\":13553:13638  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5996:5998   */\n      0x20\n        /* \"RabaToken_flat.sol\":13553:13638  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5978:5999   */\n      mstore\n        /* \"#utility.yul\":6035:6037   */\n      0x25\n        /* \"#utility.yul\":6015:6033   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6008:6038   */\n      mstore\n        /* \"#utility.yul\":6074:6108   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6054:6072   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6047:6109   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":6125:6143   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6118:6153   */\n      mstore\n        /* \"#utility.yul\":6170:6189   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":13553:13638  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_133\n        /* \"#utility.yul\":5968:6195   */\n      jump\n        /* \"RabaToken_flat.sol\":13553:13638  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_168:\n        /* \"RabaToken_flat.sol\":13672:13732  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_121\n        /* \"RabaToken_flat.sol\":13681:13686  owner */\n      dup3\n        /* \"RabaToken_flat.sol\":13688:13695  spender */\n      dup7\n        /* \"RabaToken_flat.sol\":13716:13731  subtractedValue */\n      dup7\n        /* \"RabaToken_flat.sol\":13697:13713  currentAllowance */\n      dup5\n        /* \"RabaToken_flat.sol\":13697:13731  currentAllowance - subtractedValue */\n      sub\n        /* \"RabaToken_flat.sol\":13672:13680  _approve */\n      tag_115\n        /* \"RabaToken_flat.sol\":13672:13732  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"RabaToken_flat.sol\":10475:10664  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_92:\n        /* \"RabaToken_flat.sol\":10554:10558  bool */\n      0x00\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":10608:10636  _transfer(owner, to, amount) */\n      tag_114\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      dup2\n        /* \"RabaToken_flat.sol\":10625:10627  to */\n      dup6\n        /* \"RabaToken_flat.sol\":10629:10635  amount */\n      dup6\n        /* \"RabaToken_flat.sol\":10608:10617  _transfer */\n      tag_122\n        /* \"RabaToken_flat.sol\":10608:10636  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"RabaToken_flat.sol\":2776:2974  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"RabaToken_flat.sol\":1966:1972  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"RabaToken_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"RabaToken_flat.sol\":2106:2129  owner() == _msgSender() */\n      eq\n        /* \"RabaToken_flat.sol\":2098:2166  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":2864:2886  newOwner != address(0) */\n      dup2\n      and\n        /* \"RabaToken_flat.sol\":2856:2929  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2894:2896   */\n      0x20\n        /* \"RabaToken_flat.sol\":2856:2929  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2876:2897   */\n      mstore\n        /* \"#utility.yul\":2933:2935   */\n      0x26\n        /* \"#utility.yul\":2913:2931   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2906:2936   */\n      mstore\n        /* \"#utility.yul\":2972:3006   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2952:2970   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2945:3007   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3023:3041   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3016:3052   */\n      mstore\n        /* \"#utility.yul\":3069:3088   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":2856:2929  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_133\n        /* \"#utility.yul\":2866:3094   */\n      jump\n        /* \"RabaToken_flat.sol\":2856:2929  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_182:\n        /* \"RabaToken_flat.sol\":2939:2967  _transferOwnership(newOwner) */\n      tag_185\n        /* \"RabaToken_flat.sol\":2958:2966  newOwner */\n      dup2\n        /* \"RabaToken_flat.sol\":2939:2957  _transferOwnership */\n      tag_146\n        /* \"RabaToken_flat.sol\":2939:2967  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_185:\n        /* \"RabaToken_flat.sol\":2776:2974  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"RabaToken_flat.sol\":16869:17239  function _approve(... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":17000:17019  owner != address(0) */\n      dup4\n      and\n        /* \"RabaToken_flat.sol\":16992:17060  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x20\n        /* \"RabaToken_flat.sol\":16992:17060  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5573:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5632   */\n      0x24\n        /* \"#utility.yul\":5610:5628   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5603:5633   */\n      mstore\n        /* \"#utility.yul\":5669:5703   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5649:5667   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5642:5704   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5720:5738   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5713:5747   */\n      mstore\n        /* \"#utility.yul\":5764:5783   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":16992:17060  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_133\n        /* \"#utility.yul\":5563:5789   */\n      jump\n        /* \"RabaToken_flat.sol\":16992:17060  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":17078:17099  spender != address(0) */\n      dup3\n      and\n        /* \"RabaToken_flat.sol\":17070:17138  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3301:3303   */\n      0x20\n        /* \"RabaToken_flat.sol\":17070:17138  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3283:3304   */\n      mstore\n        /* \"#utility.yul\":3340:3342   */\n      0x22\n        /* \"#utility.yul\":3320:3338   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3313:3343   */\n      mstore\n        /* \"#utility.yul\":3379:3413   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3359:3377   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3352:3414   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3430:3448   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3423:3455   */\n      mstore\n        /* \"#utility.yul\":3472:3491   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":17070:17138  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_133\n        /* \"#utility.yul\":3273:3497   */\n      jump\n        /* \"RabaToken_flat.sol\":17070:17138  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":17149:17167  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"RabaToken_flat.sol\":17149:17160  _allowances */\n      0x01\n        /* \"RabaToken_flat.sol\":17149:17167  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RabaToken_flat.sol\":17149:17176  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"RabaToken_flat.sol\":17149:17185  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"RabaToken_flat.sol\":17200:17232  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":7065:7090   */\n      dup5\n      dup2\n      mstore\n        /* \"RabaToken_flat.sol\":17200:17232  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":7038:7056   */\n      add\n        /* \"RabaToken_flat.sol\":17200:17232  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"RabaToken_flat.sol\":16869:17239  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RabaToken_flat.sol\":17516:17957  function _spendAllowance(... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":10837:10855  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"RabaToken_flat.sol\":17646:17670  uint256 currentAllowance */\n      0x00\n        /* \"RabaToken_flat.sol\":10837:10855  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"RabaToken_flat.sol\":10837:10848  _allowances */\n      0x01\n        /* \"RabaToken_flat.sol\":10837:10855  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RabaToken_flat.sol\":10837:10864  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"RabaToken_flat.sol\":17712:17749  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"RabaToken_flat.sol\":17708:17951  if (currentAllowance != type(uint256).max) {... */\n      tag_201\n      jumpi\n        /* \"RabaToken_flat.sol\":17793:17799  amount */\n      dup2\n        /* \"RabaToken_flat.sol\":17773:17789  currentAllowance */\n      dup2\n        /* \"RabaToken_flat.sol\":17773:17799  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"RabaToken_flat.sol\":17765:17833  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3704:3706   */\n      0x20\n        /* \"RabaToken_flat.sol\":17765:17833  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3686:3707   */\n      mstore\n        /* \"#utility.yul\":3743:3745   */\n      0x1d\n        /* \"#utility.yul\":3723:3741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3716:3746   */\n      mstore\n        /* \"#utility.yul\":3782:3813   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3762:3780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3755:3814   */\n      mstore\n        /* \"#utility.yul\":3831:3849   */\n      0x64\n      add\n        /* \"RabaToken_flat.sol\":17765:17833  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_133\n        /* \"#utility.yul\":3676:3855   */\n      jump\n        /* \"RabaToken_flat.sol\":17765:17833  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_198:\n        /* \"RabaToken_flat.sol\":17875:17926  _approve(owner, spender, currentAllowance - amount) */\n      tag_201\n        /* \"RabaToken_flat.sol\":17884:17889  owner */\n      dup5\n        /* \"RabaToken_flat.sol\":17891:17898  spender */\n      dup5\n        /* \"RabaToken_flat.sol\":17919:17925  amount */\n      dup5\n        /* \"RabaToken_flat.sol\":17900:17916  currentAllowance */\n      dup5\n        /* \"RabaToken_flat.sol\":17900:17925  currentAllowance - amount */\n      sub\n        /* \"RabaToken_flat.sol\":17875:17883  _approve */\n      tag_115\n        /* \"RabaToken_flat.sol\":17875:17926  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_201:\n        /* \"RabaToken_flat.sol\":17516:17957  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RabaToken_flat.sol\":14234:14885  function _transfer(... */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":14360:14378  from != address(0) */\n      dup4\n      and\n        /* \"RabaToken_flat.sol\":14352:14420  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5185:5187   */\n      0x20\n        /* \"RabaToken_flat.sol\":14352:14420  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5167:5188   */\n      mstore\n        /* \"#utility.yul\":5224:5226   */\n      0x25\n        /* \"#utility.yul\":5204:5222   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5197:5227   */\n      mstore\n        /* \"#utility.yul\":5263:5297   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5243:5261   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5236:5298   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5314:5332   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5307:5342   */\n      mstore\n        /* \"#utility.yul\":5359:5378   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":14352:14420  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_133\n        /* \"#utility.yul\":5157:5384   */\n      jump\n        /* \"RabaToken_flat.sol\":14352:14420  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":14438:14454  to != address(0) */\n      dup3\n      and\n        /* \"RabaToken_flat.sol\":14430:14494  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2490:2492   */\n      0x20\n        /* \"RabaToken_flat.sol\":14430:14494  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2472:2493   */\n      mstore\n        /* \"#utility.yul\":2529:2531   */\n      0x23\n        /* \"#utility.yul\":2509:2527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2502:2532   */\n      mstore\n        /* \"#utility.yul\":2568:2602   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2548:2566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2541:2603   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2619:2637   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2612:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2681   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":14430:14494  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_133\n        /* \"#utility.yul\":2462:2687   */\n      jump\n        /* \"RabaToken_flat.sol\":14430:14494  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":14576:14591  _balances[from] */\n      dup4\n      and\n        /* \"RabaToken_flat.sol\":14554:14573  uint256 fromBalance */\n      0x00\n        /* \"RabaToken_flat.sol\":14576:14591  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RabaToken_flat.sol\":14609:14630  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"RabaToken_flat.sol\":14601:14673  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4062:4064   */\n      0x20\n        /* \"RabaToken_flat.sol\":14601:14673  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4044:4065   */\n      mstore\n        /* \"#utility.yul\":4101:4103   */\n      0x26\n        /* \"#utility.yul\":4081:4099   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4074:4104   */\n      mstore\n        /* \"#utility.yul\":4140:4174   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":4120:4138   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4113:4175   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":4191:4209   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4184:4220   */\n      mstore\n        /* \"#utility.yul\":4237:4256   */\n      0x84\n      add\n        /* \"RabaToken_flat.sol\":14601:14673  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_133\n        /* \"#utility.yul\":4034:4262   */\n      jump\n        /* \"RabaToken_flat.sol\":14601:14673  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":14707:14722  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"RabaToken_flat.sol\":14707:14716  _balances */\n      0x00\n        /* \"RabaToken_flat.sol\":14707:14722  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"RabaToken_flat.sol\":14725:14745  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"RabaToken_flat.sol\":14707:14745  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"RabaToken_flat.sol\":14765:14778  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"RabaToken_flat.sol\":14765:14788  _balances[to] += amount */\n      dup1\n      sload\n        /* \"RabaToken_flat.sol\":14739:14745  amount */\n      dup5\n      swap3\n        /* \"RabaToken_flat.sol\":14707:14716  _balances */\n      swap1\n        /* \"RabaToken_flat.sol\":14765:14788  _balances[to] += amount */\n      tag_214\n      swap1\n        /* \"RabaToken_flat.sol\":14739:14745  amount */\n      dup5\n      swap1\n        /* \"RabaToken_flat.sol\":14765:14788  _balances[to] += amount */\n      tag_128\n      jump\t// in\n    tag_214:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RabaToken_flat.sol\":14819:14821  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":14804:14830  Transfer(from, to, amount) */\n      and\n        /* \"RabaToken_flat.sol\":14813:14817  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":14804:14830  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"RabaToken_flat.sol\":14823:14829  amount */\n      dup5\n        /* \"RabaToken_flat.sol\":14804:14830  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_215\n      swap2\n        /* \"#utility.yul\":7065:7090   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7053:7055   */\n      0x20\n        /* \"#utility.yul\":7038:7056   */\n      add\n      swap1\n        /* \"#utility.yul\":7020:7096   */\n      jump\n        /* \"RabaToken_flat.sol\":14804:14830  Transfer(from, to, amount) */\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"RabaToken_flat.sol\":14841:14878  _afterTokenTransfer(from, to, amount) */\n      tag_201\n        /* \"RabaToken_flat.sol\":18541:18662  function _beforeTokenTransfer(... */\n      jump\n        /* \"RabaToken_flat.sol\":15161:15550  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":15244:15265  account != address(0) */\n      dup3\n      and\n        /* \"RabaToken_flat.sol\":15236:15301  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6761:6763   */\n      0x20\n        /* \"RabaToken_flat.sol\":15236:15301  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6743:6764   */\n      mstore\n        /* \"#utility.yul\":6800:6802   */\n      0x1f\n        /* \"#utility.yul\":6780:6798   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6773:6803   */\n      mstore\n        /* \"#utility.yul\":6839:6872   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":6819:6837   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6812:6873   */\n      mstore\n        /* \"#utility.yul\":6890:6908   */\n      0x64\n      add\n        /* \"RabaToken_flat.sol\":15236:15301  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_133\n        /* \"#utility.yul\":6733:6914   */\n      jump\n        /* \"RabaToken_flat.sol\":15236:15301  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_219:\n        /* \"RabaToken_flat.sol\":15388:15394  amount */\n      dup1\n        /* \"RabaToken_flat.sol\":15372:15384  _totalSupply */\n      0x02\n      0x00\n        /* \"RabaToken_flat.sol\":15372:15394  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_223\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_223:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":15404:15422  _balances[account] */\n      dup3\n      and\n        /* \"RabaToken_flat.sol\":15404:15413  _balances */\n      0x00\n        /* \"RabaToken_flat.sol\":15404:15422  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"RabaToken_flat.sol\":15404:15432  _balances[account] += amount */\n      dup1\n      sload\n        /* \"RabaToken_flat.sol\":15426:15432  amount */\n      dup4\n      swap3\n        /* \"RabaToken_flat.sol\":15404:15413  _balances */\n      swap1\n        /* \"RabaToken_flat.sol\":15404:15432  _balances[account] += amount */\n      tag_224\n      swap1\n        /* \"RabaToken_flat.sol\":15426:15432  amount */\n      dup5\n      swap1\n        /* \"RabaToken_flat.sol\":15404:15432  _balances[account] += amount */\n      tag_128\n      jump\t// in\n    tag_224:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"RabaToken_flat.sol\":15447:15484  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":7065:7090   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":15447:15484  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"RabaToken_flat.sol\":15464:15465  0 */\n      0x00\n      swap1\n        /* \"RabaToken_flat.sol\":15447:15484  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":7053:7055   */\n      0x20\n        /* \"#utility.yul\":7038:7056   */\n      add\n        /* \"RabaToken_flat.sol\":15447:15484  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"RabaToken_flat.sol\":19741:19834  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"RabaToken_flat.sol\":3128:3315  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_146:\n        /* \"RabaToken_flat.sol\":3220:3226  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RabaToken_flat.sol\":3236:3253  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"RabaToken_flat.sol\":3268:3308  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"RabaToken_flat.sol\":3220:3226  _owner */\n      swap2\n      and\n      swap2\n        /* \"RabaToken_flat.sol\":3236:3253  _owner = newOwner */\n      swap1\n        /* \"RabaToken_flat.sol\":3220:3226  _owner */\n      dup3\n      swap1\n        /* \"RabaToken_flat.sol\":3268:3308  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"RabaToken_flat.sol\":3201:3217  address oldOwner */\n      0x00\n      swap1\n        /* \"RabaToken_flat.sol\":3268:3308  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"RabaToken_flat.sol\":3128:3315  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_231:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_233:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:388   */\n    tag_66:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_235:\n        /* \"#utility.yul\":353:382   */\n      tag_236\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_231\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":343:382   */\n      swap4\n        /* \"#utility.yul\":262:388   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":393:663   */\n    tag_97:\n        /* \"#utility.yul\":461:467   */\n      0x00\n        /* \"#utility.yul\":469:475   */\n      dup1\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":510:519   */\n      dup4\n        /* \"#utility.yul\":501:508   */\n      dup6\n        /* \"#utility.yul\":497:520   */\n      sub\n        /* \"#utility.yul\":493:525   */\n      slt\n        /* \"#utility.yul\":490:492   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":543:549   */\n      dup1\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":528:550   */\n      revert\n        /* \"#utility.yul\":490:492   */\n    tag_238:\n        /* \"#utility.yul\":571:600   */\n      tag_239\n        /* \"#utility.yul\":590:599   */\n      dup4\n        /* \"#utility.yul\":571:600   */\n      tag_231\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":561:600   */\n      swap2\n      pop\n        /* \"#utility.yul\":619:657   */\n      tag_240\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":642:651   */\n      dup5\n        /* \"#utility.yul\":638:656   */\n      add\n        /* \"#utility.yul\":619:657   */\n      tag_231\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":609:657   */\n      swap1\n      pop\n        /* \"#utility.yul\":480:663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:1006   */\n    tag_42:\n        /* \"#utility.yul\":745:751   */\n      0x00\n        /* \"#utility.yul\":753:759   */\n      dup1\n        /* \"#utility.yul\":761:767   */\n      0x00\n        /* \"#utility.yul\":814:816   */\n      0x60\n        /* \"#utility.yul\":802:811   */\n      dup5\n        /* \"#utility.yul\":793:800   */\n      dup7\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:784   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":835:841   */\n      dup1\n        /* \"#utility.yul\":827:833   */\n      dup2\n        /* \"#utility.yul\":820:842   */\n      revert\n        /* \"#utility.yul\":782:784   */\n    tag_242:\n        /* \"#utility.yul\":863:892   */\n      tag_243\n        /* \"#utility.yul\":882:891   */\n      dup5\n        /* \"#utility.yul\":863:892   */\n      tag_231\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":853:892   */\n      swap3\n      pop\n        /* \"#utility.yul\":911:949   */\n      tag_244\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup6\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":911:949   */\n      tag_231\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":901:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":996:998   */\n      0x40\n        /* \"#utility.yul\":985:994   */\n      dup5\n        /* \"#utility.yul\":981:999   */\n      add\n        /* \"#utility.yul\":968:1000   */\n      calldataload\n        /* \"#utility.yul\":958:1000   */\n      swap1\n      pop\n        /* \"#utility.yul\":772:1006   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1011:1275   */\n    tag_30:\n        /* \"#utility.yul\":1079:1085   */\n      0x00\n        /* \"#utility.yul\":1087:1093   */\n      dup1\n        /* \"#utility.yul\":1140:1142   */\n      0x40\n        /* \"#utility.yul\":1128:1137   */\n      dup4\n        /* \"#utility.yul\":1119:1126   */\n      dup6\n        /* \"#utility.yul\":1115:1138   */\n      sub\n        /* \"#utility.yul\":1111:1143   */\n      slt\n        /* \"#utility.yul\":1108:1110   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":1161:1167   */\n      dup2\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1146:1168   */\n      revert\n        /* \"#utility.yul\":1108:1110   */\n    tag_246:\n        /* \"#utility.yul\":1189:1218   */\n      tag_247\n        /* \"#utility.yul\":1208:1217   */\n      dup4\n        /* \"#utility.yul\":1189:1218   */\n      tag_231\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1179:1218   */\n      swap5\n        /* \"#utility.yul\":1265:1267   */\n      0x20\n        /* \"#utility.yul\":1250:1268   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1237:1269   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1275   */\n      jump\t// out\n        /* \"#utility.yul\":1680:2283   */\n    tag_26:\n        /* \"#utility.yul\":1792:1796   */\n      0x00\n        /* \"#utility.yul\":1821:1823   */\n      0x20\n        /* \"#utility.yul\":1850:1852   */\n      dup1\n        /* \"#utility.yul\":1839:1848   */\n      dup4\n        /* \"#utility.yul\":1832:1853   */\n      mstore\n        /* \"#utility.yul\":1882:1888   */\n      dup4\n        /* \"#utility.yul\":1876:1889   */\n      mload\n        /* \"#utility.yul\":1925:1931   */\n      dup1\n        /* \"#utility.yul\":1920:1922   */\n      dup3\n        /* \"#utility.yul\":1909:1918   */\n      dup6\n        /* \"#utility.yul\":1905:1923   */\n      add\n        /* \"#utility.yul\":1898:1932   */\n      mstore\n        /* \"#utility.yul\":1950:1954   */\n      dup3\n        /* \"#utility.yul\":1963:2103   */\n    tag_251:\n        /* \"#utility.yul\":1977:1983   */\n      dup2\n        /* \"#utility.yul\":1974:1975   */\n      dup2\n        /* \"#utility.yul\":1971:1984   */\n      lt\n        /* \"#utility.yul\":1963:2103   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2072:2086   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2068:2091   */\n      dup4\n      add\n        /* \"#utility.yul\":2062:2092   */\n      mload\n        /* \"#utility.yul\":2038:2055   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2057:2059   */\n      0x40\n        /* \"#utility.yul\":2034:2060   */\n      add\n        /* \"#utility.yul\":2027:2093   */\n      mstore\n        /* \"#utility.yul\":1992:2002   */\n      dup3\n      add\n        /* \"#utility.yul\":1963:2103   */\n      jump(tag_251)\n    tag_253:\n        /* \"#utility.yul\":2121:2127   */\n      dup2\n        /* \"#utility.yul\":2118:2119   */\n      dup2\n        /* \"#utility.yul\":2115:2128   */\n      gt\n        /* \"#utility.yul\":2112:2114   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":2191:2195   */\n      dup4\n        /* \"#utility.yul\":2186:2188   */\n      0x40\n        /* \"#utility.yul\":2177:2183   */\n      dup4\n        /* \"#utility.yul\":2166:2175   */\n      dup8\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2158:2189   */\n      add\n        /* \"#utility.yul\":2151:2196   */\n      mstore\n        /* \"#utility.yul\":2112:2114   */\n    tag_254:\n      pop\n        /* \"#utility.yul\":2267:2269   */\n      0x1f\n        /* \"#utility.yul\":2246:2261   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2242:2271   */\n      and\n        /* \"#utility.yul\":2227:2272   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2274:2276   */\n      0x40\n        /* \"#utility.yul\":2223:2277   */\n      add\n      swap4\n        /* \"#utility.yul\":1801:2283   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4622:4978   */\n    tag_134:\n        /* \"#utility.yul\":4824:4826   */\n      0x20\n        /* \"#utility.yul\":4806:4827   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4843:4861   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4836:4866   */\n      mstore\n        /* \"#utility.yul\":4902:4936   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4897:4899   */\n      0x40\n        /* \"#utility.yul\":4882:4900   */\n      dup3\n      add\n        /* \"#utility.yul\":4875:4937   */\n      mstore\n        /* \"#utility.yul\":4969:4971   */\n      0x60\n        /* \"#utility.yul\":4954:4972   */\n      add\n      swap1\n        /* \"#utility.yul\":4796:4978   */\n      jump\t// out\n        /* \"#utility.yul\":7290:7418   */\n    tag_128:\n        /* \"#utility.yul\":7330:7333   */\n      0x00\n        /* \"#utility.yul\":7361:7362   */\n      dup3\n        /* \"#utility.yul\":7357:7363   */\n      not\n        /* \"#utility.yul\":7354:7355   */\n      dup3\n        /* \"#utility.yul\":7351:7364   */\n      gt\n        /* \"#utility.yul\":7348:7350   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":7367:7385   */\n      tag_271\n      tag_272\n      jump\t// in\n    tag_271:\n      pop\n        /* \"#utility.yul\":7403:7412   */\n      add\n      swap1\n        /* \"#utility.yul\":7338:7418   */\n      jump\t// out\n        /* \"#utility.yul\":7423:7591   */\n    tag_152:\n        /* \"#utility.yul\":7463:7470   */\n      0x00\n        /* \"#utility.yul\":7529:7530   */\n      dup2\n        /* \"#utility.yul\":7525:7526   */\n      0x00\n        /* \"#utility.yul\":7521:7527   */\n      not\n        /* \"#utility.yul\":7517:7531   */\n      div\n        /* \"#utility.yul\":7514:7515   */\n      dup4\n        /* \"#utility.yul\":7511:7532   */\n      gt\n        /* \"#utility.yul\":7506:7507   */\n      dup3\n        /* \"#utility.yul\":7499:7508   */\n      iszero\n        /* \"#utility.yul\":7492:7509   */\n      iszero\n        /* \"#utility.yul\":7488:7533   */\n      and\n        /* \"#utility.yul\":7485:7487   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":7536:7554   */\n      tag_275\n      tag_272\n      jump\t// in\n    tag_275:\n      pop\n        /* \"#utility.yul\":7576:7585   */\n      mul\n      swap1\n        /* \"#utility.yul\":7475:7591   */\n      jump\t// out\n        /* \"#utility.yul\":7596:7976   */\n    tag_106:\n        /* \"#utility.yul\":7675:7676   */\n      0x01\n        /* \"#utility.yul\":7671:7683   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7718:7730   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7739:7741   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":7793:7797   */\n      0x7f\n        /* \"#utility.yul\":7785:7791   */\n      dup3\n        /* \"#utility.yul\":7781:7798   */\n      and\n        /* \"#utility.yul\":7771:7798   */\n      swap2\n      pop\n        /* \"#utility.yul\":7739:7741   */\n    tag_277:\n        /* \"#utility.yul\":7846:7848   */\n      0x20\n        /* \"#utility.yul\":7838:7844   */\n      dup3\n        /* \"#utility.yul\":7835:7849   */\n      lt\n        /* \"#utility.yul\":7815:7833   */\n      dup2\n        /* \"#utility.yul\":7812:7850   */\n      eq\n        /* \"#utility.yul\":7809:7811   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":7892:7902   */\n      0x4e487b71\n        /* \"#utility.yul\":7887:7890   */\n      0xe0\n        /* \"#utility.yul\":7883:7903   */\n      shl\n        /* \"#utility.yul\":7880:7881   */\n      0x00\n        /* \"#utility.yul\":7873:7904   */\n      mstore\n        /* \"#utility.yul\":7927:7931   */\n      0x22\n        /* \"#utility.yul\":7924:7925   */\n      0x04\n        /* \"#utility.yul\":7917:7932   */\n      mstore\n        /* \"#utility.yul\":7955:7959   */\n      0x24\n        /* \"#utility.yul\":7952:7953   */\n      0x00\n        /* \"#utility.yul\":7945:7960   */\n      revert\n        /* \"#utility.yul\":7809:7811   */\n    tag_278:\n      pop\n        /* \"#utility.yul\":7651:7976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7981:8108   */\n    tag_272:\n        /* \"#utility.yul\":8042:8052   */\n      0x4e487b71\n        /* \"#utility.yul\":8037:8040   */\n      0xe0\n        /* \"#utility.yul\":8033:8053   */\n      shl\n        /* \"#utility.yul\":8030:8031   */\n      0x00\n        /* \"#utility.yul\":8023:8054   */\n      mstore\n        /* \"#utility.yul\":8073:8077   */\n      0x11\n        /* \"#utility.yul\":8070:8071   */\n      0x04\n        /* \"#utility.yul\":8063:8078   */\n      mstore\n        /* \"#utility.yul\":8097:8101   */\n      0x24\n        /* \"#utility.yul\":8094:8095   */\n      0x00\n        /* \"#utility.yul\":8087:8102   */\n      revert\n\n    auxdata: 0xa2646970667358221220bfd116215f5382bb60a9491e93d1fe2599231c2638a38bb40b2b26b56013219a64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2759:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "360:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "337:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "497:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "485:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "527:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "520:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "520:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "444:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "455:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "466:4:1",
														"type": ""
													}
												],
												"src": "374:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "604:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "631:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "633:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "633:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "633:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "620:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "627:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "617:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:13:1"
															},
															"nodeType": "YulIf",
															"src": "614:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "662:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "673:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "676:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "669:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "669:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "662:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "587:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "590:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "596:3:1",
														"type": ""
													}
												],
												"src": "556:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "753:358:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "763:16:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "778:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "767:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "788:16:1",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "797:7:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "788:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "813:13:1",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "821:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "813:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "877:228:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "922:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "924:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "924:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "924:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "897:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "911:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "907:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "907:6:1"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "915:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "903:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "903:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "894:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "894:27:1"
																		},
																		"nodeType": "YulIf",
																		"src": "891:2:1"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "983:29:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "985:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "998:5:1"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "1005:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "994:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "994:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "985:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "964:8:1"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "974:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "960:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "960:22:1"
																		},
																		"nodeType": "YulIf",
																		"src": "957:2:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1025:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1037:4:1"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1043:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "1033:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1033:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "1025:4:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1061:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "1077:7:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1086:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "1073:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1073:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1061:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "846:8:1"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "856:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "843:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:21:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "865:3:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "839:3:1",
																"statements": []
															},
															"src": "835:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "717:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "724:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "737:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "744:4:1",
														"type": ""
													}
												],
												"src": "689:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1184:72:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1194:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1234:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1244:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1230:19:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1203:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:47:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1155:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1161:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1174:5:1",
														"type": ""
													}
												],
												"src": "1116:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1320:747:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1358:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1372:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1381:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1372:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1395:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1340:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1333:16:1"
															},
															"nodeType": "YulIf",
															"src": "1330:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1443:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1457:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1466:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1457:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1480:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1429:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1422:12:1"
															},
															"nodeType": "YulIf",
															"src": "1419:2:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1531:52:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "1545:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1554:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1545:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1568:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1524:59:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1529:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1599:123:1",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "1634:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "1636:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1636:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "1636:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1619:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1629:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "1616:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1616:17:1"
																				},
																				"nodeType": "YulIf",
																				"src": "1613:2:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "1669:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1682:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1692:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1678:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1678:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1669:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1707:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1592:130:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1597:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "1511:4:1"
															},
															"nodeType": "YulSwitch",
															"src": "1504:218:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1820:70:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1834:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1847:4:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1853:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1843:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1843:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1834:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1875:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1744:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1750:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1741:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1741:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1758:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1768:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1755:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1755:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1737:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1781:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1787:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1778:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1778:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1796:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1806:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1793:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1793:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1774:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1774:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1734:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:77:1"
															},
															"nodeType": "YulIf",
															"src": "1731:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1899:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1941:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1947:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "1922:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1903:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "1912:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2001:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2003:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1971:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1988:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1984:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1984:6:1"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "1992:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "1980:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1980:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1968:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:32:1"
															},
															"nodeType": "YulIf",
															"src": "1965:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "2045:7:1"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "2054:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2041:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2041:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2032:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1291:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1297:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1310:5:1",
														"type": ""
													}
												],
												"src": "1261:806:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2124:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2185:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2185:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2185:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2155:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2148:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2148:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2141:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2163:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2174:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2170:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2170:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2178:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2166:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2160:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2160:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2137:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2137:45:1"
															},
															"nodeType": "YulIf",
															"src": "2134:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2214:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2229:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2232:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2225:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2214:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2103:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2106:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2112:7:1",
														"type": ""
													}
												],
												"src": "2072:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2300:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2310:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2324:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2327:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2320:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2310:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2341:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2371:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2377:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2367:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2367:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2345:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2418:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2420:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2434:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2442:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2430:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2420:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2398:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2391:26:1"
															},
															"nodeType": "YulIf",
															"src": "2388:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2508:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2529:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2536:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2541:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2532:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2532:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2522:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2522:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2522:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2573:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2576:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2566:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2601:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2604:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2594:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2594:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2594:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2464:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2487:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2495:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2484:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2484:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2461:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2461:38:1"
															},
															"nodeType": "YulIf",
															"src": "2458:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2280:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2289:6:1",
														"type": ""
													}
												],
												"src": "2245:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2662:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2686:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2691:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2672:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2719:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2722:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2712:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2743:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2746:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2736:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2736:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2630:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051806040016040528060098152602001682930b130aa37b5b2b760b91b8152506040518060400160405280600381526020016252544b60e81b8152508160039080519060200190620000689291906200022d565b5080516200007e9060049060208401906200022d565b5050506200009b62000095620000ef60201b60201c565b620000f3565b612710600655620000af6012600a62000337565b620000be90620f424062000405565b600755620000e933620000d46012600a62000337565b620000e390620f424062000405565b62000145565b6200047a565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001a05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001b49190620002d3565b90915550506001600160a01b03821660009081526020819052604081208054839290620001e3908490620002d3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200023b9062000427565b90600052602060002090601f0160209004810192826200025f5760008555620002aa565b82601f106200027a57805160ff1916838001178555620002aa565b82800160010185558215620002aa579182015b82811115620002aa5782518255916020019190600101906200028d565b50620002b8929150620002bc565b5090565b5b80821115620002b85760008155600101620002bd565b60008219821115620002e957620002e962000464565b500190565b600181815b808511156200032f57816000190482111562000313576200031362000464565b808516156200032157918102915b93841c9390800290620002f3565b509250929050565b60006200034860ff8416836200034f565b9392505050565b6000826200036057506001620003ff565b816200036f57506000620003ff565b81600181146200038857600281146200039357620003b3565b6001915050620003ff565b60ff841115620003a757620003a762000464565b50506001821b620003ff565b5060208310610133831016604e8410600b8410161715620003d8575081810a620003ff565b620003e48383620002ee565b8060001904821115620003fb57620003fb62000464565b0290505b92915050565b600081600019048311821515161562000422576200042262000464565b500290565b600181811c908216806200043c57607f821691505b602082108114156200045e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b610d65806200048a6000396000f3fe6080604052600436106100fe5760003560e01c806370a082311161009557806395d89b411161006457806395d89b4114610297578063a457c2d7146102ac578063a9059cbb146102cc578063dd62ed3e146102ec578063f2fde38b1461033257600080fd5b806370a0823114610211578063715018a6146102475780637e72fb521461025c5780638da5cb5b1461026f57600080fd5b80632c4e722e116100d15780632c4e722e1461019d578063313ce567146101b357806339509351146101cf57806340c10f19146101ef57600080fd5b806306fdde0314610103578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017d575b600080fd5b34801561010f57600080fd5b50610118610352565b6040516101259190610c1f565b60405180910390f35b34801561013a57600080fd5b5061014e610149366004610bf6565b6103e4565b6040519015158152602001610125565b34801561016a57600080fd5b506002545b604051908152602001610125565b34801561018957600080fd5b5061014e610198366004610bbb565b6103fc565b3480156101a957600080fd5b5061016f60065481565b3480156101bf57600080fd5b5060405160128152602001610125565b3480156101db57600080fd5b5061014e6101ea366004610bf6565b610420565b3480156101fb57600080fd5b5061020f61020a366004610bf6565b61045f565b005b34801561021d57600080fd5b5061016f61022c366004610b68565b6001600160a01b031660009081526020819052604090205490565b34801561025357600080fd5b5061020f6104a0565b61020f61026a366004610b68565b6104d6565b34801561027b57600080fd5b506005546040516001600160a01b039091168152602001610125565b3480156102a357600080fd5b5061011861054d565b3480156102b857600080fd5b5061014e6102c7366004610bf6565b61055c565b3480156102d857600080fd5b5061014e6102e7366004610bf6565b6105ee565b3480156102f857600080fd5b5061016f610307366004610b89565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561033e57600080fd5b5061020f61034d366004610b68565b6105fc565b60606003805461036190610cde565b80601f016020809104026020016040519081016040528092919081815260200182805461038d90610cde565b80156103da5780601f106103af576101008083540402835291602001916103da565b820191906000526020600020905b8154815290600101906020018083116103bd57829003601f168201915b5050505050905090565b6000336103f2818585610697565b5060019392505050565b60003361040a8582856107bb565b61041585858561084d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103f2908290869061045a908790610ca7565b610697565b6005546001600160a01b031633146104925760405162461bcd60e51b815260040161048990610c72565b60405180910390fd5b61049c8282610a1b565b5050565b6005546001600160a01b031633146104ca5760405162461bcd60e51b815260040161048990610c72565b6104d46000610afa565b565b6000600654346104e69190610cbf565b9050806104f260025490565b6104fc9190610ca7565b60075410156104925760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742065786365656420666978656420737570706c790000000000006044820152606401610489565b60606004805461036190610cde565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105e15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610489565b6104158286868403610697565b6000336103f281858561084d565b6005546001600160a01b031633146106265760405162461bcd60e51b815260040161048990610c72565b6001600160a01b03811661068b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610489565b61069481610afa565b50565b6001600160a01b0383166106f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610489565b6001600160a01b03821661075a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610489565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610847578181101561083a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610489565b6108478484848403610697565b50505050565b6001600160a01b0383166108b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610489565b6001600160a01b0382166109135760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610489565b6001600160a01b0383166000908152602081905260409020548181101561098b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610489565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109c2908490610ca7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a0e91815260200190565b60405180910390a3610847565b6001600160a01b038216610a715760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610489565b8060026000828254610a839190610ca7565b90915550506001600160a01b03821660009081526020819052604081208054839290610ab0908490610ca7565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610b6357600080fd5b919050565b600060208284031215610b79578081fd5b610b8282610b4c565b9392505050565b60008060408385031215610b9b578081fd5b610ba483610b4c565b9150610bb260208401610b4c565b90509250929050565b600080600060608486031215610bcf578081fd5b610bd884610b4c565b9250610be660208501610b4c565b9150604084013590509250925092565b60008060408385031215610c08578182fd5b610c1183610b4c565b946020939093013593505050565b6000602080835283518082850152825b81811015610c4b57858101830151858201604001528201610c2f565b81811115610c5c5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610cba57610cba610d19565b500190565b6000816000190483118215151615610cd957610cd9610d19565b500290565b600181811c90821680610cf257607f821691505b60208210811415610d1357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220bfd116215f5382bb60a9491e93d1fe2599231c2638a38bb40b2b26b56013219a64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2930B130AA37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x52544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x22D JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x7E SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x22D JUMP JUMPDEST POP POP POP PUSH3 0x9B PUSH3 0x95 PUSH3 0xEF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF3 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x6 SSTORE PUSH3 0xAF PUSH1 0x12 PUSH1 0xA PUSH3 0x337 JUMP JUMPDEST PUSH3 0xBE SWAP1 PUSH3 0xF4240 PUSH3 0x405 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH3 0xE9 CALLER PUSH3 0xD4 PUSH1 0x12 PUSH1 0xA PUSH3 0x337 JUMP JUMPDEST PUSH3 0xE3 SWAP1 PUSH3 0xF4240 PUSH3 0x405 JUMP JUMPDEST PUSH3 0x145 JUMP JUMPDEST PUSH3 0x47A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1B4 SWAP2 SWAP1 PUSH3 0x2D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1E3 SWAP1 DUP5 SWAP1 PUSH3 0x2D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x23B SWAP1 PUSH3 0x427 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x25F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2AA JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x27A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2AA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2AA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2AA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x28D JUMP JUMPDEST POP PUSH3 0x2B8 SWAP3 SWAP2 POP PUSH3 0x2BC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2B8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2BD JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E9 PUSH3 0x464 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x32F JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x313 JUMPI PUSH3 0x313 PUSH3 0x464 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x321 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x2F3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x348 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x34F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x360 JUMPI POP PUSH1 0x1 PUSH3 0x3FF JUMP JUMPDEST DUP2 PUSH3 0x36F JUMPI POP PUSH1 0x0 PUSH3 0x3FF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x388 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x393 JUMPI PUSH3 0x3B3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x3FF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x3A7 JUMPI PUSH3 0x3A7 PUSH3 0x464 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x3FF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x3D8 JUMPI POP DUP2 DUP2 EXP PUSH3 0x3FF JUMP JUMPDEST PUSH3 0x3E4 DUP4 DUP4 PUSH3 0x2EE JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x3FB JUMPI PUSH3 0x3FB PUSH3 0x464 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x422 JUMPI PUSH3 0x422 PUSH3 0x464 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x43C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x45E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD65 DUP1 PUSH3 0x48A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x7E72FB52 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C4E722E GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xBBB JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x420 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0xB68 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x54D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0xB68 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x361 SWAP1 PUSH2 0xCDE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38D SWAP1 PUSH2 0xCDE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3F2 DUP2 DUP6 DUP6 PUSH2 0x697 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x40A DUP6 DUP3 DUP6 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x415 DUP6 DUP6 DUP6 PUSH2 0x84D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x3F2 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x45A SWAP1 DUP8 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x489 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x49C DUP3 DUP3 PUSH2 0xA1B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x489 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH2 0x4D4 PUSH1 0x0 PUSH2 0xAFA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD CALLVALUE PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0xCBF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x4F2 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x7 SLOAD LT ISZERO PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742065786365656420666978656420737570706C79000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x361 SWAP1 PUSH2 0xCDE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH2 0x415 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x697 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3F2 DUP2 DUP6 DUP6 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x489 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH2 0x694 DUP2 PUSH2 0xAFA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x847 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x489 JUMP JUMPDEST PUSH2 0x847 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x697 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x913 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x9C2 SWAP1 DUP5 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA0E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x489 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA83 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAB0 SWAP1 DUP5 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB79 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB82 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9B JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBA4 DUP4 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP PUSH2 0xBB2 PUSH1 0x20 DUP5 ADD PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBCF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBD8 DUP5 PUSH2 0xB4C JUMP JUMPDEST SWAP3 POP PUSH2 0xBE6 PUSH1 0x20 DUP6 ADD PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC08 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xC11 DUP4 PUSH2 0xB4C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC4B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC2F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC5C JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCBA JUMPI PUSH2 0xCBA PUSH2 0xD19 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCD9 JUMPI PUSH2 0xCD9 PUSH2 0xD19 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCF2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD13 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xD1 AND 0x21 0x5F MSTORE8 DUP3 0xBB PUSH1 0xA9 0x49 0x1E SWAP4 0xD1 INVALID 0x25 SWAP10 0x23 SHR 0x26 CODESIZE LOG3 DUP12 0xB4 SIGNEXTEND 0x2B 0x26 0xB5 PUSH1 0x13 0x21 SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "19436:683:0:-:0;;;19561:174;;;;;;;;;;8724:113;;;;;;;;;;;;;-1:-1:-1;;;8724:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;8724:113:0;;;8798:5;8790;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8813:17:0;;;;:7;;:17;;;;;:::i;:::-;;8724:113;;1779:32;1798:12;:10;;;:12;;:::i;:::-;1779:18;:32::i;:::-;19618:5:::1;19611:4;:12:::0;19657:16:::1;9921:2:::0;19657::::1;:16;:::i;:::-;19647:26;::::0;:7:::1;:26;:::i;:::-;19633:11;:40:::0;19683:45:::1;19689:10;19711:16;9921:2:::0;19711::::1;:16;:::i;:::-;19701:26;::::0;:7:::1;:26;:::i;:::-;19683:5;:45::i;:::-;19436:683:::0;;662:96;741:10;;662:96::o;3128:187::-;3220:6;;;-1:-1:-1;;;;;3236:17:0;;;-1:-1:-1;;;;;;3236:17:0;;;;;;;3268:40;;3220:6;;;3236:17;3220:6;;3268:40;;3201:16;;3268:40;3128:187;;:::o;15161:389::-;-1:-1:-1;;;;;15244:21:0;;15236:65;;;;-1:-1:-1;;;15236:65:0;;216:2:1;15236:65:0;;;198:21:1;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;15236:65:0;;;;;;;;15388:6;15372:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;15404:18:0;;:9;:18;;;;;;;;;;:28;;15426:6;;15404:9;:28;;15426:6;;15404:28;:::i;:::-;;;;-1:-1:-1;;15447:37:0;;520:25:1;;;-1:-1:-1;;;;;15447:37:0;;;15464:1;;15447:37;;508:2:1;493:18;15447:37:0;;;;;;;15161:389;;:::o;19436:683::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19436:683:0;;;-1:-1:-1;19436:683:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;556:128:1;596:3;627:1;623:6;620:1;617:13;614:2;;;633:18;;:::i;:::-;-1:-1:-1;669:9:1;;604:80::o;689:422::-;778:1;821:5;778:1;835:270;856:7;846:8;843:21;835:270;;;915:4;911:1;907:6;903:17;897:4;894:27;891:2;;;924:18;;:::i;:::-;974:7;964:8;960:22;957:2;;;994:16;;;;957:2;1073:22;;;;1033:15;;;;835:270;;;839:3;753:358;;;;;:::o;1116:140::-;1174:5;1203:47;1244:4;1234:8;1230:19;1224:4;1203:47;:::i;:::-;1194:56;1184:72;-1:-1:-1;;;1184:72:1:o;1261:806::-;1310:5;1340:8;1330:2;;-1:-1:-1;1381:1:1;1395:5;;1330:2;1429:4;1419:2;;-1:-1:-1;1466:1:1;1480:5;;1419:2;1511:4;1529:1;1524:59;;;;1597:1;1592:130;;;;1504:218;;1524:59;1554:1;1545:10;;1568:5;;;1592:130;1629:3;1619:8;1616:17;1613:2;;;1636:18;;:::i;:::-;-1:-1:-1;;1692:1:1;1678:16;;1707:5;;1504:218;;1806:2;1796:8;1793:16;1787:3;1781:4;1778:13;1774:36;1768:2;1758:8;1755:16;1750:2;1744:4;1741:12;1737:35;1734:77;1731:2;;;-1:-1:-1;1843:19:1;;;1875:5;;1731:2;1922:34;1947:8;1941:4;1922:34;:::i;:::-;1992:6;1988:1;1984:6;1980:19;1971:7;1968:32;1965:2;;;2003:18;;:::i;:::-;2041:20;;-1:-1:-1;1320:747:1;;;;;:::o;2072:168::-;2112:7;2178:1;2174;2170:6;2166:14;2163:1;2160:21;2155:1;2148:9;2141:17;2137:45;2134:2;;;2185:18;;:::i;:::-;-1:-1:-1;2225:9:1;;2124:116::o;2245:380::-;2324:1;2320:12;;;;2367;;;2388:2;;2442:4;2434:6;2430:17;2420:27;;2388:2;2495;2487:6;2484:14;2464:18;2461:38;2458:2;;;2541:10;2536:3;2532:20;2529:1;2522:31;2576:4;2573:1;2566:15;2604:4;2601:1;2594:15;2458:2;;2300:325;;;:::o;2630:127::-;2691:10;2686:3;2682:20;2679:1;2672:31;2722:4;2719:1;2712:15;2746:4;2743:1;2736:15;2662:95;19436:683:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8110:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:2:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:183:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "535:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "543:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "528:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "528:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "528:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "501:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:32:1"
															},
															"nodeType": "YulIf",
															"src": "490:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "571:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "609:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "619:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "438:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "449:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "461:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "469:6:1",
														"type": ""
													}
												],
												"src": "393:270:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:234:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "827:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:1"
															},
															"nodeType": "YulIf",
															"src": "782:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "853:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "863:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "901:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "945:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "911:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "958:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "996:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "722:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "733:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "745:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "753:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "761:6:1",
														"type": ""
													}
												],
												"src": "668:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1144:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1153:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1161:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1119:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1115:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1111:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:32:1"
															},
															"nodeType": "YulIf",
															"src": "1108:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1179:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1208:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1189:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1254:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1265:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1237:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1056:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1067:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1087:6:1",
														"type": ""
													}
												],
												"src": "1011:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1381:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1391:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1403:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1414:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1391:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1433:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1448:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1464:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1469:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1460:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1460:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1473:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1456:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1456:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1426:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1350:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1361:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1372:4:1",
														"type": ""
													}
												],
												"src": "1280:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1583:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1593:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1635:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1660:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1653:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1653:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1646:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1552:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1563:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1574:4:1",
														"type": ""
													}
												],
												"src": "1488:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1801:482:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1811:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1821:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1815:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1839:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1850:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1832:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1862:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1882:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1876:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1866:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1909:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1920:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1925:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1941:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1950:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1945:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2013:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2042:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2053:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2038:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2038:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2057:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2034:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2034:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2076:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2084:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2072:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2072:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2088:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2068:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2068:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2062:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2062:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2027:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1974:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1977:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1971:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1985:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1987:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1996:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1999:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1992:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1992:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1987:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1967:3:1",
																"statements": []
															},
															"src": "1963:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2137:69:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2166:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2177:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2162:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2162:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2186:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2158:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2158:31:1"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "2191:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2151:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2151:45:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2151:45:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2118:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2121:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2115:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:13:1"
															},
															"nodeType": "YulIf",
															"src": "2112:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2215:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2231:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2250:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2258:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2246:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2246:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2267:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2263:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2263:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2242:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2242:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2223:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2215:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1770:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1781:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1792:4:1",
														"type": ""
													}
												],
												"src": "1680:603:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2462:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2479:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2490:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2472:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2524:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2509:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2529:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2502:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2563:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2548:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2568:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2541:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2541:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2623:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2634:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2619:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2619:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2639:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2612:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2612:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2654:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2666:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2439:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2453:4:1",
														"type": ""
													}
												],
												"src": "2288:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2866:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2883:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2894:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2876:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2876:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2917:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2928:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2913:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2933:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2906:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2956:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2967:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2952:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2972:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2945:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3038:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3043:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3016:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3061:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3084:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3069:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3061:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2843:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2857:4:1",
														"type": ""
													}
												],
												"src": "2692:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3273:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3290:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3324:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3335:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3320:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3340:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3363:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3374:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3359:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3379:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3352:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3434:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3445:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3430:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3430:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3450:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3423:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3423:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3423:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3464:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3476:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3487:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3472:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3472:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3464:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3250:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3264:4:1",
														"type": ""
													}
												],
												"src": "3099:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3676:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3693:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3704:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3727:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3738:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3743:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3716:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3766:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3777:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3782:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3755:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3755:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3823:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3835:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3846:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3831:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3831:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3823:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3653:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3667:4:1",
														"type": ""
													}
												],
												"src": "3502:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4034:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4051:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4062:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4044:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4044:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4085:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4096:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4081:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4081:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4074:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4074:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4074:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4124:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4135:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4120:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4140:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4113:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4113:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4195:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4206:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4191:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4191:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4211:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4184:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4229:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4241:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4252:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4237:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4229:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4011:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4025:4:1",
														"type": ""
													}
												],
												"src": "3860:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4441:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4458:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4469:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4451:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4451:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4492:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4503:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4488:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4488:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4508:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4481:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4481:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4481:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4531:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4542:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4527:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4527:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4547:28:1",
																		"type": "",
																		"value": "Cannot exceed fixed supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4520:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4585:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4597:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4608:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4593:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4585:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_92976511047df17b29e5a4d2526080343d53bb87c2b4288676fd53f33fd5e114__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4418:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4432:4:1",
														"type": ""
													}
												],
												"src": "4267:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4796:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4813:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4824:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4847:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4858:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4843:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4843:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4863:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4836:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4836:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4836:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4886:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4897:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4882:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4902:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4875:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4875:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4946:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4958:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4969:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4954:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4954:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4946:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4773:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4787:4:1",
														"type": ""
													}
												],
												"src": "4622:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5157:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5174:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5185:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5167:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5167:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5167:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5208:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5219:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5204:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5204:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5224:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5197:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5197:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5247:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5258:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5243:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5263:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5236:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5329:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5314:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5334:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5307:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5307:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5307:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5351:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5363:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5374:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5359:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5359:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5351:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5134:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5148:4:1",
														"type": ""
													}
												],
												"src": "4983:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5563:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5580:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5573:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5573:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5573:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5630:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5664:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5649:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5649:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5669:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5642:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5642:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5642:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5724:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5735:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5720:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5720:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5740:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5713:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5713:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5713:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5756:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5768:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5779:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5764:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5764:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5756:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5540:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5554:4:1",
														"type": ""
													}
												],
												"src": "5389:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5968:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5985:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5996:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5978:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5978:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5978:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6019:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6030:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6015:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6015:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6035:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6008:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6008:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6008:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6058:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6069:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6054:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6074:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6047:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6047:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6129:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6140:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6125:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6145:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6118:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6162:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6174:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6185:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6162:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5945:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5959:4:1",
														"type": ""
													}
												],
												"src": "5794:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6374:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6391:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6402:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6384:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6384:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6384:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6436:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6421:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6441:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6414:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6414:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6464:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6475:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6460:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6460:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6480:32:1",
																		"type": "",
																		"value": "You can not mint with zero Eth"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6453:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6453:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6453:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6522:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6534:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6545:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6530:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6522:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f909b03fec11e17dcc0b1352267ba65c90e3d9c551745ac9e218aef2703fa6f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6351:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6365:4:1",
														"type": ""
													}
												],
												"src": "6200:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6733:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6750:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6761:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6743:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6743:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6784:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6795:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6780:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6780:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6800:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6773:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6773:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6823:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6834:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6819:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6839:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6812:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6812:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6812:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6882:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6894:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6905:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6890:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6890:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6882:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6710:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6724:4:1",
														"type": ""
													}
												],
												"src": "6559:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7020:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7030:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7042:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7053:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7038:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7038:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7030:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7072:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7083:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7065:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7065:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7065:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6989:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7000:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7011:4:1",
														"type": ""
													}
												],
												"src": "6919:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7198:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7208:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7220:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7216:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7216:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7208:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7250:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7265:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7273:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7261:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7261:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7243:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7243:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7243:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7167:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7178:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7189:4:1",
														"type": ""
													}
												],
												"src": "7101:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7338:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7365:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7367:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7367:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7367:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7354:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7361:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7357:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7357:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7351:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7351:13:1"
															},
															"nodeType": "YulIf",
															"src": "7348:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7396:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7407:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7410:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7403:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7403:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7396:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7321:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7324:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7330:3:1",
														"type": ""
													}
												],
												"src": "7290:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7475:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7534:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7536:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7536:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7536:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7506:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7499:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7499:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7492:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7492:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7514:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7525:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7521:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7521:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7529:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7517:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7517:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7511:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7511:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:45:1"
															},
															"nodeType": "YulIf",
															"src": "7485:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7565:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7580:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7583:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7565:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7454:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7457:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7463:7:1",
														"type": ""
													}
												],
												"src": "7423:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7651:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7661:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7675:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7678:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7671:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7671:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7661:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7692:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7722:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7728:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7718:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7718:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7696:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7769:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7771:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7785:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7793:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7781:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7781:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7771:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7749:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7742:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7742:26:1"
															},
															"nodeType": "YulIf",
															"src": "7739:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7859:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7880:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7887:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7892:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7883:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7883:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7873:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7873:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7873:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7924:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7927:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7917:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7917:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7917:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7952:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7955:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7945:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7945:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7945:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7815:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7838:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7846:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7835:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7835:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7812:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7812:38:1"
															},
															"nodeType": "YulIf",
															"src": "7809:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7631:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7640:6:1",
														"type": ""
													}
												],
												"src": "7596:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8013:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8030:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8037:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8042:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8033:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8033:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8023:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8023:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8023:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8070:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8073:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8063:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8063:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8063:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8094:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8097:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8087:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8087:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7981:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_92976511047df17b29e5a4d2526080343d53bb87c2b4288676fd53f33fd5e114__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Cannot exceed fixed supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f909b03fec11e17dcc0b1352267ba65c90e3d9c551745ac9e218aef2703fa6f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"You can not mint with zero Eth\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100fe5760003560e01c806370a082311161009557806395d89b411161006457806395d89b4114610297578063a457c2d7146102ac578063a9059cbb146102cc578063dd62ed3e146102ec578063f2fde38b1461033257600080fd5b806370a0823114610211578063715018a6146102475780637e72fb521461025c5780638da5cb5b1461026f57600080fd5b80632c4e722e116100d15780632c4e722e1461019d578063313ce567146101b357806339509351146101cf57806340c10f19146101ef57600080fd5b806306fdde0314610103578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017d575b600080fd5b34801561010f57600080fd5b50610118610352565b6040516101259190610c1f565b60405180910390f35b34801561013a57600080fd5b5061014e610149366004610bf6565b6103e4565b6040519015158152602001610125565b34801561016a57600080fd5b506002545b604051908152602001610125565b34801561018957600080fd5b5061014e610198366004610bbb565b6103fc565b3480156101a957600080fd5b5061016f60065481565b3480156101bf57600080fd5b5060405160128152602001610125565b3480156101db57600080fd5b5061014e6101ea366004610bf6565b610420565b3480156101fb57600080fd5b5061020f61020a366004610bf6565b61045f565b005b34801561021d57600080fd5b5061016f61022c366004610b68565b6001600160a01b031660009081526020819052604090205490565b34801561025357600080fd5b5061020f6104a0565b61020f61026a366004610b68565b6104d6565b34801561027b57600080fd5b506005546040516001600160a01b039091168152602001610125565b3480156102a357600080fd5b5061011861054d565b3480156102b857600080fd5b5061014e6102c7366004610bf6565b61055c565b3480156102d857600080fd5b5061014e6102e7366004610bf6565b6105ee565b3480156102f857600080fd5b5061016f610307366004610b89565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561033e57600080fd5b5061020f61034d366004610b68565b6105fc565b60606003805461036190610cde565b80601f016020809104026020016040519081016040528092919081815260200182805461038d90610cde565b80156103da5780601f106103af576101008083540402835291602001916103da565b820191906000526020600020905b8154815290600101906020018083116103bd57829003601f168201915b5050505050905090565b6000336103f2818585610697565b5060019392505050565b60003361040a8582856107bb565b61041585858561084d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103f2908290869061045a908790610ca7565b610697565b6005546001600160a01b031633146104925760405162461bcd60e51b815260040161048990610c72565b60405180910390fd5b61049c8282610a1b565b5050565b6005546001600160a01b031633146104ca5760405162461bcd60e51b815260040161048990610c72565b6104d46000610afa565b565b6000600654346104e69190610cbf565b9050806104f260025490565b6104fc9190610ca7565b60075410156104925760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742065786365656420666978656420737570706c790000000000006044820152606401610489565b60606004805461036190610cde565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105e15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610489565b6104158286868403610697565b6000336103f281858561084d565b6005546001600160a01b031633146106265760405162461bcd60e51b815260040161048990610c72565b6001600160a01b03811661068b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610489565b61069481610afa565b50565b6001600160a01b0383166106f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610489565b6001600160a01b03821661075a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610489565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610847578181101561083a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610489565b6108478484848403610697565b50505050565b6001600160a01b0383166108b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610489565b6001600160a01b0382166109135760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610489565b6001600160a01b0383166000908152602081905260409020548181101561098b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610489565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109c2908490610ca7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a0e91815260200190565b60405180910390a3610847565b6001600160a01b038216610a715760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610489565b8060026000828254610a839190610ca7565b90915550506001600160a01b03821660009081526020819052604081208054839290610ab0908490610ca7565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610b6357600080fd5b919050565b600060208284031215610b79578081fd5b610b8282610b4c565b9392505050565b60008060408385031215610b9b578081fd5b610ba483610b4c565b9150610bb260208401610b4c565b90509250929050565b600080600060608486031215610bcf578081fd5b610bd884610b4c565b9250610be660208501610b4c565b9150604084013590509250925092565b60008060408385031215610c08578182fd5b610c1183610b4c565b946020939093013593505050565b6000602080835283518082850152825b81811015610c4b57858101830151858201604001528201610c2f565b81811115610c5c5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610cba57610cba610d19565b500190565b6000816000190483118215151615610cd957610cd9610d19565b500290565b600181811c90821680610cf257607f821691505b60208210811415610d1357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220bfd116215f5382bb60a9491e93d1fe2599231c2638a38bb40b2b26b56013219a64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x7E72FB52 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C4E722E GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xBBB JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x420 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0xB68 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x54D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0xB68 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x361 SWAP1 PUSH2 0xCDE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38D SWAP1 PUSH2 0xCDE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3F2 DUP2 DUP6 DUP6 PUSH2 0x697 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x40A DUP6 DUP3 DUP6 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x415 DUP6 DUP6 DUP6 PUSH2 0x84D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x3F2 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x45A SWAP1 DUP8 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x489 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x49C DUP3 DUP3 PUSH2 0xA1B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x489 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH2 0x4D4 PUSH1 0x0 PUSH2 0xAFA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD CALLVALUE PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0xCBF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x4F2 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x7 SLOAD LT ISZERO PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742065786365656420666978656420737570706C79000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x361 SWAP1 PUSH2 0xCDE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH2 0x415 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x697 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3F2 DUP2 DUP6 DUP6 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x489 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH2 0x694 DUP2 PUSH2 0xAFA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x847 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x489 JUMP JUMPDEST PUSH2 0x847 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x697 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x913 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x9C2 SWAP1 DUP5 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA0E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x489 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA83 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAB0 SWAP1 DUP5 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB79 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB82 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9B JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBA4 DUP4 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP PUSH2 0xBB2 PUSH1 0x20 DUP5 ADD PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBCF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBD8 DUP5 PUSH2 0xB4C JUMP JUMPDEST SWAP3 POP PUSH2 0xBE6 PUSH1 0x20 DUP6 ADD PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC08 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xC11 DUP4 PUSH2 0xB4C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC4B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC2F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC5C JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCBA JUMPI PUSH2 0xCBA PUSH2 0xD19 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCD9 JUMPI PUSH2 0xCD9 PUSH2 0xD19 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCF2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD13 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xD1 AND 0x21 0x5F MSTORE8 DUP3 0xBB PUSH1 0xA9 0x49 0x1E SWAP4 0xD1 INVALID 0x25 SWAP10 0x23 SHR 0x26 CODESIZE LOG3 DUP12 0xB4 SIGNEXTEND 0x2B 0x26 0xB5 PUSH1 0x13 0x21 SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "19436:683:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8902:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11179:197;;;;;;;;;;-1:-1:-1;11179:197:0;;;;;:::i;:::-;;:::i;:::-;;;1653:14:1;;1646:22;1628:41;;1616:2;1601:18;11179:197:0;1583:92:1;9990:106:0;;;;;;;;;;-1:-1:-1;10077:12:0;;9990:106;;;7065:25:1;;;7053:2;7038:18;9990:106:0;7020:76:1;11938:286:0;;;;;;;;;;-1:-1:-1;11938:286:0;;;;;:::i;:::-;;:::i;19480:16::-;;;;;;;;;;;;;;;;9839:91;;;;;;;;;;-1:-1:-1;9839:91:0;;9921:2;7243:36:1;;7231:2;7216:18;9839:91:0;7198:87:1;12619:236:0;;;;;;;;;;-1:-1:-1;12619:236:0;;;;;:::i;:::-;;:::i;19741:93::-;;;;;;;;;;-1:-1:-1;19741:93:0;;;;;:::i;:::-;;:::i;:::-;;10154:125;;;;;;;;;;-1:-1:-1;10154:125:0;;;;;:::i;:::-;-1:-1:-1;;;;;10254:18:0;10228:7;10254:18;;;;;;;;;;;;10154:125;2526:101;;;;;;;;;;;;;:::i;19837:280::-;;;;;;:::i;:::-;;:::i;1894:85::-;;;;;;;;;;-1:-1:-1;1966:6:0;;1894:85;;-1:-1:-1;;;;;1966:6:0;;;1426:51:1;;1414:2;1399:18;1894:85:0;1381:102:1;9113::0;;;;;;;;;;;;;:::i;13342:429::-;;;;;;;;;;-1:-1:-1;13342:429:0;;;;;:::i;:::-;;:::i;10475:189::-;;;;;;;;;;-1:-1:-1;10475:189:0;;;;;:::i;:::-;;:::i;10722:149::-;;;;;;;;;;-1:-1:-1;10722:149:0;;;;;:::i;:::-;-1:-1:-1;;;;;10837:18:0;;;10811:7;10837:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;10722:149;2776:198;;;;;;;;;;-1:-1:-1;2776:198:0;;;;;:::i;:::-;;:::i;8902:98::-;8956:13;8988:5;8981:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8902:98;:::o;11179:197::-;11262:4;741:10;11316:32;741:10;11332:7;11341:6;11316:8;:32::i;:::-;-1:-1:-1;11365:4:0;;11179:197;-1:-1:-1;;;11179:197:0:o;11938:286::-;12065:4;741:10;12121:38;12137:4;741:10;12152:6;12121:15;:38::i;:::-;12169:27;12179:4;12185:2;12189:6;12169:9;:27::i;:::-;-1:-1:-1;12213:4:0;;11938:286;-1:-1:-1;;;;11938:286:0:o;12619:236::-;741:10;12707:4;12786:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;12786:27:0;;;;;;;;;;12707:4;;741:10;12761:66;;741:10;;12786:27;;:40;;12816:10;;12786:40;:::i;:::-;12761:8;:66::i;19741:93::-;1966:6;;-1:-1:-1;;;;;1966:6:0;741:10;2106:23;2098:68;;;;-1:-1:-1;;;2098:68:0;;;;;;;:::i;:::-;;;;;;;;;19810:17:::1;19816:2;19820:6;19810:5;:17::i;:::-;19741:93:::0;;:::o;2526:101::-;1966:6;;-1:-1:-1;;;;;1966:6:0;741:10;2106:23;2098:68;;;;-1:-1:-1;;;2098:68:0;;;;;;;:::i;:::-;2590:30:::1;2617:1;2590:18;:30::i;:::-;2526:101::o:0;19837:280::-;19953:19;19987:4;;19975:9;:16;;;;:::i;:::-;19953:38;;20037:11;20021:13;10077:12;;;9990:106;20021:13;:27;;;;:::i;:::-;20005:11;;:44;;19997:83;;;;-1:-1:-1;;;19997:83:0;;4469:2:1;19997:83:0;;;4451:21:1;4508:2;4488:18;;;4481:30;4547:28;4527:18;;;4520:56;4593:18;;19997:83:0;4441:176:1;9113:102:0;9169:13;9201:7;9194:14;;;;;:::i;13342:429::-;741:10;13435:4;13516:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;13516:27:0;;;;;;;;;;13435:4;;741:10;13561:35;;;;13553:85;;;;-1:-1:-1;;;13553:85:0;;5996:2:1;13553:85:0;;;5978:21:1;6035:2;6015:18;;;6008:30;6074:34;6054:18;;;6047:62;-1:-1:-1;;;6125:18:1;;;6118:35;6170:19;;13553:85:0;5968:227:1;13553:85:0;13672:60;13681:5;13688:7;13716:15;13697:16;:34;13672:8;:60::i;10475:189::-;10554:4;741:10;10608:28;741:10;10625:2;10629:6;10608:9;:28::i;2776:198::-;1966:6;;-1:-1:-1;;;;;1966:6:0;741:10;2106:23;2098:68;;;;-1:-1:-1;;;2098:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2864:22:0;::::1;2856:73;;;::::0;-1:-1:-1;;;2856:73:0;;2894:2:1;2856:73:0::1;::::0;::::1;2876:21:1::0;2933:2;2913:18;;;2906:30;2972:34;2952:18;;;2945:62;-1:-1:-1;;;3023:18:1;;;3016:36;3069:19;;2856:73:0::1;2866:228:1::0;2856:73:0::1;2939:28;2958:8;2939:18;:28::i;:::-;2776:198:::0;:::o;16869:370::-;-1:-1:-1;;;;;17000:19:0;;16992:68;;;;-1:-1:-1;;;16992:68:0;;5591:2:1;16992:68:0;;;5573:21:1;5630:2;5610:18;;;5603:30;5669:34;5649:18;;;5642:62;-1:-1:-1;;;5720:18:1;;;5713:34;5764:19;;16992:68:0;5563:226:1;16992:68:0;-1:-1:-1;;;;;17078:21:0;;17070:68;;;;-1:-1:-1;;;17070:68:0;;3301:2:1;17070:68:0;;;3283:21:1;3340:2;3320:18;;;3313:30;3379:34;3359:18;;;3352:62;-1:-1:-1;;;3430:18:1;;;3423:32;3472:19;;17070:68:0;3273:224:1;17070:68:0;-1:-1:-1;;;;;17149:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;17200:32;;7065:25:1;;;17200:32:0;;7038:18:1;17200:32:0;;;;;;;16869:370;;;:::o;17516:441::-;-1:-1:-1;;;;;10837:18:0;;;17646:24;10837:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;17712:37:0;;17708:243;;17793:6;17773:16;:26;;17765:68;;;;-1:-1:-1;;;17765:68:0;;3704:2:1;17765:68:0;;;3686:21:1;3743:2;3723:18;;;3716:30;3782:31;3762:18;;;3755:59;3831:18;;17765:68:0;3676:179:1;17765:68:0;17875:51;17884:5;17891:7;17919:6;17900:16;:25;17875:8;:51::i;:::-;17516:441;;;;:::o;14234:651::-;-1:-1:-1;;;;;14360:18:0;;14352:68;;;;-1:-1:-1;;;14352:68:0;;5185:2:1;14352:68:0;;;5167:21:1;5224:2;5204:18;;;5197:30;5263:34;5243:18;;;5236:62;-1:-1:-1;;;5314:18:1;;;5307:35;5359:19;;14352:68:0;5157:227:1;14352:68:0;-1:-1:-1;;;;;14438:16:0;;14430:64;;;;-1:-1:-1;;;14430:64:0;;2490:2:1;14430:64:0;;;2472:21:1;2529:2;2509:18;;;2502:30;2568:34;2548:18;;;2541:62;-1:-1:-1;;;2619:18:1;;;2612:33;2662:19;;14430:64:0;2462:225:1;14430:64:0;-1:-1:-1;;;;;14576:15:0;;14554:19;14576:15;;;;;;;;;;;14609:21;;;;14601:72;;;;-1:-1:-1;;;14601:72:0;;4062:2:1;14601:72:0;;;4044:21:1;4101:2;4081:18;;;4074:30;4140:34;4120:18;;;4113:62;-1:-1:-1;;;4191:18:1;;;4184:36;4237:19;;14601:72:0;4034:228:1;14601:72:0;-1:-1:-1;;;;;14707:15:0;;;:9;:15;;;;;;;;;;;14725:20;;;14707:38;;14765:13;;;;;;;;:23;;14739:6;;14707:9;14765:23;;14739:6;;14765:23;:::i;:::-;;;;;;;;14819:2;-1:-1:-1;;;;;14804:26:0;14813:4;-1:-1:-1;;;;;14804:26:0;;14823:6;14804:26;;;;7065:25:1;;7053:2;7038:18;;7020:76;14804:26:0;;;;;;;;14841:37;18541:121;15161:389;-1:-1:-1;;;;;15244:21:0;;15236:65;;;;-1:-1:-1;;;15236:65:0;;6761:2:1;15236:65:0;;;6743:21:1;6800:2;6780:18;;;6773:30;6839:33;6819:18;;;6812:61;6890:18;;15236:65:0;6733:181:1;15236:65:0;15388:6;15372:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;15404:18:0;;:9;:18;;;;;;;;;;:28;;15426:6;;15404:9;:28;;15426:6;;15404:28;:::i;:::-;;;;-1:-1:-1;;15447:37:0;;7065:25:1;;;-1:-1:-1;;;;;15447:37:0;;;15464:1;;15447:37;;7053:2:1;7038:18;15447:37:0;;;;;;;19741:93;;:::o;3128:187::-;3220:6;;;-1:-1:-1;;;;;3236:17:0;;;-1:-1:-1;;;;;;3236:17:0;;;;;;;3268:40;;3220:6;;;3236:17;3220:6;;3268:40;;3201:16;;3268:40;3128:187;;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:1:o;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:1:o;1680:603::-;1792:4;1821:2;1850;1839:9;1832:21;1882:6;1876:13;1925:6;1920:2;1909:9;1905:18;1898:34;1950:4;1963:140;1977:6;1974:1;1971:13;1963:140;;;2072:14;;;2068:23;;2062:30;2038:17;;;2057:2;2034:26;2027:66;1992:10;;1963:140;;;2121:6;2118:1;2115:13;2112:2;;;2191:4;2186:2;2177:6;2166:9;2162:22;2158:31;2151:45;2112:2;-1:-1:-1;2267:2:1;2246:15;-1:-1:-1;;2242:29:1;2227:45;;;;2274:2;2223:54;;1801:482;-1:-1:-1;;;1801:482:1:o;4622:356::-;4824:2;4806:21;;;4843:18;;;4836:30;4902:34;4897:2;4882:18;;4875:62;4969:2;4954:18;;4796:182::o;7290:128::-;7330:3;7361:1;7357:6;7354:1;7351:13;7348:2;;;7367:18;;:::i;:::-;-1:-1:-1;7403:9:1;;7338:80::o;7423:168::-;7463:7;7529:1;7525;7521:6;7517:14;7514:1;7511:21;7506:1;7499:9;7492:17;7488:45;7485:2;;;7536:18;;:::i;:::-;-1:-1:-1;7576:9:1;;7475:116::o;7596:380::-;7675:1;7671:12;;;;7718;;;7739:2;;7793:4;7785:6;7781:17;7771:27;;7739:2;7846;7838:6;7835:14;7815:18;7812:38;7809:2;;;7892:10;7887:3;7883:20;7880:1;7873:31;7927:4;7924:1;7917:15;7955:4;7952:1;7945:15;7809:2;;7651:325;;;:::o;7981:127::-;8042:10;8037:3;8033:20;8030:1;8023:31;8073:4;8070:1;8063:15;8097:4;8094:1;8087:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "685800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22547",
								"balanceOf(address)": "1263",
								"buyToken(address)": "infinite",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "23544",
								"increaseAllowance(address,uint256)": "23612",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1090",
								"rate()": "1018",
								"renounceOwnership()": "23462",
								"symbol()": "infinite",
								"totalSupply()": "1049",
								"transfer(address,uint256)": "44448",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "23722"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19561,
									"end": 19735,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 19561,
									"end": 19735,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19561,
									"end": 19735,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19561,
									"end": 19735,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19561,
									"end": 19735,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19561,
									"end": 19735,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19561,
									"end": 19735,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19561,
									"end": 19735,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 19561,
									"end": 19735,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19561,
									"end": 19735,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19561,
									"end": 19735,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2930B130AA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "52544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8798,
									"end": 8803,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8795,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 8790,
									"end": 8803,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8820,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8813,
									"end": 8820,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8813,
									"end": 8830,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8724,
									"end": 8837,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1779,
									"end": 1811,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1798,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1798,
									"end": 1808,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1798,
									"end": 1808,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1779,
									"end": 1811,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1779,
									"end": 1811,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1779,
									"end": 1811,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19618,
									"end": 19623,
									"name": "PUSH",
									"source": 0,
									"value": "2710"
								},
								{
									"begin": 19611,
									"end": 19615,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 19611,
									"end": 19623,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19657,
									"end": 19673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 9921,
									"end": 9923,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 19657,
									"end": 19659,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 19657,
									"end": 19673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 19657,
									"end": 19673,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19657,
									"end": 19673,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 19657,
									"end": 19673,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19647,
									"end": 19673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 19647,
									"end": 19673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19647,
									"end": 19654,
									"name": "PUSH",
									"source": 0,
									"value": "F4240"
								},
								{
									"begin": 19647,
									"end": 19673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19647,
									"end": 19673,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19647,
									"end": 19673,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 19647,
									"end": 19673,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19633,
									"end": 19644,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 19633,
									"end": 19673,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19683,
									"end": 19728,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 19689,
									"end": 19699,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19711,
									"end": 19727,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 9921,
									"end": 9923,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 19711,
									"end": 19713,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 19711,
									"end": 19727,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 19711,
									"end": 19727,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19711,
									"end": 19727,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 19711,
									"end": 19727,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19701,
									"end": 19727,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 19701,
									"end": 19727,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19701,
									"end": 19708,
									"name": "PUSH",
									"source": 0,
									"value": "F4240"
								},
								{
									"begin": 19701,
									"end": 19727,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19701,
									"end": 19727,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19701,
									"end": 19727,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 19701,
									"end": 19727,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19683,
									"end": 19688,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 19683,
									"end": 19728,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19683,
									"end": 19728,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 19683,
									"end": 19728,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 662,
									"end": 758,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 662,
									"end": 758,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 741,
									"end": 751,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 741,
									"end": 751,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 662,
									"end": 758,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 3128,
									"end": 3315,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3128,
									"end": 3315,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3220,
									"end": 3226,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3220,
									"end": 3226,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3220,
									"end": 3226,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3236,
									"end": 3253,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3236,
									"end": 3253,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3236,
									"end": 3253,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3236,
									"end": 3253,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3236,
									"end": 3253,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3236,
									"end": 3253,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3236,
									"end": 3253,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3236,
									"end": 3253,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3236,
									"end": 3253,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3236,
									"end": 3253,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3268,
									"end": 3308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3268,
									"end": 3308,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3220,
									"end": 3226,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3220,
									"end": 3226,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3220,
									"end": 3226,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3236,
									"end": 3253,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3220,
									"end": 3226,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3220,
									"end": 3226,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3268,
									"end": 3308,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3268,
									"end": 3308,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3201,
									"end": 3217,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3201,
									"end": 3217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3268,
									"end": 3308,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3128,
									"end": 3315,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3128,
									"end": 3315,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3128,
									"end": 3315,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 15161,
									"end": 15550,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 15161,
									"end": 15550,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15244,
									"end": 15265,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15244,
									"end": 15265,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 267,
									"end": 328,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 15236,
									"end": 15301,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15388,
									"end": 15394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15372,
									"end": 15384,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 15372,
									"end": 15384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15372,
									"end": 15394,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15404,
									"end": 15422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15422,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15413,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15404,
									"end": 15422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15422,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15422,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15404,
									"end": 15422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15422,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15422,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15404,
									"end": 15422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15422,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15432,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 15426,
									"end": 15432,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15426,
									"end": 15432,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15413,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 15404,
									"end": 15432,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15426,
									"end": 15432,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15426,
									"end": 15432,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 15404,
									"end": 15432,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 15404,
									"end": 15432,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 15404,
									"end": 15432,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15432,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15432,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15404,
									"end": 15432,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 520,
									"end": 545,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15464,
									"end": 15465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15464,
									"end": 15465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 493,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15447,
									"end": 15484,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 15161,
									"end": 15550,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15161,
									"end": 15550,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15161,
									"end": 15550,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "tag",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 556,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 556,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 596,
									"end": 599,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 627,
									"end": 628,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 623,
									"end": 629,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 620,
									"end": 621,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 617,
									"end": 630,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 614,
									"end": 616,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 614,
									"end": 616,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 669,
									"end": 678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 669,
									"end": 678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 604,
									"end": 684,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 689,
									"end": 1111,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 689,
									"end": 1111,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 778,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 821,
									"end": 826,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 856,
									"end": 863,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 846,
									"end": 854,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 843,
									"end": 864,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 915,
									"end": 919,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 911,
									"end": 912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 907,
									"end": 913,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 903,
									"end": 920,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 897,
									"end": 901,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 894,
									"end": 921,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 891,
									"end": 893,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 891,
									"end": 893,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 891,
									"end": 893,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 974,
									"end": 981,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 964,
									"end": 972,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 960,
									"end": 982,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 957,
									"end": 959,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 957,
									"end": 959,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 957,
									"end": 959,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1010,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1010,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 959,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 957,
									"end": 959,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1073,
									"end": 1095,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1073,
									"end": 1095,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1073,
									"end": 1095,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1073,
									"end": 1095,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1048,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1048,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 839,
									"end": 842,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 753,
									"end": 1111,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 753,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 753,
									"end": 1111,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 753,
									"end": 1111,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 753,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 753,
									"end": 1111,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1116,
									"end": 1256,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1116,
									"end": 1256,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1174,
									"end": 1179,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1244,
									"end": 1248,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1234,
									"end": 1242,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1249,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1224,
									"end": 1228,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1250,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1184,
									"end": 1256,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1184,
									"end": 1256,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1261,
									"end": 2067,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1261,
									"end": 2067,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1315,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1348,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1330,
									"end": 1332,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1330,
									"end": 1332,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1382,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1395,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1395,
									"end": 1400,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1330,
									"end": 1332,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1330,
									"end": 1332,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1433,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1419,
									"end": 1421,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1466,
									"end": 1467,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1480,
									"end": 1485,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1480,
									"end": 1485,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 1421,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1419,
									"end": 1421,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1524,
									"end": 1583,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1583,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1583,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1524,
									"end": 1583,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1597,
									"end": 1598,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1592,
									"end": 1722,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1722,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1722,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1592,
									"end": 1722,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1722,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 1504,
									"end": 1722,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1583,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1524,
									"end": 1583,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1555,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1545,
									"end": 1555,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1545,
									"end": 1555,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1573,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1568,
									"end": 1573,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1722,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1592,
									"end": 1722,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1632,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1619,
									"end": 1627,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1616,
									"end": 1633,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1636,
									"end": 1654,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1636,
									"end": 1654,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1636,
									"end": 1654,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1636,
									"end": 1654,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1636,
									"end": 1654,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1694,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1694,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1707,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1707,
									"end": 1712,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1722,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 1504,
									"end": 1722,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1722,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1796,
									"end": 1804,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1809,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1790,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 1781,
									"end": 1785,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1791,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1774,
									"end": 1810,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1768,
									"end": 1770,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 1758,
									"end": 1766,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1771,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1752,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1744,
									"end": 1748,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1741,
									"end": 1753,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1737,
									"end": 1772,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1811,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1731,
									"end": 1733,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1731,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1731,
									"end": 1733,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1843,
									"end": 1862,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1862,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1862,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1875,
									"end": 1880,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1875,
									"end": 1880,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1731,
									"end": 1733,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1731,
									"end": 1733,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1947,
									"end": 1955,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1941,
									"end": 1945,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1922,
									"end": 1956,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1922,
									"end": 1956,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1922,
									"end": 1956,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1992,
									"end": 1998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 1989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 1990,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 1999,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1971,
									"end": 1978,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 2000,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1967,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 1965,
									"end": 1967,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2061,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2061,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1320,
									"end": 2067,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1320,
									"end": 2067,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1320,
									"end": 2067,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1320,
									"end": 2067,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1320,
									"end": 2067,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1320,
									"end": 2067,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1320,
									"end": 2067,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2072,
									"end": 2240,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2072,
									"end": 2240,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2119,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2178,
									"end": 2179,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2174,
									"end": 2175,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2170,
									"end": 2176,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2180,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2164,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2181,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2155,
									"end": 2156,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2158,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2137,
									"end": 2182,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2136,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2134,
									"end": 2136,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2185,
									"end": 2203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2185,
									"end": 2203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2185,
									"end": 2203,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2185,
									"end": 2203,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2185,
									"end": 2203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2225,
									"end": 2234,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2225,
									"end": 2234,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2124,
									"end": 2240,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2245,
									"end": 2625,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2245,
									"end": 2625,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2324,
									"end": 2325,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2320,
									"end": 2332,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2320,
									"end": 2332,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2320,
									"end": 2332,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2320,
									"end": 2332,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2379,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2379,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2379,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2388,
									"end": 2390,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2388,
									"end": 2390,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2442,
									"end": 2446,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 2434,
									"end": 2440,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2430,
									"end": 2447,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2388,
									"end": 2390,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2388,
									"end": 2390,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2497,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2487,
									"end": 2493,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2484,
									"end": 2498,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2499,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2458,
									"end": 2460,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2458,
									"end": 2460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2458,
									"end": 2460,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2551,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2536,
									"end": 2539,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2532,
									"end": 2552,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2529,
									"end": 2530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2522,
									"end": 2553,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2580,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2573,
									"end": 2574,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2566,
									"end": 2581,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2608,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2601,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2594,
									"end": 2609,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2458,
									"end": 2460,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2458,
									"end": 2460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2458,
									"end": 2460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2625,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2625,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2625,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2625,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2630,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2630,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2691,
									"end": 2701,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2686,
									"end": 2689,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2682,
									"end": 2702,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2672,
									"end": 2703,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2722,
									"end": 2726,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2719,
									"end": 2720,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2712,
									"end": 2727,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2746,
									"end": 2750,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2743,
									"end": 2744,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2736,
									"end": 2751,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2662,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2662,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19436,
									"end": 20119,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bfd116215f5382bb60a9491e93d1fe2599231c2638a38bb40b2b26b56013219a64736f6c63430008040033",
									".code": [
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "7E72FB52"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "2C4E722E"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "2C4E722E"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 20119,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1668,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1583,
											"end": 1675,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10077,
											"end": 10089,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10077,
											"end": 10089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7053,
											"end": 7055,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7020,
											"end": 7096,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19496,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9921,
											"end": 9923,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7243,
											"end": 7279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7233,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7216,
											"end": 7234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9839,
											"end": 9930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7198,
											"end": 7285,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10279,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1381,
											"end": 1483,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10811,
											"end": 10818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10848,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10871,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8956,
											"end": 8969,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8988,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11262,
											"end": 11266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11316,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11332,
											"end": 11339,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11316,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11316,
											"end": 11348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11316,
											"end": 11348,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11316,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11365,
											"end": 11369,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11365,
											"end": 11369,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11179,
											"end": 11376,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12065,
											"end": 12069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 12137,
											"end": 12141,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12152,
											"end": 12158,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 12121,
											"end": 12159,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12121,
											"end": 12159,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 12121,
											"end": 12159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 12179,
											"end": 12183,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12185,
											"end": 12187,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12169,
											"end": 12196,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12169,
											"end": 12196,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 12169,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12213,
											"end": 12217,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12213,
											"end": 12217,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11938,
											"end": 12224,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 12619,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12797,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 12761,
											"end": 12827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12786,
											"end": 12826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12816,
											"end": 12826,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12816,
											"end": 12826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12786,
											"end": 12826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12786,
											"end": 12826,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12786,
											"end": 12826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12761,
											"end": 12827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2106,
											"end": 2129,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19810,
											"end": 19827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 19816,
											"end": 19818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19820,
											"end": 19826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19810,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 19810,
											"end": 19827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19810,
											"end": 19827,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 19810,
											"end": 19827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2106,
											"end": 2129,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2590,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2590,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2590,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2590,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2627,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 19837,
											"end": 20117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19953,
											"end": 19972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19987,
											"end": 19991,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19987,
											"end": 19991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19975,
											"end": 19984,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19975,
											"end": 19991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 19975,
											"end": 19991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19975,
											"end": 19991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19975,
											"end": 19991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 19975,
											"end": 19991,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19975,
											"end": 19991,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 19975,
											"end": 19991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19953,
											"end": 19991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19953,
											"end": 19991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20037,
											"end": 20048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20021,
											"end": 20034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 10077,
											"end": 10089,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10077,
											"end": 10089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10077,
											"end": 10089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 10096,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20021,
											"end": 20034,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 20021,
											"end": 20034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20021,
											"end": 20048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20021,
											"end": 20048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20021,
											"end": 20048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20021,
											"end": 20048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 20021,
											"end": 20048,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20021,
											"end": 20048,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20021,
											"end": 20048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20005,
											"end": 20016,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20005,
											"end": 20016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20005,
											"end": 20049,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20005,
											"end": 20049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19997,
											"end": 20080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 19997,
											"end": 20080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19997,
											"end": 20080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19997,
											"end": 20080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19997,
											"end": 20080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19997,
											"end": 20080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4471,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19997,
											"end": 20080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19997,
											"end": 20080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19997,
											"end": 20080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4510,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 4488,
											"end": 4506,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4488,
											"end": 4506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4481,
											"end": 4511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F742065786365656420666978656420737570706C79000000000000"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4611,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4593,
											"end": 4611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19997,
											"end": 20080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4441,
											"end": 4617,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 9113,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9169,
											"end": 9182,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13342,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13435,
											"end": 13439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13527,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13534,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13435,
											"end": 13439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13435,
											"end": 13439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13561,
											"end": 13596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13561,
											"end": 13596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13561,
											"end": 13596,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13561,
											"end": 13596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 5998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5978,
											"end": 5999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6037,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6108,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6125,
											"end": 6143,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6125,
											"end": 6143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6189,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6170,
											"end": 6189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5968,
											"end": 6195,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 13553,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13672,
											"end": 13732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 13681,
											"end": 13686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13688,
											"end": 13695,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13716,
											"end": 13731,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13697,
											"end": 13713,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13697,
											"end": 13731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13672,
											"end": 13680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 13672,
											"end": 13732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 10475,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10554,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10627,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10608,
											"end": 10636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2106,
											"end": 2129,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2098,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2864,
											"end": 2886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2864,
											"end": 2886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2856,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2856,
											"end": 2929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2856,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2856,
											"end": 2929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2856,
											"end": 2929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2856,
											"end": 2929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2896,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2856,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2856,
											"end": 2929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2856,
											"end": 2929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 3007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3069,
											"end": 3088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2866,
											"end": 3094,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2929,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2856,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2958,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2939,
											"end": 2967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2939,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2939,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2974,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16869,
											"end": 17239,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16869,
											"end": 17239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17000,
											"end": 17019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17000,
											"end": 17019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5632,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5720,
											"end": 5738,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5720,
											"end": 5738,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5563,
											"end": 5789,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16992,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17078,
											"end": 17099,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17078,
											"end": 17099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3283,
											"end": 3304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3342,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3379,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3414,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3491,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3472,
											"end": 3491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3273,
											"end": 3497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 17070,
											"end": 17138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17160,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17185,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17185,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17200,
											"end": 17232,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 17239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 17239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 17239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 17239,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17646,
											"end": 17670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10848,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17712,
											"end": 17749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17708,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 17708,
											"end": 17951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17773,
											"end": 17789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17773,
											"end": 17799,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17773,
											"end": 17799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3704,
											"end": 3706,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3745,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3782,
											"end": 3813,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17765,
											"end": 17833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 17884,
											"end": 17889,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17891,
											"end": 17898,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17919,
											"end": 17925,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17900,
											"end": 17916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17900,
											"end": 17925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 17875,
											"end": 17926,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17875,
											"end": 17926,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 17875,
											"end": 17926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17516,
											"end": 17957,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14234,
											"end": 14885,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14234,
											"end": 14885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5187,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5167,
											"end": 5188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5226,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5204,
											"end": 5222,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5204,
											"end": 5222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5297,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5243,
											"end": 5261,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5243,
											"end": 5261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5243,
											"end": 5261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5314,
											"end": 5332,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5314,
											"end": 5332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5307,
											"end": 5342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5378,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5359,
											"end": 5378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5157,
											"end": 5384,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 14352,
											"end": 14420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14438,
											"end": 14454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2602,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2681,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2662,
											"end": 2681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2462,
											"end": 2687,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 14430,
											"end": 14494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14554,
											"end": 14573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14630,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4081,
											"end": 4099,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4081,
											"end": 4099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4256,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4237,
											"end": 4256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4034,
											"end": 4262,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 14601,
											"end": 14673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14725,
											"end": 14745,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14725,
											"end": 14745,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14725,
											"end": 14745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14745,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14778,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14739,
											"end": 14745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14739,
											"end": 14745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14739,
											"end": 14745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14739,
											"end": 14745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14765,
											"end": 14788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14817,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14823,
											"end": 14829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7053,
											"end": 7055,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7096,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14841,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 18541,
											"end": 18662,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15161,
											"end": 15550,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 15161,
											"end": 15550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15244,
											"end": 15265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 15265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15236,
											"end": 15301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15236,
											"end": 15301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15236,
											"end": 15301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15236,
											"end": 15301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15236,
											"end": 15301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6743,
											"end": 6764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6802,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6780,
											"end": 6798,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6780,
											"end": 6798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6773,
											"end": 6803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6872,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 6908,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6890,
											"end": 6908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6733,
											"end": 6914,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15301,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15236,
											"end": 15301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15388,
											"end": 15394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15384,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15372,
											"end": 15384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15394,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15432,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 15404,
											"end": 15432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15432,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 15404,
											"end": 15432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15404,
											"end": 15432,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 15404,
											"end": 15432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15432,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15464,
											"end": 15465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15464,
											"end": 15465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7055,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15447,
											"end": 15484,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19741,
											"end": 19834,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3128,
											"end": 3315,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3128,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3253,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3253,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3253,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3308,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3268,
											"end": 3308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3308,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3315,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 382,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 461,
											"end": 467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 501,
											"end": 508,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 497,
											"end": 520,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 493,
											"end": 525,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 490,
											"end": 492,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 528,
											"end": 550,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 490,
											"end": 492,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 609,
											"end": 657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 609,
											"end": 657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 820,
											"end": 842,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 882,
											"end": 891,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 853,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 901,
											"end": 949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 981,
											"end": 999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1218,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1275,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1680,
											"end": 2283,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1680,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1848,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1889,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1918,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1984,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2059,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2115,
											"end": 2128,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2195,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2246,
											"end": 2261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 2283,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4622,
											"end": 4978,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4622,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4806,
											"end": 4827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4936,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4897,
											"end": 4899,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4875,
											"end": 4937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4954,
											"end": 4972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 4972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4978,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7290,
											"end": 7418,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7290,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7363,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7351,
											"end": 7364,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7350,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7348,
											"end": 7350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7403,
											"end": 7412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7403,
											"end": 7412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7418,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7423,
											"end": 7591,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7423,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7527,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7517,
											"end": 7531,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7515,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7532,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7506,
											"end": 7507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7499,
											"end": 7508,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7509,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7488,
											"end": 7533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7487,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 7485,
											"end": 7487,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7576,
											"end": 7585,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7596,
											"end": 7976,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 7596,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7675,
											"end": 7676,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7671,
											"end": 7683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7683,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7730,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7739,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 7739,
											"end": 7741,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7797,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 7785,
											"end": 7791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7798,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7739,
											"end": 7741,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 7739,
											"end": 7741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7846,
											"end": 7848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7838,
											"end": 7844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7849,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7812,
											"end": 7850,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7902,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7887,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7883,
											"end": 7903,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 7881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7873,
											"end": 7904,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7927,
											"end": 7931,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7924,
											"end": 7925,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7917,
											"end": 7932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7952,
											"end": 7953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 7960,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7981,
											"end": 8108,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7981,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8052,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8037,
											"end": 8040,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8033,
											"end": 8053,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8077,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8070,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8063,
											"end": 8078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8097,
											"end": 8101,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8094,
											"end": 8095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyToken(address)": "7e72fb52",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"rate()": "2c4e722e",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RabaToken_flat.sol\":\"RabaToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RabaToken_flat.sol\":{\"keccak256\":\"0x7f0b35534ba6ff633d95c63accb259df4ad4fdcbbe5a4c253eef84f4c7bc59d9\",\"urls\":[\"bzz-raw://ade4e58e9493e5dcbaf5449f76416fa5a17858ce1461043c9db66b193eb71abd\",\"dweb:/ipfs/QmUKPSvhS9HcfkJJb2AQn7qrufkPdijiBNii1Phm3tKeFC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> RabaToken_flat.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "RabaToken_flat.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"RabaToken_flat.sol": {
				"ast": {
					"absolutePath": "RabaToken_flat.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							808
						],
						"IERC20": [
							201
						],
						"IERC20Metadata": [
							224
						],
						"Ownable": [
							124
						],
						"RabaToken": [
							902
						]
					},
					"id": 903,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "133:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "648:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "724:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "741:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "741:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "734:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:9:0"
									},
									"scope": 21,
									"src": "662:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "831:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "848:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "848:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "841:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "773:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "781:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "815:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "815:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:16:0"
									},
									"scope": 21,
									"src": "764:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 903,
							"src": "630:235:0",
							"usedErrors": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "976:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1526:7:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "1526:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "1002:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 124,
							"linearizedBaseContracts": [
								124,
								21
							],
							"name": "Ownable",
							"nameLocation": "1515:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1556:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 124,
									"src": "1540:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1540:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 33,
									"name": "OwnershipTransferred",
									"nameLocation": "1575:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1612:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1596:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1643:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1627:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:57:0"
									},
									"src": "1569:84:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1769:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 38,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1798:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1798:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1779:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1779:32:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1659:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1766:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1769:0:0"
									},
									"scope": 124,
									"src": "1755:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "1949:30:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1966:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 48,
												"id": 50,
												"nodeType": "Return",
												"src": "1959:13:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1824:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1903:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1908:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1940:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1939:9:0"
									},
									"scope": 124,
									"src": "1894:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "2088:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "2106:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2106:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 58,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2117:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2117:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2106:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2131:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2098:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "2098:68:0"
											},
											{
												"id": 64,
												"nodeType": "PlaceholderStatement",
												"src": "2176:1:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "1985:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 66,
									"name": "onlyOwner",
									"nameLocation": "2076:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2085:2:0"
									},
									"src": "2067:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2580:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2617:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2609:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 73,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2609:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2609:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 72,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2590:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "2590:30:0"
											}
										]
									},
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2190:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 70,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 69,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "2570:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2570:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2535:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2552:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2580:0:0"
									},
									"scope": 124,
									"src": "2526:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2846:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2864:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2884:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2876:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2876:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2876:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2864:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2888:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2856:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2856:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2958:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2939:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2939:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2939:28:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2633:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 86,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "2836:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2836:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2785:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2811:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2803:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2802:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2846:0:0"
									},
									"scope": 124,
									"src": "2776:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3191:124:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3209:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3201:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3201:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"id": 111,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3220:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3201:25:0"
											},
											{
												"expression": {
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3236:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 114,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "3245:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3236:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "3236:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 118,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3289:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 119,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "3299:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3268:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3268:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "EmitStatement",
												"src": "3263:45:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "2980:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3137:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3164:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3156:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3155:18:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:0:0"
									},
									"scope": 124,
									"src": "3128:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 903,
							"src": "1497:1820:0",
							"usedErrors": []
						},
						{
							"id": 125,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3451:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 126,
								"nodeType": "StructuredDocumentation",
								"src": "3476:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "IERC20",
							"nameLocation": "3557:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3570:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3650:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3661:2:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3687:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3686:9:0"
									},
									"scope": 201,
									"src": "3641:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "3702:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3788:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3806:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3798:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3797:17:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3838:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:9:0"
									},
									"scope": 201,
									"src": "3779:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3853:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4069:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4086:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4078:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4098:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4090:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4077:28:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4124:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4123:6:0"
									},
									"scope": 201,
									"src": "4060:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4136:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4414:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4432:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4424:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4447:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4439:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4423:32:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:9:0"
									},
									"scope": 201,
									"src": "4405:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "4494:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5150:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5166:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5158:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5183:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5175:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5157:33:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5209:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5208:6:0"
									},
									"scope": 201,
									"src": "5141:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "5221:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5522:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5552:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5544:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5574:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5566:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5594:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5586:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5534:72:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5625:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5625:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5624:6:0"
									},
									"scope": 201,
									"src": "5513:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5637:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 191,
									"name": "Transfer",
									"nameLocation": "5806:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5831:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "5815:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5853:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "5837:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5865:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "5857:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5814:57:0"
									},
									"src": "5800:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "5878:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 200,
									"name": "Approval",
									"nameLocation": "6037:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6062:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6046:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6085:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6069:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6102:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6094:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6045:63:0"
									},
									"src": "6031:78:0"
								}
							],
							"scope": 903,
							"src": "3547:2564:0",
							"usedErrors": []
						},
						{
							"id": 202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6268:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 204,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 201,
										"src": "6439:6:0"
									},
									"id": 205,
									"nodeType": "InheritanceSpecifier",
									"src": "6439:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 203,
								"nodeType": "StructuredDocumentation",
								"src": "6294:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 224,
							"linearizedBaseContracts": [
								224,
								201
							],
							"name": "IERC20Metadata",
							"nameLocation": "6421:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "6452:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6520:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6524:2:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "6550:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6550:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6549:15:0"
									},
									"scope": 224,
									"src": "6511:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "6571:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6641:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6647:2:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6673:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6673:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6672:15:0"
									},
									"scope": 224,
									"src": "6632:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "6694:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "6773:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6781:2:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6807:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 220,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6807:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6806:7:0"
									},
									"scope": 224,
									"src": "6764:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 903,
							"src": "6411:405:0",
							"usedErrors": []
						},
						{
							"id": 225,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6948:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 227,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "8167:7:0"
									},
									"id": 228,
									"nodeType": "InheritanceSpecifier",
									"src": "8167:7:0"
								},
								{
									"baseName": {
										"id": 229,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 201,
										"src": "8176:6:0"
									},
									"id": 230,
									"nodeType": "InheritanceSpecifier",
									"src": "8176:6:0"
								},
								{
									"baseName": {
										"id": 231,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 224,
										"src": "8184:14:0"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "8184:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "6976:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 808,
							"linearizedBaseContracts": [
								808,
								224,
								201,
								21
							],
							"name": "ERC20",
							"nameLocation": "8158:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 236,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "8241:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "8205:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 235,
										"keyType": {
											"id": 233,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8213:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8205:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 234,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8224:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 242,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "8313:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "8257:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 241,
										"keyType": {
											"id": 237,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8265:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8257:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 240,
											"keyType": {
												"id": 238,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8284:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "8276:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 239,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8295:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 244,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "8347:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "8331:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8331:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 246,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "8381:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "8366:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 245,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8366:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "8407:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "8392:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 247,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8392:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "8780:57:0",
										"statements": [
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 256,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "8790:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 257,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "8798:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8790:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "8790:13:0"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 260,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "8813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 261,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "8823:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8813:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "8813:17:0"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "8421:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 265,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "8750:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "8736:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8736:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "8771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "8757:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8757:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8735:44:0"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8780:0:0"
									},
									"scope": 808,
									"src": "8724:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										211
									],
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "8971:29:0",
										"statements": [
											{
												"expression": {
													"id": 272,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 246,
													"src": "8988:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 271,
												"id": 273,
												"nodeType": "Return",
												"src": "8981:12:0"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "8843:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8911:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 268,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8938:8:0"
									},
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:2:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "8956:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8956:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8955:15:0"
									},
									"scope": 808,
									"src": "8902:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										217
									],
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "9184:31:0",
										"statements": [
											{
												"expression": {
													"id": 282,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "9201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 281,
												"id": 283,
												"nodeType": "Return",
												"src": "9194:14:0"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "9006:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "9122:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 278,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9151:8:0"
									},
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9128:2:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "9169:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9169:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9168:15:0"
									},
									"scope": 808,
									"src": "9113:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										223
									],
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "9904:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9921:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 291,
												"id": 293,
												"nodeType": "Return",
												"src": "9914:9:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "9221:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "9848:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9879:8:0"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9856:2:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "9897:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 289,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9897:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9896:7:0"
									},
									"scope": 808,
									"src": "9839:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										132
									],
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "10060:36:0",
										"statements": [
											{
												"expression": {
													"id": 302,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 244,
													"src": "10077:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 301,
												"id": 303,
												"nodeType": "Return",
												"src": "10070:19:0"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "9936:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "9999:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 298,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10033:8:0"
									},
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10010:2:0"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "10051:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10050:9:0"
									},
									"scope": 808,
									"src": "9990:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										140
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "10237:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 314,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "10254:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 316,
													"indexExpression": {
														"id": 315,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10254:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 317,
												"nodeType": "Return",
												"src": "10247:25:0"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "10102:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "10163:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 310,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10210:8:0"
									},
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10181:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "10173:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10172:17:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "10228:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10227:9:0"
									},
									"scope": 808,
									"src": "10154:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										150
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "10560:104:0",
										"statements": [
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10578:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "10570:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 330,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10570:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 332,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "10586:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10586:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10570:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "10618:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "10625:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "10629:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "10608:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10608:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "10608:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10653:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 329,
												"id": 342,
												"nodeType": "Return",
												"src": "10646:11:0"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "10285:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "10484:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 326,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10536:8:0"
									},
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10501:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "10493:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10513:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "10505:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10492:28:0"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "10554:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10554:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10553:6:0"
									},
									"scope": 808,
									"src": "10475:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										160
									],
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "10820:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 355,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "10837:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 357,
														"indexExpression": {
															"id": 356,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "10849:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10837:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 359,
													"indexExpression": {
														"id": 358,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "10856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10837:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 354,
												"id": 360,
												"nodeType": "Return",
												"src": "10830:34:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "10670:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "10731:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 351,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10793:8:0"
									},
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10749:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10741:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10764:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10756:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10740:32:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10811:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10810:9:0"
									},
									"scope": 808,
									"src": "10722:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										170
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "11268:108:0",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11286:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "11278:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11278:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "11294:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11294:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11278:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "11325:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "11332:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11341:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 378,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "11316:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11316:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "11316:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11365:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 372,
												"id": 385,
												"nodeType": "Return",
												"src": "11358:11:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "10877:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "11188:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 369,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11244:8:0"
									},
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11204:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "11196:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11221:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "11213:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11195:33:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "11262:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11261:6:0"
									},
									"scope": 808,
									"src": "11179:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										182
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "12071:153:0",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "12089:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "12081:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 400,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12081:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 402,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "12099:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12099:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12081:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "12137:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "12143:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "12152:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 405,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "12121:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12121:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "12121:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 412,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "12179:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "12185:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "12189:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "12169:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12169:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "12169:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12213:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 399,
												"id": 418,
												"nodeType": "Return",
												"src": "12206:11:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "11382:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "11947:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 396,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12047:8:0"
									},
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11977:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "11969:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11999:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "11991:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12019:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "12011:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11959:72:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "12065:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12065:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12064:6:0"
									},
									"scope": 808,
									"src": "11938:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "12713:142:0",
										"statements": [
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "12731:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "12723:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 430,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12723:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 432,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "12739:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12739:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12723:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "12770:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "12777:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 438,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "12786:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 440,
																	"indexExpression": {
																		"id": 439,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "12798:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12786:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 442,
																"indexExpression": {
																	"id": 441,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "12805:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12786:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 443,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "12816:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12786:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 435,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "12761:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12761:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "12761:66:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12844:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 429,
												"id": 448,
												"nodeType": "Return",
												"src": "12837:11:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "12230:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "12628:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12654:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "12646:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "12671:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "12663:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12645:37:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "12707:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12707:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12706:6:0"
									},
									"scope": 808,
									"src": "12619:236:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "13441:330:0",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "13459:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "13451:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13451:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "13467:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13467:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13451:28:0"
											},
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "13497:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "13489:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13489:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 467,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "13516:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 469,
														"indexExpression": {
															"id": 468,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "13528:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13516:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 471,
													"indexExpression": {
														"id": 470,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "13535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13516:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13489:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "13561:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 475,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "13581:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13561:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13598:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13553:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "13553:85:0"
											},
											{
												"id": 488,
												"nodeType": "UncheckedBlock",
												"src": "13648:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 481,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "13681:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 482,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "13688:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 483,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "13697:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 484,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "13716:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13697:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 480,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "13672:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13672:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 487,
														"nodeType": "ExpressionStatement",
														"src": "13672:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 490,
												"nodeType": "Return",
												"src": "13753:11:0"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "12861:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "13351:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13377:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "13369:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "13394:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "13386:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13368:42:0"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "13435:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13434:6:0"
									},
									"scope": 808,
									"src": "13342:429:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "14342:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 503,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "14360:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14376:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14368:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 504,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14368:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14368:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14360:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14380:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14352:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14352:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "14352:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "14438:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14444:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 514,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14444:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14444:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14438:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14456:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14430:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "14430:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "14526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14532:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14536:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "14505:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14505:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "14505:38:0"
											},
											{
												"assignments": [
													529
												],
												"declarations": [
													{
														"constant": false,
														"id": 529,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "14562:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 568,
														"src": "14554:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 528,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14554:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"baseExpression": {
														"id": 530,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "14576:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 532,
													"indexExpression": {
														"id": 531,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "14586:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14576:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14554:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 535,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "14609:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 536,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "14624:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14609:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14632:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14601:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "14601:72:0"
											},
											{
												"id": 549,
												"nodeType": "UncheckedBlock",
												"src": "14683:73:0",
												"statements": [
													{
														"expression": {
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 541,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "14707:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 543,
																"indexExpression": {
																	"id": 542,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "14717:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14707:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 544,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "14725:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 545,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "14739:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14725:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14707:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 548,
														"nodeType": "ExpressionStatement",
														"src": "14707:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 550,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "14765:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 552,
														"indexExpression": {
															"id": 551,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14775:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14765:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 553,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "14782:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14765:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "14765:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 557,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "14813:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14819:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14823:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 556,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "14804:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14804:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "EmitStatement",
												"src": "14799:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "14861:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14867:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14871:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "14841:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14841:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "14841:37:0"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "13777:452:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "14243:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "14262:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14292:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "14284:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14312:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "14304:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14252:72:0"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14342:0:0"
									},
									"scope": 808,
									"src": "14234:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "15226:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 578,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "15244:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15263:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15255:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 579,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15255:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15255:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15244:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15267:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15236:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15236:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "15236:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15341:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15333:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 588,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15333:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15333:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 592,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "15345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 593,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "15354:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "15312:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15312:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "15312:49:0"
											},
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 596,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "15372:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 597,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "15388:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15372:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "15372:22:0"
											},
											{
												"expression": {
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 600,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "15404:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 602,
														"indexExpression": {
															"id": 601,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "15414:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15404:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 603,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "15426:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15404:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "15404:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15464:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15456:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 607,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15456:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15456:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "15468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "15477:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 606,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "15447:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15447:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "EmitStatement",
												"src": "15442:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15523:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15515:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 616,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15515:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15515:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "15527:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "15536:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "15495:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15495:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "15495:48:0"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "14891:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "15170:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15184:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "15176:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15201:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "15193:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15175:33:0"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15226:0:0"
									},
									"scope": 808,
									"src": "15161:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "15935:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 634,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "15953:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15972:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15964:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 635,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15964:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15964:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15953:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15976:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15945:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15945:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "15945:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "16044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16061:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16053:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16053:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16053:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16065:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16023:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16023:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "16023:49:0"
											},
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "16091:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "16083:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16083:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"baseExpression": {
														"id": 654,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "16108:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 656,
													"indexExpression": {
														"id": 655,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "16118:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16108:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16083:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 659,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "16144:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 660,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "16162:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16144:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16170:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 658,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16136:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "16136:71:0"
											},
											{
												"id": 673,
												"nodeType": "UncheckedBlock",
												"src": "16217:79:0",
												"statements": [
													{
														"expression": {
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 665,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "16241:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 667,
																"indexExpression": {
																	"id": 666,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "16251:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "16241:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 668,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "16262:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 669,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "16279:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16262:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16241:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 672,
														"nodeType": "ExpressionStatement",
														"src": "16241:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 674,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "16305:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 675,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "16321:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16305:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "16305:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 679,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "16352:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16369:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16361:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 680,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16361:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16361:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 678,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "16343:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16343:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "EmitStatement",
												"src": "16338:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 688,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "16411:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16428:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16420:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 689,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16420:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16420:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16432:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 687,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "16391:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16391:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "16391:48:0"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "15556:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "15879:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "15885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15910:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "15902:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15884:33:0"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15935:0:0"
									},
									"scope": 808,
									"src": "15870:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "16982:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 708,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "17000:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17017:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17009:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 709,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17009:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17009:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17000:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17021:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16992:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16992:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "16992:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 718,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "17078:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17097:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17089:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 719,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17089:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17089:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17078:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17101:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17070:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17070:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "17070:68:0"
											},
											{
												"expression": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 727,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "17149:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 730,
															"indexExpression": {
																"id": 728,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "17161:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17149:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 731,
														"indexExpression": {
															"id": 729,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "17168:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17149:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 732,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "17179:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17149:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "17149:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 736,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "17209:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "17216:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "17225:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 735,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "17200:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17200:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "EmitStatement",
												"src": "17195:37:0"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "16452:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "16878:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16904:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "16896:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16927:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "16919:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16952:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "16944:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16886:78:0"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16982:0:0"
									},
									"scope": 808,
									"src": "16869:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "17636:321:0",
										"statements": [
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "17654:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "17646:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 752,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17646:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 758,
												"initialValue": {
													"arguments": [
														{
															"id": 755,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "17683:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "17690:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 754,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "17673:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17673:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17646:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 759,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "17712:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17737:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 761,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17737:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 760,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "17732:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17732:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "17732:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17712:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "17708:243:0",
												"trueBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "17751:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 767,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "17773:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 768,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "17793:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17773:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17801:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 766,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "17765:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17765:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 772,
															"nodeType": "ExpressionStatement",
															"src": "17765:68:0"
														},
														{
															"id": 781,
															"nodeType": "UncheckedBlock",
															"src": "17847:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 774,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 745,
																				"src": "17884:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 775,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 747,
																				"src": "17891:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 776,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "17900:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 777,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "17919:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17900:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 773,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 742,
																			"src": "17875:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17875:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 780,
																	"nodeType": "ExpressionStatement",
																	"src": "17875:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "17245:266:0",
										"text": " @dev Spend `amount` form the allowance of `owner` toward `spender`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "17525:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17558:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "17550:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17581:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "17573:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "17598:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17540:78:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17636:0:0"
									},
									"scope": 808,
									"src": "17516:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "18660:2:0",
										"statements": []
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "17963:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "18550:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18588:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18580:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18610:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18602:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18630:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18622:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18570:72:0"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18660:0:0"
									},
									"scope": 808,
									"src": "18541:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "19368:2:0",
										"statements": []
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "18668:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "19259:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19296:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "19288:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19318:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "19310:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19338:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "19330:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19278:72:0"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19368:0:0"
									},
									"scope": 808,
									"src": "19250:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 903,
							"src": "8149:11223:0",
							"usedErrors": []
						},
						{
							"id": 809,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "19409:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 810,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 808,
										"src": "19458:5:0"
									},
									"id": 811,
									"nodeType": "InheritanceSpecifier",
									"src": "19458:5:0"
								},
								{
									"baseName": {
										"id": 812,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 124,
										"src": "19465:7:0"
									},
									"id": 813,
									"nodeType": "InheritanceSpecifier",
									"src": "19465:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 902,
							"linearizedBaseContracts": [
								902,
								124,
								808,
								224,
								201,
								21
							],
							"name": "RabaToken",
							"nameLocation": "19445:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2c4e722e",
									"id": 815,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "19492:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "19480:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 814,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "19480:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 817,
									"mutability": "mutable",
									"name": "FixedSupply",
									"nameLocation": "19537:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "19532:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 816,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "19532:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "19601:134:0",
										"statements": [
											{
												"expression": {
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 824,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "19611:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030",
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19618:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "19611:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "19611:12:0"
											},
											{
												"expression": {
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 828,
														"name": "FixedSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "19633:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31303030303030",
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19657:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 831,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "19663:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																		"typeString": "function () view returns (uint8)"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19663:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "19657:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19647:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19633:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "19633:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 838,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "19689:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "19689:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19701:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19711:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 842,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "19717:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19717:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "19711:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19701:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 837,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "19683:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19683:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "19683:45:0"
											}
										]
									},
									"id": 849,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "52616261546f6b656e",
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19581:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_97f8159a212301aa432d9f6bedb193b10b2f7966b7e0602a3ab4d9cbaa2211b8",
														"typeString": "literal_string \"RabaToken\""
													},
													"value": "RabaToken"
												},
												{
													"hexValue": "52544b",
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19594:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c98889344f00741ee7ee428dbb51d624197df6eb936d4a035c88680f6010a3dc",
														"typeString": "literal_string \"RTK\""
													},
													"value": "RTK"
												}
											],
											"id": 822,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 819,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 808,
												"src": "19575:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19575:25:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19572:2:0"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19601:0:0"
									},
									"scope": 902,
									"src": "19561:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "19800:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 859,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "19816:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "19820:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 858,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "19810:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19810:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "19810:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 856,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 855,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "19790:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19790:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "19750:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19763:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "19755:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19775:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "19767:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19754:28:0"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19800:0:0"
									},
									"scope": 902,
									"src": "19741:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "19882:235:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 870,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19897:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "19897:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19910:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19897:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e206e6f74206d696e742077697468207a65726f20457468",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19913:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f909b03fec11e17dcc0b1352267ba65c90e3d9c551745ac9e218aef2703fa6f4",
																"typeString": "literal_string \"You can not mint with zero Eth\""
															},
															"value": "You can not mint with zero Eth"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f909b03fec11e17dcc0b1352267ba65c90e3d9c551745ac9e218aef2703fa6f4",
																"typeString": "literal_string \"You can not mint with zero Eth\""
															}
														],
														"id": 869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19889:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19889:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "19889:57:0"
											},
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "amountToBuy",
														"nameLocation": "19961:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 900,
														"src": "19953:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 877,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19953:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 879,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "19975:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "19975:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 881,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "19987:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19975:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19953:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 885,
																"name": "FixedSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "20005:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 886,
																				"name": "totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 305,
																				"src": "20021:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20021:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 888,
																			"name": "amountToBuy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 878,
																			"src": "20037:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20021:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 890,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20020:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20005:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742065786365656420666978656420737570706c79",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20051:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_92976511047df17b29e5a4d2526080343d53bb87c2b4288676fd53f33fd5e114",
																"typeString": "literal_string \"Cannot exceed fixed supply\""
															},
															"value": "Cannot exceed fixed supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_92976511047df17b29e5a4d2526080343d53bb87c2b4288676fd53f33fd5e114",
																"typeString": "literal_string \"Cannot exceed fixed supply\""
															}
														],
														"id": 884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19997:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19997:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "19997:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 896,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "20092:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "amountToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "20096:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 895,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "20086:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20086:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "20086:22:0"
											}
										]
									},
									"functionSelector": "7e72fb52",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "19846:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19863:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "19855:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19855:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19854:12:0"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19882:0:0"
									},
									"scope": 902,
									"src": "19837:280:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 903,
							"src": "19436:683:0",
							"usedErrors": []
						}
					],
					"src": "108:20011:0"
				},
				"id": 0
			}
		}
	}
}